<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Zhibin's blog]]></title>
  <link href="http://SteveVallay.github.io/atom.xml" rel="self"/>
  <link href="http://SteveVallay.github.io/"/>
  <updated>2014-05-22T23:16:11+08:00</updated>
  <id>http://SteveVallay.github.io/</id>
  <author>
    <name><![CDATA[zhibin]]></name>
    <email><![CDATA[zhibinwang.q@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[hearthstone_cards]]></title>
    <link href="http://SteveVallay.github.io/blog/2014/05/22/hearthstone-cards/"/>
    <updated>2014-05-22T23:08:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2014/05/22/hearthstone-cards</id>
    <content type="html"><![CDATA[<p>Hearthstone cards for android</p>

<!--more-->


<p><img src="http://SteveVallay.github.io/images/blog/hearthstone_card0.png" alt="" /></p>

<p><img src="http://SteveVallay.github.io/images/blog/hearthstone_card1.png" alt="" /></p>

<p><img src="http://SteveVallay.github.io/images/blog/hearthstone_card2.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android sms]]></title>
    <link href="http://SteveVallay.github.io/blog/2014/05/22/sms/"/>
    <updated>2014-05-22T17:32:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2014/05/22/sms</id>
    <content type="html"><![CDATA[<p>Android  SMS Process</p>

<!-- more -->


<p><img src="http://SteveVallay.github.io/images/blog/android_sms.png" alt="graph" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[permissions on folder]]></title>
    <link href="http://SteveVallay.github.io/blog/2014/05/12/permissions-on-folder/"/>
    <updated>2014-05-12T21:46:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2014/05/12/permissions-on-folder</id>
    <content type="html"><![CDATA[<p>Never foget your dream, never ~</p>

<!--more-->


<p>对于一个文件来说，我们都知道，RWX 三个permission 分别对应读、写 和执行权限。但是对于目录来说，它又不能被执行，它的 X 权限有何用呢？如果没有 X 权限，是否可以修改目录中的文件呢？</p>

<p>让我们来实验一下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir fz
</span><span class='line'><span class="nv">$ </span>ls -ld fz
</span><span class='line'>drwxrwxr-x 2 goodluck goodluck 4096 2014-05-12 21:57 fz
</span></code></pre></td></tr></table></div></figure>


<p>创建成功，默认权限775</p>

<p>添加几个文件进来</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>fz/
</span><span class='line'><span class="nv">$ </span>touch a b c
</span><span class='line'><span class="nv">$ </span>ls -al fz
</span><span class='line'>drwxrwxr-x 2 goodluck goodluck 4096 2014-05-12 21:59 .
</span><span class='line'>drwxr-xr-x 8 goodluck goodluck 4096 2014-05-12 21:59 ..
</span><span class='line'>-rw-rw-r-- 1 goodluck goodluck    0 2014-05-12 21:59 a
</span><span class='line'>-rw-rw-r-- 1 goodluck goodluck    0 2014-05-12 21:59 b
</span><span class='line'>-rw-rw-r-- 1 goodluck goodluck    0 2014-05-12 21:59 c
</span></code></pre></td></tr></table></div></figure>


<p>让我们对fz单独设置 RWX 权限来看看是什么效果。</p>

<p>-R</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chmod 444 fz <span class="c">#修改 folder 的 permission 需要 root </span>
</span><span class='line'><span class="nv">$ </span>ls -ld fz
</span><span class='line'>dr--r--r-- 2 goodluck goodluck 4096 2014-05-12 21:59 fz
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ls -al fz
</span><span class='line'>ls: cannot access fz/.: Permission denied
</span><span class='line'>ls: cannot access fz/..: Permission denied
</span><span class='line'>ls: cannot access fz/a: Permission denied
</span><span class='line'>ls: cannot access fz/c: Permission denied
</span><span class='line'>ls: cannot access fz/b: Permission denied
</span><span class='line'>total 0
</span><span class='line'>d????????? ? ? ? ?                ? .
</span><span class='line'>d????????? ? ? ? ?                ? ..
</span><span class='line'>-????????? ? ? ? ?                ? a
</span><span class='line'>-????????? ? ? ? ?                ? b
</span><span class='line'>-????????? ? ? ? ?                ? c
</span><span class='line'><span class="nv">$ </span>cat fz/a
</span><span class='line'>cat: fz/a: Permission denied
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>fz
</span><span class='line'>bash: <span class="nb">cd</span>: fz: Permission denied
</span></code></pre></td></tr></table></div></figure>


<p>只有 R 权限的话，只能知道 fz 里面有 . .. 两个目录和 a b c 三个文件。文件属性和文件的内容都不能读取，当然也不能写。</p>

<p>-W</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chmod 222 fz
</span><span class='line'><span class="nv">$ </span>ls -ld fz
</span><span class='line'>d-w--w--w- 2 goodluck goodluck 4096 2014-05-12 21:59 fz
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ls fz
</span><span class='line'>ls: cannot open directory fz: Permission denied
</span><span class='line'><span class="nv">$ </span>cat fz/a
</span><span class='line'>cat: fz/a: Permission denied
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;aaa&quot;</span> &gt;fz/a
</span><span class='line'>bash: fz/a: Permission denied
</span><span class='line'>mv fz/a fz/d
</span><span class='line'>mv: accessing <span class="sb">`</span>fz/d<span class="err">&#39;</span>: Permission denied
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>fz
</span><span class='line'>bash: <span class="nb">cd</span>: fz: Permission denied
</span></code></pre></td></tr></table></div></figure>


<p>只有 W 权限,啥也干不了</p>

<p>-X</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chmod 111 fz
</span><span class='line'><span class="nv">$ </span>ls -ld fz
</span><span class='line'>d--x--x--x 2 goodluck goodluck 4096 2014-05-12 21:59 fz
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ls -al fz
</span><span class='line'>ls: cannot open directory fz: Permission denied
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;aaa&quot;</span> &gt; fz/a  <span class="c">#success</span>
</span><span class='line'><span class="nv">$ </span>cat fz/a
</span><span class='line'>aaa
</span><span class='line'>chmod +x fz/a <span class="c">#success</span>
</span><span class='line'><span class="nv">$ </span>ls -l fz/a
</span><span class='line'>-rw-rw-r-- 1 goodluck goodluck 4 2014-05-12 22:16 fz/a
</span><span class='line'><span class="nv">$ </span>rm fz/a
</span><span class='line'>rm: cannot remove <span class="sb">`</span>fz/a<span class="s1">&#39;: Permission denied</span>
</span><span class='line'><span class="s1">$ cd fz</span>
</span><span class='line'><span class="s1">$ cd fz</span>
</span><span class='line'><span class="s1">$ ls</span>
</span><span class='line'><span class="s1">ls: cannot open directory .: Permission denied</span>
</span><span class='line'><span class="s1">$ touch ff</span>
</span><span class='line'><span class="s1">touch: cannot touch `ff&#39;</span>: Permission denied
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>chmod 775 fz/a <span class="c">#fail but not prompt error</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$?</span>
</span><span class='line'>0 <span class="c">#seems success but not changed</span>
</span><span class='line'>-rw-rw-r-- 1 goodluck goodluck 11 2014-05-12 22:26 fz/a
</span></code></pre></td></tr></table></div></figure>


<p>只有X权限可以读，写,修改内部文件内容，修改内部文件属性，不能rename/delete/create 文件,chmod 没有报错，却也没有生效</p>

<p>-RX</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chmod 555 fz
</span><span class='line'><span class="nv">$ </span>ls -ld fz
</span><span class='line'>dr-xr-xr-x 2 goodluck goodluck 4096 2014-05-12 22:19 fz
</span><span class='line'><span class="nv">$ </span>ls -al fz
</span><span class='line'>total 12
</span><span class='line'>dr-xr-xr-x 2 goodluck goodluck 4096 2014-05-12 22:19 .
</span><span class='line'>drwxr-xr-x 8 goodluck goodluck 4096 2014-05-12 21:59 ..
</span><span class='line'>-rw-rw-r-- 1 goodluck goodluck   11 2014-05-12 22:26 a
</span><span class='line'>-rw-rw-r-- 1 goodluck goodluck    0 2014-05-12 21:59 b
</span><span class='line'>-rw-rw-r-- 1 goodluck goodluck    0 2014-05-12 21:59 c
</span></code></pre></td></tr></table></div></figure>


<p>可以正常读、写、执行文件，cd 到目录，查看文件属性。不能 rename/delete/create 文件</p>

<p>奇怪的一点是在 cd 到 fz 可以使用 chmod 修改 a 文件的permisson, 但是在 fz 外面目录则不生效，奇怪!</p>

<p>-RW</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chmod 666 fz
</span><span class='line'><span class="nv">$ </span>ls -al fz
</span><span class='line'>ls: cannot access fz/.: Permission denied
</span><span class='line'>ls: cannot access fz/..: Permission denied
</span><span class='line'>ls: cannot access fz/a: Permission denied
</span><span class='line'>ls: cannot access fz/c: Permission denied
</span><span class='line'>ls: cannot access fz/b: Permission denied
</span><span class='line'>total 0
</span><span class='line'>d????????? ? ? ? ?                ? .
</span><span class='line'>d????????? ? ? ? ?                ? ..
</span><span class='line'>-????????? ? ? ? ?                ? a
</span><span class='line'>-????????? ? ? ? ?                ? b
</span><span class='line'>-????????? ? ? ? ?                ? c
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>rm fz/a
</span><span class='line'>rm: cannot remove <span class="sb">`</span>fz/a<span class="s1">&#39;: Permission denied</span>
</span><span class='line'><span class="s1">$ touch fz/d</span>
</span><span class='line'><span class="s1">touch: cannot touch `fz/d&#39;</span>: Permission denied
</span></code></pre></td></tr></table></div></figure>


<p>基本上和只有 R 权限一样，只能获取目录里面文件的文件名，不能读、不能写、不能执行、不能获取文件属性、不能 delete/rename/create 文件。</p>

<p>看得出来，没有 X 的 W 没有什么作用</p>

<p>-WX</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chmod 333 fz
</span><span class='line'><span class="nv">$ </span>ls -ld fz
</span><span class='line'>d-wx-wx-wx 2 goodluck goodluck 4096 2014-05-12 22:19 fz
</span><span class='line'><span class="nv">$ </span>cat fz/a
</span><span class='line'><span class="nb">echo </span>aaa
</span><span class='line'><span class="nv">$ </span>ls -al fz/a
</span><span class='line'>-rwxrwxrwx 1 goodluck goodluck 9 2014-05-12 22:38 fz/a
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;bbb&quot;</span>&gt; fz/b
</span><span class='line'><span class="nv">$ </span>cat fz/b
</span><span class='line'>bbb
</span><span class='line'><span class="nv">$ </span>rm fz/b <span class="c">#success</span>
</span><span class='line'><span class="nv">$ </span>touch fz/e  <span class="c">#success</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>fz <span class="c">#success</span>
</span></code></pre></td></tr></table></div></figure>


<p>只是不能获取目录中的文件名列表，如果你已经知道某个文件的名字，那么则可以读、写、执行、获取属性、delete/rename/create 都没问题。</p>

<p>总结一下，linux 下，目录的权限属性：</p>

<ol>
<li>R 读取目录中包含的文件名和文件类型</li>
<li>W create/rename/delete 目录中的文件(仅在同时有 X 权限的时候生效)</li>
<li>X access/search 目录中的文件</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[unlink]]></title>
    <link href="http://SteveVallay.github.io/blog/2014/04/28/unlink/"/>
    <updated>2014-04-28T22:23:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2014/04/28/unlink</id>
    <content type="html"><![CDATA[<p>Do the things you love more than yourself.</p>

<!--more-->


<p>继续 APUE 学习。</p>

<p>Linux 很多命令行命令和C标准库的很多接口有对应关系。pwd 命令对应 getcwd 接口，ls 命令对应 lstat 接口，rm 对应 remove 接口，link 对应 link 接口。。。。</p>

<p>有这么一个命令叫 unlink , 它对应的 C 库接口也叫 unlink.</p>

<p>man unlink 这么解释
unlink &ndash; call the unlink function to remove the specified file</p>

<p>man 2 unlink 接口 解释更清楚一点</p>

<p>unlink &ndash; delete a name and possibly the file it refers to</p>

<pre><code>   #include &lt;unistd.h&gt;

   int unlink(const char *pathname);
</code></pre>

<blockquote><p>unlink() deletes a name from the file system.  If that name was the last link to a file and no processes have the file open the file is deleted and the space it was using is made available for reuse.</p>

<p>If the name was the last link to a file but any processes still have the file open the file will remain in existence  until the last file descriptor referring to it is closed.</p>

<p>If the name referred to a symbolic link the link is removed.</p>

<p>If  the  name  referred to a socket, fifo or device the name for it is removed but processes which have the object open may continue to use it.</p></blockquote>

<p>unlink 从文件系统中删除一个名字，如果名字是文件的最后一个链接，则删除这个文件。这是什么意思呢，在linux 文件系统里，每个文件都是一个包含文件名的结构体，结构体并没有包含文件所包含的数据，而是有一个指针指向文件实际的存储位置。</p>

<p>删除文件的时候，首先要判断这个文件名（结构体）是否是文件的最后一个链接，如果是才把真正的文件内容删除。</p>

<p>如果 unlink 的时候，有进程打开了这个文件，那么直到所有的文件句柄关闭的时候才会删除。</p>

<p>如果文件是 symbolic link（软链接） 的话，unlink 会删除 link, 而不会影响 link 指向的文件。</p>

<p>如果是 socket, fifo,或 device,那么文件 name 被删除，如果有进程在打开，到进程关闭掉文件句柄时，才删除实际的存储内容。</p>

<p>unlink 的一个常见用法是：一个进程在运行的时候创建或者打开了一个文件，在进程异常退出的时候希望删除这个文件，那么打开这个文件之后就可以立马调用 unlink，进程在的时候文件不会被删除，到进程结束的时候文件会自动被删除。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 启动流程]]></title>
    <link href="http://SteveVallay.github.io/blog/2014/01/09/android-start-process/"/>
    <updated>2014-01-09T14:23:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2014/01/09/android-start-process</id>
    <content type="html"><![CDATA[<p>保持你的好奇心和创造力。</p>

<!--more-->


<p>早就好奇， Android 启动的流程是怎样的，正好有时间好好看一下。</p>

<p>在追溯代码之前，先让我们提出几个问题，Andorid 启动过程中需要完成什么任务？然后，站在设计者的角度，想一想，如果是你来设计，你会怎么做？</p>

<ol>
<li>系统服务什么形式存在？如何启动？</li>
<li>系统服务如何为应用提供服务？</li>
<li>应用如何被启动，应用之间如何交互？</li>
<li>应用如何安装/升级？</li>
<li>权限如何控制？</li>
</ol>


<p>暂时想到这些问题，没有细节到具体的模块(如 Telephony,Multimedia 等).下面，来揭开 Android 启动之谜.</p>

<h2>Power 键  到 User Space</h2>

<p>按下 Power 键的时候，系统加电，触发 bootloader (代码见 bootable/),bootloader 载入内存，bootloader 引导 kernel, kernel 启动，kernel 启动用户空间的 init 进程。</p>

<p>这部分还不是很熟悉，这里不做详解。:&ndash;)</p>

<h2>Init 进程</h2>

<p>init 进程是内核启动后调用的第一个用户空间的程序，从 init 开始，系统开始进入用户空间。</p>

<p>init 是一个二进制文件，代码在: <strong>system/core/init/init.c</strong></p>

<p>打开 init.c （kitkat)，找到 <code>main</code> 函数,来看看 init 主要做了哪些工作（&hellip;表示省略部分代码)：</p>

<figure class='code'><figcaption><span>system/core/init/init.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="cm">/*清除 umask*/</span>
</span><span class='line'>    <span class="n">umask</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*创建目录，挂载文件系统*/</span>
</span><span class='line'>    <span class="n">mkdir</span><span class="p">(</span><span class="s">&quot;/dev&quot;</span><span class="p">,</span> <span class="mo">0755</span><span class="p">);</span>
</span><span class='line'>    <span class="n">mkdir</span><span class="p">(</span><span class="s">&quot;/proc&quot;</span><span class="p">,</span> <span class="mo">0755</span><span class="p">);</span>
</span><span class='line'>    <span class="n">mkdir</span><span class="p">(</span><span class="s">&quot;/sys&quot;</span><span class="p">,</span> <span class="mo">0755</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mount</span><span class="p">(</span><span class="s">&quot;tmpfs&quot;</span><span class="p">,</span> <span class="s">&quot;/dev&quot;</span><span class="p">,</span> <span class="s">&quot;tmpfs&quot;</span><span class="p">,</span> <span class="n">MS_NOSUID</span><span class="p">,</span> <span class="s">&quot;mode=0755&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">mkdir</span><span class="p">(</span><span class="s">&quot;/dev/pts&quot;</span><span class="p">,</span> <span class="mo">0755</span><span class="p">);</span>
</span><span class='line'>    <span class="n">mkdir</span><span class="p">(</span><span class="s">&quot;/dev/socket&quot;</span><span class="p">,</span> <span class="mo">0755</span><span class="p">);</span>
</span><span class='line'>    <span class="n">mount</span><span class="p">(</span><span class="s">&quot;devpts&quot;</span><span class="p">,</span> <span class="s">&quot;/dev/pts&quot;</span><span class="p">,</span> <span class="s">&quot;devpts&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>    <span class="n">mount</span><span class="p">(</span><span class="s">&quot;proc&quot;</span><span class="p">,</span> <span class="s">&quot;/proc&quot;</span><span class="p">,</span> <span class="s">&quot;proc&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>    <span class="n">mount</span><span class="p">(</span><span class="s">&quot;sysfs&quot;</span><span class="p">,</span> <span class="s">&quot;/sys&quot;</span><span class="p">,</span> <span class="s">&quot;sysfs&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*猜猜这句是干什么？很有意思 哈哈！*/</span>
</span><span class='line'>    <span class="n">close</span><span class="p">(</span><span class="n">open</span><span class="p">(</span><span class="s">&quot;/dev/.booting&quot;</span><span class="p">,</span> <span class="n">O_WRONLY</span> <span class="o">|</span> <span class="n">O_CREAT</span><span class="p">,</span> <span class="mo">0000</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*打开 /dev/null 并将 0,1,2 重定向到 /dev/null*/</span>
</span><span class='line'>    <span class="n">open_devnull_stdio</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">klog_init</span><span class="p">();</span>
</span><span class='line'>    <span class="cm">/*初始化 property 详见[android properties][101]*/</span>
</span><span class='line'>    <span class="n">property_init</span><span class="p">();</span>
</span><span class='line'>    <span class="n">get_hardware_name</span><span class="p">(</span><span class="n">hardware</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">revision</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">process_kernel_cmdline</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*selinux 相关*/</span>
</span><span class='line'>    <span class="k">union</span> <span class="n">selinux_callback</span> <span class="n">cb</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cb</span><span class="p">.</span><span class="n">func_log</span> <span class="o">=</span> <span class="n">klog_write</span><span class="p">;</span>
</span><span class='line'>    <span class="n">selinux_set_callback</span><span class="p">(</span><span class="n">SELINUX_CB_LOG</span><span class="p">,</span> <span class="n">cb</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">cb</span><span class="p">.</span><span class="n">func_audit</span> <span class="o">=</span> <span class="n">audit_callback</span><span class="p">;</span>
</span><span class='line'>    <span class="n">selinux_set_callback</span><span class="p">(</span><span class="n">SELINUX_CB_AUDIT</span><span class="p">,</span> <span class="n">cb</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">selinux_initialize</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">restorecon</span><span class="p">(</span><span class="s">&quot;/dev&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">restorecon</span><span class="p">(</span><span class="s">&quot;/dev/socket&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">restorecon</span><span class="p">(</span><span class="s">&quot;/dev/__properties__&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">restorecon_recursive</span><span class="p">(</span><span class="s">&quot;/sys&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*load 默认的properties*/</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">is_charger</span><span class="p">)</span>
</span><span class='line'>        <span class="n">property_load_boot_defaults</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*init 的主要工作之一:解析 init.rc */</span>
</span><span class='line'>    <span class="n">INFO</span><span class="p">(</span><span class="s">&quot;reading config file</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">init_parse_config_file</span><span class="p">(</span><span class="s">&quot;/init.rc&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*action_for_each_trigger 和 queue_builtin_action 将 action/command 都是加入到 command 队列里面，等待合适的时机执行*/</span>
</span><span class='line'>    <span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;early-init&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">wait_for_coldboot_done_action</span><span class="p">,</span> <span class="s">&quot;wait_for_coldboot_done&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">mix_hwrng_into_linux_rng_action</span><span class="p">,</span> <span class="s">&quot;mix_hwrng_into_linux_rng&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">keychord_init_action</span><span class="p">,</span> <span class="s">&quot;keychord_init&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">console_init_action</span><span class="p">,</span> <span class="s">&quot;console_init&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* execute all the boot actions to get us started */</span>
</span><span class='line'>    <span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;init&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">is_charger</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;early-fs&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'>        <span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;fs&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'>        <span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;post-fs&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'>        <span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;post-fs-data&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">mix_hwrng_into_linux_rng_action</span><span class="p">,</span> <span class="s">&quot;mix_hwrng_into_linux_rng&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">property_service_init_action</span><span class="p">,</span> <span class="s">&quot;property_service_init&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">signal_init_action</span><span class="p">,</span> <span class="s">&quot;signal_init&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">check_startup_action</span><span class="p">,</span> <span class="s">&quot;check_startup&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">is_charger</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;charger&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;early-boot&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'>        <span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;boot&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* run all property triggers based on current state of the properties */</span>
</span><span class='line'>    <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">queue_property_triggers_action</span><span class="p">,</span> <span class="s">&quot;queue_property_triggers&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#if BOOTCHART</span>
</span><span class='line'>    <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">bootchart_init_action</span><span class="p">,</span> <span class="s">&quot;bootchart_init&quot;</span><span class="p">);</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*解析完 init.rc 之后到此的这一段，好像都是在想队列里面添加 action/command*/</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*什么时候来执行呢？下面！*/</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*init 最后进入了一个无限循环，不会主动退出！*/</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(;;)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">nr</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">timeout</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*执行command 队列里面的一条命令!*/</span>
</span><span class='line'>        <span class="n">execute_one_command</span><span class="p">();</span>
</span><span class='line'>        <span class="n">restart_processes</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*添加property fd (socket） 到 ufds */</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">property_set_fd_init</span> <span class="o">&amp;&amp;</span> <span class="n">get_property_set_fd</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">fd</span> <span class="o">=</span> <span class="n">get_property_set_fd</span><span class="p">();</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">events</span> <span class="o">=</span> <span class="n">POLLIN</span><span class="p">;</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">revents</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">fd_count</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>            <span class="n">property_set_fd_init</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*添加 signal fd 到 ufds*/</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">signal_fd_init</span> <span class="o">&amp;&amp;</span> <span class="n">get_signal_fd</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">fd</span> <span class="o">=</span> <span class="n">get_signal_fd</span><span class="p">();</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">events</span> <span class="o">=</span> <span class="n">POLLIN</span><span class="p">;</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">revents</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">fd_count</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>            <span class="n">signal_fd_init</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*添加 keychord ?fd 到 ufds*/</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">keychord_fd_init</span> <span class="o">&amp;&amp;</span> <span class="n">get_keychord_fd</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">fd</span> <span class="o">=</span> <span class="n">get_keychord_fd</span><span class="p">();</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">events</span> <span class="o">=</span> <span class="n">POLLIN</span><span class="p">;</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">revents</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">fd_count</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>            <span class="n">keychord_fd_init</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*计算进程restart 时间*/</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">process_needs_restart</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">timeout</span> <span class="o">=</span> <span class="p">(</span><span class="n">process_needs_restart</span> <span class="o">-</span> <span class="n">gettime</span><span class="p">())</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">timeout</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>                <span class="n">timeout</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">action_queue_empty</span><span class="p">()</span> <span class="o">||</span> <span class="n">cur_action</span><span class="p">)</span>
</span><span class='line'>            <span class="n">timeout</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#if BOOTCHART</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">bootchart_count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">timeout</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">timeout</span> <span class="o">&gt;</span> <span class="n">BOOTCHART_POLLING_MS</span><span class="p">)</span>
</span><span class='line'>                <span class="n">timeout</span> <span class="o">=</span> <span class="n">BOOTCHART_POLLING_MS</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">bootchart_step</span><span class="p">()</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="o">--</span><span class="n">bootchart_count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">bootchart_finish</span><span class="p">();</span>
</span><span class='line'>                <span class="n">bootchart_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*poll出 ufds 的事件，等待 timeout 时间*/</span>
</span><span class='line'>        <span class="n">nr</span> <span class="o">=</span> <span class="n">poll</span><span class="p">(</span><span class="n">ufds</span><span class="p">,</span> <span class="n">fd_count</span><span class="p">,</span> <span class="n">timeout</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">nr</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>       <span class="cm">/*处理 ufds 事件!(property set , signal,keychord?)*/</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">fd_count</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">ufds</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">revents</span> <span class="o">==</span> <span class="n">POLLIN</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">ufds</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">fd</span> <span class="o">==</span> <span class="n">get_property_set_fd</span><span class="p">())</span>
</span><span class='line'>                    <span class="n">handle_property_set_fd</span><span class="p">();</span>
</span><span class='line'>                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">ufds</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">fd</span> <span class="o">==</span> <span class="n">get_keychord_fd</span><span class="p">())</span>
</span><span class='line'>                    <span class="n">handle_keychord</span><span class="p">();</span>
</span><span class='line'>                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">ufds</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">fd</span> <span class="o">==</span> <span class="n">get_signal_fd</span><span class="p">())</span>
</span><span class='line'>                    <span class="n">handle_signal</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>代码看下来，可以看出来，init 的主要工作就是:</p>

<ol>
<li>解析 init.rc 文件并执行相应的 action/commands.</li>
<li>作为一个 Daemon 进程处理 property_set,keychord(key combo） 和 signal 事件。</li>
</ol>


<p>init.rc 的解析过程略过，详情请见 system/core/init/init_parser.c</p>

<p>下面来看看 init.rc 里面究竟干了些什么？</p>

<figure class='code'><figcaption><span>system/core/rootdir/init.rc</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#导入其他 rc 文件</span>
</span><span class='line'>import /init.environ.rc
</span><span class='line'>import /init.usb.rc
</span><span class='line'>import /init.<span class="k">${</span><span class="nv">ro</span><span class="p">.hardware</span><span class="k">}</span>.rc  <span class="c">#这里保留了导入特定平台相关 rc 的接口,这里可能导入很多东西！</span>
</span><span class='line'>import /init.trace.rc
</span><span class='line'>
</span><span class='line'><span class="c">#early-init 要处理的事情</span>
</span><span class='line'>on early-init
</span><span class='line'>    <span class="c"># Set init and its forked children&#39;s oom_adj.</span>
</span><span class='line'>    write /proc/1/oom_adj -16
</span><span class='line'>
</span><span class='line'>    <span class="c"># Set the security context for the init process.</span>
</span><span class='line'>    <span class="c"># This should occur before anything else (e.g. ueventd) is started.</span>
</span><span class='line'>    setcon u:r:init:s0
</span><span class='line'>
</span><span class='line'>    start ueventd
</span><span class='line'>
</span><span class='line'><span class="c"># create mountpoints</span>
</span><span class='line'>    mkdir /mnt 0775 root system
</span><span class='line'>
</span><span class='line'><span class="c">#init 要处理的事情</span>
</span><span class='line'>on init
</span><span class='line'>
</span><span class='line'>sysclktz 0
</span><span class='line'>
</span><span class='line'>loglevel 3
</span><span class='line'>
</span><span class='line'><span class="c"># Backward compatibility</span>
</span><span class='line'>    symlink /system/etc /etc
</span><span class='line'>    symlink /sys/kernel/debug /d
</span><span class='line'>
</span><span class='line'><span class="c"># Right now vendor lives on the same filesystem as system,</span>
</span><span class='line'><span class="c"># but someday that may change.</span>
</span><span class='line'>    symlink /system/vendor /vendor
</span><span class='line'>
</span><span class='line'><span class="c">#...省略部分代码</span>
</span><span class='line'>
</span><span class='line'>on post-fs
</span><span class='line'>    <span class="c"># once everything is setup, no need to modify /</span>
</span><span class='line'>    mount rootfs rootfs / ro remount
</span><span class='line'>    <span class="c"># mount shared so changes propagate into child namespaces</span>
</span><span class='line'>    mount rootfs rootfs / shared rec
</span><span class='line'>    mount tmpfs tmpfs /mnt/secure private rec
</span><span class='line'><span class="c">#...省略部分代码</span>
</span><span class='line'>
</span><span class='line'>on post-fs-data
</span><span class='line'>    <span class="c"># We chown/chmod /data again so because mount is run as root + defaults</span>
</span><span class='line'>    chown system system /data
</span><span class='line'>    chmod 0771 /data
</span><span class='line'>    <span class="c"># We restorecon /data in case the userdata partition has been reset.</span>
</span><span class='line'>    restorecon /data
</span><span class='line'><span class="c">#...省略部分代码</span>
</span><span class='line'>
</span><span class='line'>on boot
</span><span class='line'><span class="c"># basic network init</span>
</span><span class='line'>    ifup lo
</span><span class='line'>    hostname localhost
</span><span class='line'>    domainname localdomain
</span><span class='line'><span class="c">#...省略部分代码</span>
</span><span class='line'>
</span><span class='line'><span class="c">#这两句重要！！</span>
</span><span class='line'>    class_start core
</span><span class='line'>    class_start main
</span><span class='line'>
</span><span class='line'>on nonencrypted
</span><span class='line'>    class_start late_start
</span><span class='line'>
</span><span class='line'>on charger
</span><span class='line'>    class_start charger
</span><span class='line'>
</span><span class='line'>on property:vold.decrypt<span class="o">=</span>trigger_reset_main
</span><span class='line'>    class_reset main
</span><span class='line'><span class="c">#...省略部分代码</span>
</span><span class='line'>
</span><span class='line'>service console /system/bin/sh
</span><span class='line'>    class core
</span><span class='line'>    console
</span><span class='line'>    disabled
</span><span class='line'>    user shell
</span><span class='line'>    group log
</span><span class='line'>
</span><span class='line'><span class="c">#...省略部分代码</span>
</span><span class='line'>
</span><span class='line'>service servicemanager /system/bin/servicemanager
</span><span class='line'>    class core
</span><span class='line'>    user system
</span><span class='line'>    group system
</span><span class='line'>    critical
</span><span class='line'>    onrestart restart healthd
</span><span class='line'>    onrestart restart zygote
</span><span class='line'>    onrestart restart media
</span><span class='line'>    onrestart restart surfaceflinger
</span><span class='line'>    onrestart restart drm
</span><span class='line'><span class="c">#...省略部分代码</span>
</span><span class='line'>service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
</span><span class='line'>    class main
</span><span class='line'>    socket zygote stream 660 root system
</span><span class='line'>    onrestart write /sys/android_power/request_state wake
</span><span class='line'>    onrestart write /sys/power/state on
</span><span class='line'>    onrestart restart media
</span><span class='line'>    onrestart restart netd
</span></code></pre></td></tr></table></div></figure>


<p>虽然 ini.rc 里面这么多内容，但是你仔细观察就会发现，这里面只有两种模式：</p>

<ul>
<li>第一种 trigger 触发</li>
</ul>


<figure class='code'><figcaption><span>system/core/rootdir/init.rc</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>on trigger
</span><span class='line'>   ...
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>第二种 service</li>
</ul>


<figure class='code'><figcaption><span>system/core/rootdir/init.rc</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>service ...
</span><span class='line'>   ...
</span></code></pre></td></tr></table></div></figure>


<p><code>on xxxx</code> 这种是基于某个事件触发， init.rc 里面列举的有</p>

<ul>
<li>on early-init</li>
<li>on init</li>
<li>on post-fs</li>
<li>on boot</li>
<li>on nonencrypted</li>
<li>on charger</li>
<li>on property:key=value</li>
</ul>


<p>你一定会奇怪，这些 trigger 是如何定义的，在什么时间点触发？ 其实这些 trigger 没有定义，触发的顺序由 init.c 里面添加它们到 action queue 的顺序决定。</p>

<figure class='code'><figcaption><span>system/core/init/init.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;early-init&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;init&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'><span class="n">action_for_each_trigger</span><span class="p">(</span><span class="s">&quot;early-fs&quot;</span><span class="p">,</span> <span class="n">action_add_queue_tail</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 init.c 中以合适的顺序添加到 action queue 里面之后，在 init.c 最后依次从 action queue 中取出这些 action,顺序执行。</p>

<figure class='code'><figcaption><span>system/core/init/init.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">for</span><span class="p">(;;)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">nr</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">timeout</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">execute_one_command</span><span class="p">();</span>  <span class="c1">//这里取出 action 来执行。</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>on property</code> 例外，这个是在 set property 之后，查询有没有相关的 action，如果有的话添加到 action queue , 等待取出来执行。</p>

<p>那么 service 是如何启动的呢？service 并没有像 trigger 一样的方式进入 action queue.仔细观察一下 service 里面的 option 就会发现，每个 service 都有一个 class.</p>

<figure class='code'><figcaption><span>system/core/init/init.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">service</span> <span class="n">ueventd</span> <span class="o">/</span><span class="n">sbin</span><span class="o">/</span><span class="n">ueventd</span>
</span><span class='line'>    <span class="n">class</span> <span class="n">core</span>
</span><span class='line'>
</span><span class='line'><span class="n">service</span> <span class="n">servicemanager</span> <span class="o">/</span><span class="n">system</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">servicemanager</span>
</span><span class='line'>    <span class="n">class</span> <span class="n">core</span>
</span><span class='line'>
</span><span class='line'><span class="n">service</span> <span class="n">healthd</span><span class="o">-</span><span class="n">charger</span> <span class="o">/</span><span class="n">sbin</span><span class="o">/</span><span class="n">healthd</span> <span class="o">-</span><span class="n">n</span>
</span><span class='line'>    <span class="n">class</span> <span class="n">charger</span>
</span><span class='line'>
</span><span class='line'><span class="n">service</span> <span class="n">netd</span> <span class="o">/</span><span class="n">system</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">netd</span>
</span><span class='line'>    <span class="n">class</span> <span class="n">main</span>
</span><span class='line'>
</span><span class='line'><span class="n">service</span> <span class="n">zygote</span> <span class="o">/</span><span class="n">system</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">app_process</span> <span class="o">-</span><span class="n">Xzygote</span> <span class="o">/</span><span class="n">system</span><span class="o">/</span><span class="n">bin</span> <span class="o">--</span><span class="n">zygote</span> <span class="o">--</span><span class="n">start</span><span class="o">-</span><span class="n">system</span><span class="o">-</span><span class="n">server</span>
</span><span class='line'>    <span class="n">class</span> <span class="n">main</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个 class 指的就是 service 的类别， service 不是像 trigger 一样，通过名字来查找，而是通过类别来一起启动的。</p>

<p>在 <code>on boot</code>，可以看到:</p>

<figure class='code'><figcaption><span>system/core/init/init.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">on</span> <span class="n">boot</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="n">class_start</span> <span class="n">core</span>
</span><span class='line'>    <span class="n">class_start</span> <span class="n">main</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>core</code> 和 <code>main</code> 类别的 service 在 <code>on boot</code> 的时候被一起启动了.</p>

<p>通过上面的分析，可以看得出来，虽然 init.rc 里面的内容很多，但还是很容易理解的：</p>

<ul>
<li>on xxx 是在 init.c 里面通过 xxx 关键字进入 action 队列并顺序执行的。</li>
<li>service xxx 是以 <code>class xxx</code> 分类的，一类在一起进入队列并执行的， core 和 main 类别的 service 是 on boot 的时候一起执行的。</li>
</ul>


<p>OK, 看得出来，其实那些 service 并没有什么特别的，都是 init 启动的而已。</p>

<p>那么，Android 是如何从 Native 切换到 Java 世界的呢？这依赖于 init.rc 里面启动的一个重要 service  &mdash; zygote</p>

<p>zygote 是在 init.rc 中被定义为一个 service ：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
</span><span class='line'>    class main
</span><span class='line'>    socket zygote stream 660 root system
</span><span class='line'>    onrestart write /sys/android_power/request_state wake
</span><span class='line'>    onrestart write /sys/power/state on
</span><span class='line'>    onrestart restart media
</span><span class='line'>    onrestart restart netd
</span></code></pre></td></tr></table></div></figure>


<p>name = <code>zygote</code>
path = <code>/system/bin/app_process</code>
arguments = <code>-Xzygote /system/bin --zygote --start-system-server</code></p>

<p>zygote 这个 service 在启动的时候实际上是执行了 /system/bin/app_process 这个二进制文件 , 这个文件的源码在:</p>

<p><code>frameworks/base/cmds/app_process/app_main.cpp</code></p>

<figure class='code'><figcaption><span>frameworks/base/cmds/app_process/app_main.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="k">const</span> <span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="c1">//-Xzygote 传给 Vm</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">runtime</span><span class="p">.</span><span class="n">addVmArguments</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="c1">//其他参数解析</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">argc</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">arg</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="o">++</span><span class="p">];</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">parentDir</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">parentDir</span> <span class="o">=</span> <span class="n">arg</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="s">&quot;--zygote&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">zygote</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
</span><span class='line'>            <span class="n">niceName</span> <span class="o">=</span> <span class="s">&quot;zygote&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="s">&quot;--start-system-server&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">startSystemServer</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="s">&quot;--application&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">application</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="s">&quot;--nice-name=&quot;</span><span class="p">,</span> <span class="mi">12</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">niceName</span> <span class="o">=</span> <span class="n">arg</span> <span class="o">+</span> <span class="mi">12</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">className</span> <span class="o">=</span> <span class="n">arg</span><span class="p">;</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="c1">// call runtime.start 并 传了两个参数</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">zygote</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">runtime</span><span class="p">.</span><span class="n">start</span><span class="p">(</span><span class="s">&quot;com.android.internal.os.ZygoteInit&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">startSystemServer</span> <span class="o">?</span> <span class="s">&quot;start-system-server&quot;</span> <span class="o">:</span> <span class="s">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在最后调用了 <code>runtime</code> 的 start 方法并传入了 <code>com.android.internal.os.ZygoteInit</code> 和 <code>start-system-server</code> 两个参数。</p>

<p><code>runtime</code> 是 <code>AppRuntime</code> 的实例， <code>start</code> 是继承自基类 <code>AndroidRuntime</code> 的方法。</p>

<figure class='code'><figcaption><span>frameworks/core/jni/AndroidRuntime.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Start the Android runtime.  This involves starting the virtual machine</span>
</span><span class='line'><span class="cm"> * and calling the &quot;static void main(String[] args)&quot; method in the class</span>
</span><span class='line'><span class="cm"> * named by &quot;className&quot;.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * Passes the main function two arguments, the class name and the specified</span>
</span><span class='line'><span class="cm"> * options string.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kt">void</span> <span class="n">AndroidRuntime</span><span class="o">::</span><span class="n">start</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">className</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>     <span class="k">if</span> <span class="p">(</span><span class="n">startVm</span><span class="p">(</span><span class="o">&amp;</span><span class="n">mJavaVM</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">env</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="n">onVmCreated</span><span class="p">(</span><span class="n">env</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="n">strArray</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&gt;</span><span class="n">NewObjectArray</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">stringClass</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>    <span class="n">assert</span><span class="p">(</span><span class="n">strArray</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>    <span class="n">classNameStr</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">className</span><span class="p">);</span>
</span><span class='line'>    <span class="n">assert</span><span class="p">(</span><span class="n">classNameStr</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>    <span class="n">env</span><span class="o">-&gt;</span><span class="n">SetObjectArrayElement</span><span class="p">(</span><span class="n">strArray</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">classNameStr</span><span class="p">);</span>
</span><span class='line'>    <span class="n">optionsStr</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">options</span><span class="p">);</span>
</span><span class='line'>    <span class="n">env</span><span class="o">-&gt;</span><span class="n">SetObjectArrayElement</span><span class="p">(</span><span class="n">strArray</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">optionsStr</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">     * Start VM.  This thread becomes the main thread of the VM, and will</span>
</span><span class='line'><span class="cm">     * not return until the VM exits.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kt">char</span><span class="o">*</span> <span class="n">slashClassName</span> <span class="o">=</span> <span class="n">toSlashClassName</span><span class="p">(</span><span class="n">className</span><span class="p">);</span>
</span><span class='line'>    <span class="n">jclass</span> <span class="n">startClass</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="p">(</span><span class="n">slashClassName</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">startClass</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">ALOGE</span><span class="p">(</span><span class="s">&quot;JavaVM unable to locate class &#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">slashClassName</span><span class="p">);</span>
</span><span class='line'>        <span class="cm">/* keep going */</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">jmethodID</span> <span class="n">startMeth</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&gt;</span><span class="n">GetStaticMethodID</span><span class="p">(</span><span class="n">startClass</span><span class="p">,</span> <span class="s">&quot;main&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&quot;([Ljava/lang/String;)V&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">startMeth</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ALOGE</span><span class="p">(</span><span class="s">&quot;JavaVM unable to find main() in &#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">className</span><span class="p">);</span>
</span><span class='line'>            <span class="cm">/* keep going */</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">env</span><span class="o">-&gt;</span><span class="n">CallStaticVoidMethod</span><span class="p">(</span><span class="n">startClass</span><span class="p">,</span> <span class="n">startMeth</span><span class="p">,</span> <span class="n">strArray</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>调用 <code>start</code> 的时候传递了两个参数 <code>com.android.internal.os.ZygoteInit</code> , <code>start-system-server</code>,对应 <code>start</code> 的两个形参 <code>className</code> 和 <code>options</code>。在 <code>start</code> 里面，可以看到，先是 启动了 VM , 然后将两个参数放到 VM 的 env 里面，在然后，找到 <code>com.android.internal.os.ZygoteInit</code> 并调用其  <code>main</code> 方法 !</p>

<p>哈哈！ 终于开启了 java 世界！ 来看看 <code>ZygoteInit</code> 干了些什么?</p>

<figure class='code'><figcaption><span>frameworks/base/core/java/com/android/internal/os/ZygoteInit.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">argv</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>            <span class="n">registerZygoteSocket</span><span class="o">();</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">argv</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;start-system-server&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">startSystemServer</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(!</span><span class="n">argv</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">argv</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">+</span> <span class="n">USAGE_STRING</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>            <span class="n">runSelectLoop</span><span class="o">();</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>ZygoteInit</code> 的 <code>main</code> 里面做了三件事 :</p>

<ol>
<li>注册 zygote socket</li>
<li>启动 system server</li>
<li>无限循环监听 zygote socket 消息。</li>
</ol>


<p>在 init 启动 zygote 的时候创建了一个 socket &ndash; <code>/dev/socket/zygote</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
</span><span class='line'>    class main
</span><span class='line'>    socket zygote stream 660 root system
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p><code>registerZygoteSocket</code> 就是用这个 socket 的 fd 创建了一个 Server socket , 用来接收 client 发来的消息。</p>

<p>然后调用，<code>startSystemServer()</code> 来启动 system server 进程。</p>

<figure class='code'><figcaption><span>ZygoteInit.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Prepare the arguments and fork for the system server process.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">startSystemServer</span><span class="o">()</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">MethodAndArgsCaller</span><span class="o">,</span> <span class="n">RuntimeException</span> <span class="o">{</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>    <span class="cm">/* Hardcoded command line to start the system server */</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">args</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>        <span class="s">&quot;--setuid=1000&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;--setgid=1000&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;--setgroups=1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1018,1021,1032,3001,3002,3003,3006,3007&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;--capabilities=&quot;</span> <span class="o">+</span> <span class="n">capabilities</span> <span class="o">+</span> <span class="s">&quot;,&quot;</span> <span class="o">+</span> <span class="n">capabilities</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;--runtime-init&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;--nice-name=system_server&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;com.android.server.SystemServer&quot;</span><span class="o">,</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>        <span class="cm">/* Request to fork the system server process */</span>
</span><span class='line'>        <span class="n">pid</span> <span class="o">=</span> <span class="n">Zygote</span><span class="o">.</span><span class="na">forkSystemServer</span><span class="o">(</span>
</span><span class='line'>                <span class="n">parsedArgs</span><span class="o">.</span><span class="na">uid</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">gid</span><span class="o">,</span>
</span><span class='line'>                <span class="n">parsedArgs</span><span class="o">.</span><span class="na">gids</span><span class="o">,</span>
</span><span class='line'>                <span class="n">parsedArgs</span><span class="o">.</span><span class="na">debugFlags</span><span class="o">,</span>
</span><span class='line'>                <span class="kc">null</span><span class="o">,</span>
</span><span class='line'>                <span class="n">parsedArgs</span><span class="o">.</span><span class="na">permittedCapabilities</span><span class="o">,</span>
</span><span class='line'>                <span class="n">parsedArgs</span><span class="o">.</span><span class="na">effectiveCapabilities</span><span class="o">);</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>    <span class="cm">/* For child process */</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">pid</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">handleSystemServerProcess</span><span class="o">(</span><span class="n">parsedArgs</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这一步，调用 <code>Zygote.forkSystemServer</code> , <code>forkSystemServer</code> 又调用了 <code>nativenativeForkSystemServer</code></p>

<figure class='code'><figcaption><span>libcore/dalvik/src/main/java/dalvik/system/Zygote.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">forkSystemServer</span><span class="o">(</span><span class="kt">int</span> <span class="n">uid</span><span class="o">,</span> <span class="kt">int</span> <span class="n">gid</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">gids</span><span class="o">,</span> <span class="kt">int</span> <span class="n">debugFlags</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">int</span><span class="o">[][]</span> <span class="n">rlimits</span><span class="o">,</span> <span class="kt">long</span> <span class="n">permittedCapabilities</span><span class="o">,</span> <span class="kt">long</span> <span class="n">effectiveCapabilities</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">preFork</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">pid</span> <span class="o">=</span> <span class="n">nativeForkSystemServer</span><span class="o">(</span>
</span><span class='line'>            <span class="n">uid</span><span class="o">,</span> <span class="n">gid</span><span class="o">,</span> <span class="n">gids</span><span class="o">,</span> <span class="n">debugFlags</span><span class="o">,</span> <span class="n">rlimits</span><span class="o">,</span> <span class="n">permittedCapabilities</span><span class="o">,</span> <span class="n">effectiveCapabilities</span><span class="o">);</span>
</span><span class='line'>    <span class="n">postFork</span><span class="o">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">pid</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>nativenativeForkSystemServer</code> 在 dalvik 里面</p>

<figure class='code'><figcaption><span>dalvik/vm/native/dalvik_system_Zygote.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="n">Dalvik_dalvik_system_Zygote_forkSystemServer</span><span class="p">(</span>
</span><span class='line'>        <span class="k">const</span> <span class="n">u4</span><span class="o">*</span> <span class="n">args</span><span class="p">,</span> <span class="n">JValue</span><span class="o">*</span> <span class="n">pResult</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">pid_t</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'>    <span class="n">pid</span> <span class="o">=</span> <span class="n">forkAndSpecializeCommon</span><span class="p">(</span><span class="n">args</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* The zygote process checks whether the child process has died or not. */</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pid</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">status</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ALOGI</span><span class="p">(</span><span class="s">&quot;System server process %d has been created&quot;</span><span class="p">,</span> <span class="n">pid</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gDvm</span><span class="p">.</span><span class="n">systemServerPid</span> <span class="o">=</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'>        <span class="cm">/*如果 system server 没启动成功，zygote 会自杀!*/</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">waitpid</span><span class="p">(</span><span class="n">pid</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">status</span><span class="p">,</span> <span class="n">WNOHANG</span><span class="p">)</span> <span class="o">==</span> <span class="n">pid</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ALOGE</span><span class="p">(</span><span class="s">&quot;System server process %d has died. Restarting Zygote!&quot;</span><span class="p">,</span> <span class="n">pid</span><span class="p">);</span>
</span><span class='line'>            <span class="n">kill</span><span class="p">(</span><span class="n">getpid</span><span class="p">(),</span> <span class="n">SIGKILL</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">RETURN_INT</span><span class="p">(</span><span class="n">pid</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>来看看 <code>forkAndSpecializeCommon</code>:</p>

<figure class='code'><figcaption><span>dalvik/vm/native/dalvik_system_Zygote.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="n">pid_t</span> <span class="n">forkAndSpecializeCommon</span><span class="p">(</span><span class="k">const</span> <span class="n">u4</span><span class="o">*</span> <span class="n">args</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">isSystemServer</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="n">setSignalHandler</span><span class="p">();</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="n">pid</span> <span class="o">=</span> <span class="n">fork</span><span class="p">();</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pid</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">unsetSignalHandler</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里 fork 之前，注册了 signal 处理函数 <code>setSignalHandler</code>, 子进程里面又取消了signal 处理函数，说明这个是为父进程 zygote 注册的，来看看里面干了些啥：</p>

<figure class='code'><figcaption><span>dalvik/vm/native/dalvik_system_Zygote.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="n">sigchldHandler</span><span class="p">(</span><span class="kt">int</span> <span class="n">s</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>        <span class="cm">/*</span>
</span><span class='line'><span class="cm">         * If the just-crashed process is the system_server, bring down zygote</span>
</span><span class='line'><span class="cm">         * so that it is restarted by init and system server will be restarted</span>
</span><span class='line'><span class="cm">         * from there.</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">pid</span> <span class="o">==</span> <span class="n">gDvm</span><span class="p">.</span><span class="n">systemServerPid</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ALOG</span><span class="p">(</span><span class="n">LOG_INFO</span><span class="p">,</span> <span class="n">ZYGOTE_LOG_TAG</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;Exit zygote because system server (%d) has terminated&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="n">pid</span><span class="p">);</span>
</span><span class='line'>            <span class="n">kill</span><span class="p">(</span><span class="n">getpid</span><span class="p">(),</span> <span class="n">SIGKILL</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里如果 system server 挂了， zygote 又要自杀!!</p>

<p>OK , 假设正常执行，继续回到 <code>startSystemServer</code>, 下一步， system server 和 zygote 分道扬镳了终于, system server 调用 <code>handleSystemServerProcess</code>, zygote 则调用 <code>runSelectLoop()</code>, 先看 zygote <code>runSelectLoop</code>:</p>

<figure class='code'><figcaption><span>dalvik/vm/native/dalvik_system_Zygote.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cm">/** </span>
</span><span class='line'><span class="cm"> * Runs the zygote process&#39;s select loop. Accepts new connections as</span>
</span><span class='line'><span class="cm"> * they happen, and reads commands from connections one spawn-request&#39;s</span>
</span><span class='line'><span class="cm"> * worth at a time.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * @throws MethodAndArgsCaller in a child process when a main() should</span>
</span><span class='line'><span class="cm"> * be executed.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">runSelectLoop</span><span class="p">()</span> <span class="k">throws</span> <span class="n">MethodAndArgsCaller</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">....</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">index</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ZygoteConnection</span> <span class="n">newPeer</span> <span class="o">=</span> <span class="n">acceptCommandPeer</span><span class="p">();</span>
</span><span class='line'>            <span class="n">peers</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">newPeer</span><span class="p">);</span>
</span><span class='line'>            <span class="n">fds</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">newPeer</span><span class="p">.</span><span class="n">getFileDesciptor</span><span class="p">());</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">boolean</span> <span class="n">done</span><span class="p">;</span>
</span><span class='line'>            <span class="n">done</span> <span class="o">=</span> <span class="n">peers</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">index</span><span class="p">).</span><span class="n">runOnce</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>acceptCommandPeer()</code> 实际是在阻塞式的等待 client 来发起连接。</p>

<figure class='code'><figcaption><span>dalvik/vm/native/dalvik_system_Zygote.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Waits for and accepts a single command connection. Throws</span>
</span><span class='line'><span class="cm"> * RuntimeException on failure.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="n">ZygoteConnection</span> <span class="n">acceptCommandPeer</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="n">ZygoteConnection</span><span class="p">(</span><span class="n">sServerSocket</span><span class="p">.</span><span class="n">accept</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">IOException</span> <span class="n">ex</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="n">RuntimeException</span><span class="p">(</span>
</span><span class='line'>                <span class="s">&quot;IOException during accept()&quot;</span><span class="p">,</span> <span class="n">ex</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>runOnce()</code> 则是 client 建立连接之后，读取 client 发过来的数据，并 fork 出新的进程。</p>

<figure class='code'><figcaption><span>dalvik/vm/native/dalvik_system_Zygote.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">boolean</span> <span class="n">runOnce</span><span class="p">()</span> <span class="k">throws</span> <span class="n">ZygoteInit</span><span class="p">.</span><span class="n">MethodAndArgsCaller</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>        <span class="n">args</span> <span class="o">=</span> <span class="n">readArgumentList</span><span class="p">();</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>        <span class="n">pid</span> <span class="o">=</span> <span class="n">Zygote</span><span class="p">.</span><span class="n">forkAndSpecialize</span><span class="p">(</span><span class="n">parsedArgs</span><span class="p">.</span><span class="n">uid</span><span class="p">,</span> <span class="n">parsedArgs</span><span class="p">.</span><span class="n">gid</span><span class="p">,</span> <span class="n">parsedArgs</span><span class="p">.</span><span class="n">gids</span><span class="p">,</span>
</span><span class='line'>        <span class="n">parsedArgs</span><span class="p">.</span><span class="n">debugFlags</span><span class="p">,</span> <span class="n">rlimits</span><span class="p">,</span> <span class="n">parsedArgs</span><span class="p">.</span><span class="n">mountExternal</span><span class="p">,</span> <span class="n">parsedArgs</span><span class="p">.</span><span class="n">seInfo</span><span class="p">,</span>
</span><span class='line'>        <span class="n">parsedArgs</span><span class="p">.</span><span class="n">niceName</span><span class="p">);</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>回过头来看 system server <code>handleSystemServerProcess</code>:</p>

<figure class='code'><figcaption><span>ZygoteInit.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="cm">/** </span>
</span><span class='line'><span class="cm"> * Finish remaining work for the newly forked system server process.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'> <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">handleSystemServerProcess</span><span class="o">(</span> <span class="n">ZygoteConnection</span><span class="o">.</span><span class="na">Arguments</span> <span class="n">parsedArgs</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="n">RuntimeInit</span><span class="o">.</span><span class="na">zygoteInit</span><span class="o">(</span><span class="n">parsedArgs</span><span class="o">.</span><span class="na">targetSdkVersion</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">remainingArgs</span><span class="o">);</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>调用了 <code>RuntimeInit.zygoteInit</code>:</p>

<figure class='code'><figcaption><span>RuntimeInit.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">void</span> <span class="nf">zygoteInit</span><span class="o">(</span><span class="kt">int</span> <span class="n">targetSdkVersion</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">argv</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">DEBUG</span><span class="o">)</span> <span class="n">Slog</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;RuntimeInit: Starting application from zygote&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//重定向 log</span>
</span><span class='line'>    <span class="n">redirectLogStreams</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//设置 timezone ,useragent 等等</span>
</span><span class='line'>    <span class="n">commonInit</span><span class="o">();</span>
</span><span class='line'>    <span class="c1">//app_main.cpp 的 onZygoteInit, 初始化 Binder thread pool.</span>
</span><span class='line'>    <span class="n">nativeZygoteInit</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//</span>
</span><span class='line'>    <span class="n">applicationInit</span><span class="o">(</span><span class="n">targetSdkVersion</span><span class="o">,</span> <span class="n">argv</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>继续 <code>applicationInit</code>,传入的 <code>startClass</code> 参数正是 &ldquo;com.android.server.SystemServer&rdquo; , 所以这里是掉到了 <code>SystemServer</code> 的 main 方法。</p>

<figure class='code'><figcaption><span>RuntimeInit.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">applicationInit</span><span class="o">(</span><span class="kt">int</span> <span class="n">targetSdkVersion</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">argv</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="c1">// Remaining arguments are passed to the start class&#39;s static main</span>
</span><span class='line'>    <span class="n">invokeStaticMain</span><span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">startClass</span><span class="o">,</span> <span class="n">args</span><span class="o">.</span><span class="na">startArgs</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>终于到了 SystemServer 里面来了 :</p>

<figure class='code'><figcaption><span>SystemServer.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">loadLibrary</span><span class="o">(</span><span class="s">&quot;android_servers&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="c1">// Initialize native services.</span>
</span><span class='line'>    <span class="n">nativeInit</span><span class="o">();</span>
</span><span class='line'>    <span class="c1">// This used to be its own separate thread, but now it is</span>
</span><span class='line'>    <span class="c1">// just the loop we run on the main thread.</span>
</span><span class='line'>    <span class="n">ServerThread</span> <span class="n">thr</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ServerThread</span><span class="o">();</span>
</span><span class='line'>    <span class="n">thr</span><span class="o">.</span><span class="na">initAndLoop</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>主要干了两件事：</p>

<ol>
<li>nativeInit</li>
<li>ServerThread 启动</li>
</ol>


<p>nativeInit 好像没干啥嘛</p>

<figure class='code'><figcaption><span>services/jni/com_android_server_SystemServer.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="n">android_server_SystemServer_nativeInit</span><span class="p">(</span><span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">clazz</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">propBuf</span><span class="p">[</span><span class="n">PROPERTY_VALUE_MAX</span><span class="p">];</span>
</span><span class='line'>    <span class="n">property_get</span><span class="p">(</span><span class="s">&quot;system_init.startsensorservice&quot;</span><span class="p">,</span> <span class="n">propBuf</span><span class="p">,</span> <span class="s">&quot;1&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">propBuf</span><span class="p">,</span> <span class="s">&quot;1&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Start the sensor service</span>
</span><span class='line'>        <span class="n">SensorService</span><span class="o">::</span><span class="n">instantiate</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ServerThread 里面内容可就多喽 ！</p>

<figure class='code'><figcaption><span>SystemServer.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
<span class='line-number'>442</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">initAndLoop</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="n">Looper</span><span class="o">.</span><span class="na">prepareMainLooper</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//为 window manager 创建一个 handler.</span>
</span><span class='line'>    <span class="n">HandlerThread</span> <span class="n">wmHandlerThread</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HandlerThread</span><span class="o">(</span><span class="s">&quot;WindowManager&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">wmHandlerThread</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Handler</span> <span class="n">wmHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Handler</span><span class="o">(</span><span class="n">wmHandlerThread</span><span class="o">.</span><span class="na">getLooper</span><span class="o">());</span>
</span><span class='line'>    <span class="n">wmHandler</span><span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Process</span><span class="o">.</span><span class="na">setThreadPriority</span><span class="o">(</span>
</span><span class='line'>                    <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Process</span><span class="o">.</span><span class="na">THREAD_PRIORITY_DISPLAY</span><span class="o">);</span>
</span><span class='line'>            <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Process</span><span class="o">.</span><span class="na">setCanSelfBackground</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 启动 installd , Power Manager Activity Manager service.</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">onlyCore</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">firstBoot</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">installer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Installer</span><span class="o">();</span>
</span><span class='line'>        <span class="n">installer</span><span class="o">.</span><span class="na">ping</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">power</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PowerManagerService</span><span class="o">();</span>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">POWER_SERVICE</span><span class="o">,</span> <span class="n">power</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">context</span> <span class="o">=</span> <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">main</span><span class="o">(</span><span class="n">factoryTest</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">disableStorage</span> <span class="o">=</span> <span class="n">SystemProperties</span><span class="o">.</span><span class="na">getBoolean</span><span class="o">(</span><span class="s">&quot;config.disable_storage&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">disableMedia</span> <span class="o">=</span> <span class="n">SystemProperties</span><span class="o">.</span><span class="na">getBoolean</span><span class="o">(</span><span class="s">&quot;config.disable_media&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">disableBluetooth</span> <span class="o">=</span> <span class="n">SystemProperties</span><span class="o">.</span><span class="na">getBoolean</span><span class="o">(</span><span class="s">&quot;config.disable_bluetooth&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">disableTelephony</span> <span class="o">=</span> <span class="n">SystemProperties</span><span class="o">.</span><span class="na">getBoolean</span><span class="o">(</span><span class="s">&quot;config.disable_telephony&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">disableLocation</span> <span class="o">=</span> <span class="n">SystemProperties</span><span class="o">.</span><span class="na">getBoolean</span><span class="o">(</span><span class="s">&quot;config.disable_location&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">disableSystemUI</span> <span class="o">=</span> <span class="n">SystemProperties</span><span class="o">.</span><span class="na">getBoolean</span><span class="o">(</span><span class="s">&quot;config.disable_systemui&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">disableNonCoreServices</span> <span class="o">=</span> <span class="n">SystemProperties</span><span class="o">.</span><span class="na">getBoolean</span><span class="o">(</span><span class="s">&quot;config.disable_noncore&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">disableNetwork</span> <span class="o">=</span> <span class="n">SystemProperties</span><span class="o">.</span><span class="na">getBoolean</span><span class="o">(</span><span class="s">&quot;config.disable_network&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//各种 service add </span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">display</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DisplayManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">wmHandler</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">DISPLAY_SERVICE</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">telephonyRegistry</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TelephonyRegistry</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;telephony.registry&quot;</span><span class="o">,</span> <span class="n">telephonyRegistry</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">telephony</span><span class="o">.</span><span class="na">MSimTelephonyManager</span><span class="o">.</span><span class="na">getDefault</span><span class="o">().</span><span class="na">isMultiSimEnabled</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">msimTelephonyRegistry</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MSimTelephonyRegistry</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>            <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;telephony.msim.registry&quot;</span><span class="o">,</span> <span class="n">msimTelephonyRegistry</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;scheduling_policy&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">SchedulingPolicyService</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">String</span> <span class="n">cryptState</span> <span class="o">=</span> <span class="n">SystemProperties</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;vold.decrypt&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">ENCRYPTING_STATE</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">cryptState</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">onlyCore</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">ENCRYPTED_STATE</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">cryptState</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">onlyCore</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">pm</span> <span class="o">=</span> <span class="n">PackageManagerService</span><span class="o">.</span><span class="na">main</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">installer</span><span class="o">,</span>
</span><span class='line'>                <span class="n">factoryTest</span> <span class="o">!=</span> <span class="n">SystemServer</span><span class="o">.</span><span class="na">FACTORY_TEST_OFF</span><span class="o">,</span>
</span><span class='line'>                <span class="n">onlyCore</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">setSystemProcess</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;entropy&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">EntropyMixer</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">USER_SERVICE</span><span class="o">,</span>
</span><span class='line'>                <span class="n">UserManagerService</span><span class="o">.</span><span class="na">getInstance</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">mContentResolver</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getContentResolver</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">accountManager</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AccountManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>            <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">ACCOUNT_SERVICE</span><span class="o">,</span> <span class="n">accountManager</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">contentService</span> <span class="o">=</span> <span class="n">ContentService</span><span class="o">.</span><span class="na">main</span><span class="o">(</span><span class="n">context</span><span class="o">,</span>
</span><span class='line'>                <span class="n">factoryTest</span> <span class="o">==</span> <span class="n">SystemServer</span><span class="o">.</span><span class="na">FACTORY_TEST_LOW_LEVEL</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">installSystemProviders</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">lights</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LightsService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">battery</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BatteryService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">lights</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;battery&quot;</span><span class="o">,</span> <span class="n">battery</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">vibrator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">VibratorService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;vibrator&quot;</span><span class="o">,</span> <span class="n">vibrator</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">consumerIr</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ConsumerIrService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">CONSUMER_IR_SERVICE</span><span class="o">,</span> <span class="n">consumerIr</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">power</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">lights</span><span class="o">,</span> <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">self</span><span class="o">(),</span> <span class="n">battery</span><span class="o">,</span>
</span><span class='line'>                <span class="n">BatteryStatsService</span><span class="o">.</span><span class="na">getService</span><span class="o">(),</span>
</span><span class='line'>                <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">self</span><span class="o">().</span><span class="na">getAppOpsService</span><span class="o">(),</span> <span class="n">display</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">alarm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AlarmManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">ALARM_SERVICE</span><span class="o">,</span> <span class="n">alarm</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Watchdog</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">init</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">battery</span><span class="o">,</span> <span class="n">power</span><span class="o">,</span> <span class="n">alarm</span><span class="o">,</span>
</span><span class='line'>                <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">self</span><span class="o">());</span>
</span><span class='line'>        <span class="n">Watchdog</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">addThread</span><span class="o">(</span><span class="n">wmHandler</span><span class="o">,</span> <span class="s">&quot;WindowManager thread&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">inputManager</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InputManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">wmHandler</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">wm</span> <span class="o">=</span> <span class="n">WindowManagerService</span><span class="o">.</span><span class="na">main</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">power</span><span class="o">,</span> <span class="n">display</span><span class="o">,</span> <span class="n">inputManager</span><span class="o">,</span>
</span><span class='line'>                <span class="n">wmHandler</span><span class="o">,</span> <span class="n">factoryTest</span> <span class="o">!=</span> <span class="n">SystemServer</span><span class="o">.</span><span class="na">FACTORY_TEST_LOW_LEVEL</span><span class="o">,</span>
</span><span class='line'>                <span class="o">!</span><span class="n">firstBoot</span><span class="o">,</span> <span class="n">onlyCore</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">WINDOW_SERVICE</span><span class="o">,</span> <span class="n">wm</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">INPUT_SERVICE</span><span class="o">,</span> <span class="n">inputManager</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">inputManager</span><span class="o">.</span><span class="na">setWindowManagerCallbacks</span><span class="o">(</span><span class="n">wm</span><span class="o">.</span><span class="na">getInputMonitor</span><span class="o">());</span>
</span><span class='line'>        <span class="n">inputManager</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">display</span><span class="o">.</span><span class="na">setWindowManager</span><span class="o">(</span><span class="n">wm</span><span class="o">);</span>
</span><span class='line'>        <span class="n">display</span><span class="o">.</span><span class="na">setInputManager</span><span class="o">(</span><span class="n">inputManager</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>                <span class="n">imm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InputMethodManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">wm</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">INPUT_METHOD_SERVICE</span><span class="o">,</span> <span class="n">imm</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">ACCESSIBILITY_SERVICE</span><span class="o">,</span>
</span><span class='line'>                        <span class="k">new</span> <span class="nf">AccessibilityManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">wm</span><span class="o">.</span><span class="na">displayReady</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">pm</span><span class="o">.</span><span class="na">performBootDexOpt</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">mountService</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MountService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;mount&quot;</span><span class="o">,</span> <span class="n">mountService</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">lockSettings</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LockSettingsService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;lock_settings&quot;</span><span class="o">,</span> <span class="n">lockSettings</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">devicePolicy</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DevicePolicyManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">DEVICE_POLICY_SERVICE</span><span class="o">,</span> <span class="n">devicePolicy</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableSystemUI</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">statusBar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StatusBarManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">wm</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">STATUS_BAR_SERVICE</span><span class="o">,</span> <span class="n">statusBar</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">CLIPBOARD_SERVICE</span><span class="o">,</span>
</span><span class='line'>                        <span class="k">new</span> <span class="nf">ClipboardService</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNetwork</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">networkManagement</span> <span class="o">=</span> <span class="n">NetworkManagementService</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">NETWORKMANAGEMENT_SERVICE</span><span class="o">,</span> <span class="n">networkManagement</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">tsms</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TextServicesManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">TEXT_SERVICES_MANAGER_SERVICE</span><span class="o">,</span> <span class="n">tsms</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNetwork</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">networkStats</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NetworkStatsService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">networkManagement</span><span class="o">,</span> <span class="n">alarm</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">NETWORK_STATS_SERVICE</span><span class="o">,</span> <span class="n">networkStats</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">networkPolicy</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NetworkPolicyManagerService</span><span class="o">(</span>
</span><span class='line'>                        <span class="n">context</span><span class="o">,</span> <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">self</span><span class="o">(),</span> <span class="n">power</span><span class="o">,</span>
</span><span class='line'>                        <span class="n">networkStats</span><span class="o">,</span> <span class="n">networkManagement</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">NETWORK_POLICY_SERVICE</span><span class="o">,</span> <span class="n">networkPolicy</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">wifiP2p</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WifiP2pService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">WIFI_P2P_SERVICE</span><span class="o">,</span> <span class="n">wifiP2p</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">wifi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WifiService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">WIFI_SERVICE</span><span class="o">,</span> <span class="n">wifi</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">serviceDiscovery</span> <span class="o">=</span> <span class="n">NsdService</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span>
</span><span class='line'>                        <span class="n">Context</span><span class="o">.</span><span class="na">NSD_SERVICE</span><span class="o">,</span> <span class="n">serviceDiscovery</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">UPDATE_LOCK_SERVICE</span><span class="o">,</span>
</span><span class='line'>                        <span class="k">new</span> <span class="nf">UpdateLockService</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*   </span>
</span><span class='line'><span class="cm">         * MountService has a few dependencies: Notification Manager and</span>
</span><span class='line'><span class="cm">         * AppWidget Provider. Make sure MountService is completely started</span>
</span><span class='line'><span class="cm">         * first before continuing.</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mountService</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">onlyCore</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mountService</span><span class="o">.</span><span class="na">waitForAsecScan</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">accountManager</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>                <span class="n">accountManager</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">contentService</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>                <span class="n">contentService</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">notification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NotificationManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">statusBar</span><span class="o">,</span> <span class="n">lights</span><span class="o">);</span>
</span><span class='line'>            <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">NOTIFICATION_SERVICE</span><span class="o">,</span> <span class="n">notification</span><span class="o">);</span>
</span><span class='line'>            <span class="n">networkPolicy</span><span class="o">.</span><span class="na">bindNotificationManager</span><span class="o">(</span><span class="n">notification</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">DeviceStorageMonitorService</span><span class="o">.</span><span class="na">SERVICE</span><span class="o">,</span>
</span><span class='line'>                    <span class="k">new</span> <span class="nf">DeviceStorageMonitorService</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableLocation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">location</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LocationManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">LOCATION_SERVICE</span><span class="o">,</span> <span class="n">location</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">countryDetector</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CountryDetectorService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">COUNTRY_DETECTOR</span><span class="o">,</span> <span class="n">countryDetector</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">Slog</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Search Service&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">SEARCH_SERVICE</span><span class="o">,</span>
</span><span class='line'>                        <span class="k">new</span> <span class="nf">SearchManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">DROPBOX_SERVICE</span><span class="o">,</span>
</span><span class='line'>                    <span class="k">new</span> <span class="nf">DropBoxManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;/data/system/dropbox&quot;</span><span class="o">)));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span> <span class="o">&amp;&amp;</span> <span class="n">context</span><span class="o">.</span><span class="na">getResources</span><span class="o">().</span><span class="na">getBoolean</span><span class="o">(</span>
</span><span class='line'>                    <span class="n">R</span><span class="o">.</span><span class="na">bool</span><span class="o">.</span><span class="na">config_enableWallpaperService</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(!</span><span class="n">headless</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">wallpaper</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WallpaperManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">WALLPAPER_SERVICE</span><span class="o">,</span> <span class="n">wallpaper</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableMedia</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="s">&quot;0&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">SystemProperties</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;system_init.startaudioservice&quot;</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">AUDIO_SERVICE</span><span class="o">,</span> <span class="k">new</span> <span class="n">AudioService</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// Listen for dock station changes</span>
</span><span class='line'>                <span class="n">dock</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DockObserver</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableMedia</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// Listen for wired headset changes</span>
</span><span class='line'>                <span class="n">inputManager</span><span class="o">.</span><span class="na">setWiredAccessoryCallbacks</span><span class="o">(</span>
</span><span class='line'>                        <span class="k">new</span> <span class="nf">WiredAccessoryManager</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">inputManager</span><span class="o">));</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">reportWtf</span><span class="o">(</span><span class="s">&quot;starting WiredAccessoryManager&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// Manage USB host and device support</span>
</span><span class='line'>                <span class="n">usb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UsbService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">USB_SERVICE</span><span class="o">,</span> <span class="n">usb</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// Serial port support</span>
</span><span class='line'>                <span class="n">serial</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SerialService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">SERIAL_SERVICE</span><span class="o">,</span> <span class="n">serial</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">twilight</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TwilightService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Listen for UI mode changes</span>
</span><span class='line'>            <span class="n">uiMode</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UiModeManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">twilight</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">BACKUP_SERVICE</span><span class="o">,</span>
</span><span class='line'>                        <span class="k">new</span> <span class="nf">BackupManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">appWidget</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppWidgetService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">APPWIDGET_SERVICE</span><span class="o">,</span> <span class="n">appWidget</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">recognition</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RecognitionManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;diskstats&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">DiskStatsService</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;samplingprofiler&quot;</span><span class="o">,</span>
</span><span class='line'>                        <span class="k">new</span> <span class="nf">SamplingProfilerService</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNetwork</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">networkTimeUpdater</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NetworkTimeUpdateService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableMedia</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">commonTimeMgmtService</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CommonTimeManagementService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="s">&quot;commontime_management&quot;</span><span class="o">,</span> <span class="n">commonTimeMgmtService</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNetwork</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">CertBlacklister</span> <span class="n">blacklister</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CertBlacklister</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>            <span class="n">context</span><span class="o">.</span><span class="na">getResources</span><span class="o">().</span><span class="na">getBoolean</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">bool</span><span class="o">.</span><span class="na">config_dreamsSupported</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// Dreams (interactive idle-time views, a/k/a screen savers)</span>
</span><span class='line'>                <span class="n">dreamy</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DreamManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">wmHandler</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">DreamService</span><span class="o">.</span><span class="na">DREAM_SERVICE</span><span class="o">,</span> <span class="n">dreamy</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">atlas</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AssetAtlasService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">AssetAtlasService</span><span class="o">.</span><span class="na">ASSET_ATLAS_SERVICE</span><span class="o">,</span> <span class="n">atlas</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">new</span> <span class="nf">IdleMaintenanceService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">battery</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">printManager</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PrintManagerService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>            <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">PRINT_SERVICE</span><span class="o">,</span> <span class="n">printManager</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">disableNonCoreServices</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">mediaRouter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MediaRouterService</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>                <span class="n">ServiceManager</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">MEDIA_ROUTER_SERVICE</span><span class="o">,</span> <span class="n">mediaRouter</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="c1">//safe mode 相关</span>
</span><span class='line'>    <span class="kd">final</span> <span class="kt">boolean</span> <span class="n">safeMode</span> <span class="o">=</span> <span class="n">wm</span><span class="o">.</span><span class="na">detectSafeMode</span><span class="o">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">safeMode</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">self</span><span class="o">().</span><span class="na">enterSafeMode</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">// Post the safe mode state in the Zygote class</span>
</span><span class='line'>        <span class="n">Zygote</span><span class="o">.</span><span class="na">systemInSafeMode</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="c1">// Disable the JIT for the system_server process</span>
</span><span class='line'>        <span class="n">VMRuntime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">disableJitCompilation</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Enable the JIT for the system_server process</span>
</span><span class='line'>        <span class="n">VMRuntime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">startJitCompilation</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//service system ready</span>
</span><span class='line'>    <span class="n">vibrator</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>    <span class="n">lockSettings</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>    <span class="n">devicePolicy</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>    <span class="n">notification</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>    <span class="n">wm</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">safeMode</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">self</span><span class="o">().</span><span class="na">showSafeModeOverlay</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">power</span><span class="o">.</span><span class="na">systemReady</span><span class="o">(</span><span class="n">twilight</span><span class="o">,</span> <span class="n">dreamy</span><span class="o">);</span>
</span><span class='line'>    <span class="n">pm</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>    <span class="n">display</span><span class="o">.</span><span class="na">systemReady</span><span class="o">(</span><span class="n">safeMode</span><span class="o">,</span> <span class="n">onlyCore</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//接下来是 ActivityManagerService 的 systemReady</span>
</span><span class='line'>    <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">self</span><span class="o">().</span><span class="na">systemReady</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">self</span><span class="o">().</span><span class="na">startObservingNativeCrashes</span><span class="o">();</span>
</span><span class='line'>                <span class="n">startSystemUi</span><span class="o">(</span><span class="n">contextF</span><span class="o">);</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">mountServiceF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">mountServiceF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">batteryF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">batteryF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">networkManagementF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">networkManagementF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">networkStatsF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">networkStatsF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">networkPolicyF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">networkPolicyF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">connectivityF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">connectivityF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">dockF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">dockF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">usbF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">usbF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">twilightF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">twilightF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">uiModeF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">uiModeF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">recognitionF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">recognitionF</span><span class="o">.</span><span class="na">systemReady</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Watchdog</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// It is now okay to let the various system services start their</span>
</span><span class='line'>            <span class="c1">// third party code...</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">appWidgetF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">appWidgetF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">(</span><span class="n">safeMode</span><span class="o">);</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">wallpaperF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">wallpaperF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">immF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">immF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">(</span><span class="n">statusBarF</span><span class="o">);</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">locationF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">locationF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">countryDetectorF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">countryDetectorF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">networkTimeUpdaterF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">networkTimeUpdaterF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">commonTimeMgmtServiceF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">commonTimeMgmtServiceF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">textServiceManagerServiceF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">dreamyF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">dreamyF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">atlasF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">atlasF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">inputManagerF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">inputManagerF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">telephonyRegistryF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">telephonyRegistryF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">msimTelephonyRegistryF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">msimTelephonyRegistryF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">printManagerF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">printManagerF</span><span class="o">.</span><span class="na">systemRuning</span><span class="o">();</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">mediaRouterF</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">mediaRouterF</span><span class="o">.</span><span class="na">systemRunning</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//进入消息循环</span>
</span><span class='line'>    <span class="n">Looper</span><span class="o">.</span><span class="na">loop</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>system server 启动了，来看下 Launcher 是怎么启动的。system server 的最后一段调用了 ActivityManagerService 的 systemReady() 回调。</p>

<p>ActivityManagerService 的 systemReady()：</p>

<figure class='code'><figcaption><span>ActivityManagerService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">systemReady</span><span class="o">(</span><span class="kd">final</span> <span class="n">Runnable</span> <span class="n">goingCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>        <span class="n">mStackSupervisor</span><span class="o">.</span><span class="na">resumeTopActivitiesLocked</span><span class="o">();</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;>mStackSupervisor.resumeTopActivitiesLocked</p>

<figure class='code'><figcaption><span>ActivityStackSupervisor.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">boolean</span> <span class="nf">resumeTopActivitiesLocked</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">resumeTopActivitiesLocked</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">boolean</span> <span class="nf">resumeTopActivitiesLocked</span><span class="o">(</span><span class="n">ActivityStack</span> <span class="n">targetStack</span><span class="o">,</span> <span class="n">ActivityRecord</span> <span class="n">target</span><span class="o">,</span>
</span><span class='line'>        <span class="n">Bundle</span> <span class="n">targetOptions</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">targetStack</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">targetStack</span> <span class="o">=</span> <span class="n">getFocusedStack</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">result</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">stackNdx</span> <span class="o">=</span> <span class="n">mStacks</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="n">stackNdx</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">;</span> <span class="o">--</span><span class="n">stackNdx</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">ActivityStack</span> <span class="n">stack</span> <span class="o">=</span> <span class="n">mStacks</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">stackNdx</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">isFrontStack</span><span class="o">(</span><span class="n">stack</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">stack</span> <span class="o">==</span> <span class="n">targetStack</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">result</span> <span class="o">=</span> <span class="n">stack</span><span class="o">.</span><span class="na">resumeTopActivityLocked</span><span class="o">(</span><span class="n">target</span><span class="o">,</span> <span class="n">targetOptions</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">stack</span><span class="o">.</span><span class="na">resumeTopActivityLocked</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;>stack.resumeTopActivityLocked</p>

<figure class='code'><figcaption><span>ActivityStack.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">final</span> <span class="kt">boolean</span> <span class="nf">resumeTopActivityLocked</span><span class="o">(</span><span class="n">ActivityRecord</span> <span class="n">prev</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">resumeTopActivityLocked</span><span class="o">(</span><span class="n">prev</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">final</span> <span class="kt">boolean</span> <span class="nf">resumeTopActivityLocked</span><span class="o">(</span><span class="n">ActivityRecord</span> <span class="n">prev</span><span class="o">,</span> <span class="n">Bundle</span> <span class="n">options</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">ActivityManagerService</span><span class="o">.</span><span class="na">DEBUG_LOCKSCREEN</span><span class="o">)</span> <span class="n">mService</span><span class="o">.</span><span class="na">logLockScreen</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">next</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// There are no more activities!  Let&#39;s just start up the</span>
</span><span class='line'>        <span class="c1">// Launcher...</span>
</span><span class='line'>        <span class="n">ActivityOptions</span><span class="o">.</span><span class="na">abort</span><span class="o">(</span><span class="n">options</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">DEBUG_STATES</span><span class="o">)</span> <span class="n">Slog</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;resumeTopActivityLocked: No more activities go home&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">DEBUG_STACK</span><span class="o">)</span> <span class="n">mStackSupervisor</span><span class="o">.</span><span class="na">validateTopActivitiesLocked</span><span class="o">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">mStackSupervisor</span><span class="o">.</span><span class="na">resumeHomeActivity</span><span class="o">(</span><span class="n">prev</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;>mStackSupervisor.resumeHomeActivity</p>

<figure class='code'><figcaption><span>ActivityStackSupervisor.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">boolean</span> <span class="nf">resumeHomeActivity</span><span class="o">(</span><span class="n">ActivityRecord</span> <span class="n">prev</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">mService</span><span class="o">.</span><span class="na">startHomeActivityLocked</span><span class="o">(</span><span class="n">mCurrentUser</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;>mService.startHomeActivityLocked(mCurrentUser)</p>

<figure class='code'><figcaption><span>ActivityManagerService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">boolean</span> <span class="nf">startHomeActivityLocked</span><span class="o">(</span><span class="kt">int</span> <span class="n">userId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="n">getHomeIntent</span><span class="o">();</span>
</span><span class='line'>    <span class="n">ActivityInfo</span> <span class="n">aInfo</span> <span class="o">=</span>
</span><span class='line'>        <span class="n">resolveActivityInfo</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">STOCK_PM_FLAGS</span><span class="o">,</span> <span class="n">userId</span><span class="o">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">aInfo</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">intent</span><span class="o">.</span><span class="na">setComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">ComponentName</span><span class="o">(</span>
</span><span class='line'>                <span class="n">aInfo</span><span class="o">.</span><span class="na">applicationInfo</span><span class="o">.</span><span class="na">packageName</span><span class="o">,</span> <span class="n">aInfo</span><span class="o">.</span><span class="na">name</span><span class="o">));</span>
</span><span class='line'>        <span class="c1">// Don&#39;t do this if the home app is currently being</span>
</span><span class='line'>        <span class="c1">// instrumented.</span>
</span><span class='line'>        <span class="n">aInfo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ActivityInfo</span><span class="o">(</span><span class="n">aInfo</span><span class="o">);</span>
</span><span class='line'>        <span class="n">aInfo</span><span class="o">.</span><span class="na">applicationInfo</span> <span class="o">=</span> <span class="n">getAppInfoForUser</span><span class="o">(</span><span class="n">aInfo</span><span class="o">.</span><span class="na">applicationInfo</span><span class="o">,</span> <span class="n">userId</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ProcessRecord</span> <span class="n">app</span> <span class="o">=</span> <span class="n">getProcessRecordLocked</span><span class="o">(</span><span class="n">aInfo</span><span class="o">.</span><span class="na">processName</span><span class="o">,</span>
</span><span class='line'>                <span class="n">aInfo</span><span class="o">.</span><span class="na">applicationInfo</span><span class="o">.</span><span class="na">uid</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">app</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">app</span><span class="o">.</span><span class="na">instrumentationClass</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">intent</span><span class="o">.</span><span class="na">setFlags</span><span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getFlags</span><span class="o">()</span> <span class="o">|</span> <span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_ACTIVITY_NEW_TASK</span><span class="o">);</span>
</span><span class='line'>            <span class="n">mStackSupervisor</span><span class="o">.</span><span class="na">startHomeActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">aInfo</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;> mStackSupervisor.startHomeActivity</p>

<figure class='code'><figcaption><span>ActivityStackSupervisor.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">void</span> <span class="nf">startHomeActivity</span><span class="o">(</span><span class="n">Intent</span> <span class="n">intent</span><span class="o">,</span> <span class="n">ActivityInfo</span> <span class="n">aInfo</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">moveHomeToTop</span><span class="o">();</span>
</span><span class='line'>    <span class="n">startActivityLocked</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">intent</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="n">aInfo</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span>
</span><span class='line'>            <span class="kc">null</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-&gt;</span>
</span><span class='line'><span class="n">startActivityLocked</span>
</span><span class='line'><span class="o">-&gt;</span>
</span><span class='line'><span class="n">startActivityUncheckedLocked</span>
</span><span class='line'><span class="o">-&gt;</span>
</span><span class='line'><span class="n">resumeTopActivitiesLocked</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;>ActivityStack.resumeTopActivityLocked</p>

<p>&ndash;>
ActivityStackSupervisor.startSpecificActivityLocked</p>

<p>&ndash;>
ActivityManagerService.startProcessLocked</p>

<p>&ndash;></p>

<figure class='code'><figcaption><span>ActivityManagerService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>        <span class="c1">// Start the process.  It will either succeed and return a result containing</span>
</span><span class='line'>        <span class="c1">// the PID of the new process, or else throw a RuntimeException.</span>
</span><span class='line'>        <span class="n">Process</span><span class="o">.</span><span class="na">ProcessStartResult</span> <span class="n">startResult</span> <span class="o">=</span> <span class="n">Process</span><span class="o">.</span><span class="na">start</span><span class="o">(</span><span class="s">&quot;android.app.ActivityThread&quot;</span><span class="o">,</span>
</span><span class='line'>                <span class="n">app</span><span class="o">.</span><span class="na">processName</span><span class="o">,</span> <span class="n">uid</span><span class="o">,</span> <span class="n">uid</span><span class="o">,</span> <span class="n">gids</span><span class="o">,</span> <span class="n">debugFlags</span><span class="o">,</span> <span class="n">mountExternal</span><span class="o">,</span>
</span><span class='line'>                <span class="n">app</span><span class="o">.</span><span class="na">info</span><span class="o">.</span><span class="na">targetSdkVersion</span><span class="o">,</span> <span class="n">app</span><span class="o">.</span><span class="na">info</span><span class="o">.</span><span class="na">seinfo</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;>
Process.start 注意这里传入的 processClass 是 &ldquo;android.app.ActivityThread&rdquo;</p>

<p>&ndash;>
startViaZygote</p>

<figure class='code'><figcaption><span>Process.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">ProcessStartResult</span> <span class="nf">start</span><span class="o">(</span><span class="kd">final</span> <span class="n">String</span> <span class="n">processClass</span><span class="o">,</span>
</span><span class='line'>                              <span class="kd">final</span> <span class="n">String</span> <span class="n">niceName</span><span class="o">,</span>
</span><span class='line'>                              <span class="kt">int</span> <span class="n">uid</span><span class="o">,</span> <span class="kt">int</span> <span class="n">gid</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">gids</span><span class="o">,</span>
</span><span class='line'>                              <span class="kt">int</span> <span class="n">debugFlags</span><span class="o">,</span> <span class="kt">int</span> <span class="n">mountExternal</span><span class="o">,</span>
</span><span class='line'>                              <span class="kt">int</span> <span class="n">targetSdkVersion</span><span class="o">,</span>
</span><span class='line'>                              <span class="n">String</span> <span class="n">seInfo</span><span class="o">,</span>
</span><span class='line'>                              <span class="n">String</span><span class="o">[]</span> <span class="n">zygoteArgs</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">startViaZygote</span><span class="o">(</span><span class="n">processClass</span><span class="o">,</span> <span class="n">niceName</span><span class="o">,</span> <span class="n">uid</span><span class="o">,</span> <span class="n">gid</span><span class="o">,</span> <span class="n">gids</span><span class="o">,</span>
</span><span class='line'>                <span class="n">debugFlags</span><span class="o">,</span> <span class="n">mountExternal</span><span class="o">,</span> <span class="n">targetSdkVersion</span><span class="o">,</span> <span class="n">seInfo</span><span class="o">,</span> <span class="n">zygoteArgs</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ZygoteStartFailedEx</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">LOG_TAG</span><span class="o">,</span>
</span><span class='line'>                <span class="s">&quot;Starting VM process through Zygote failed&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span>
</span><span class='line'>                <span class="s">&quot;Starting VM process through Zygote failed&quot;</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;></p>

<figure class='code'><figcaption><span>Process.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="n">ProcessStartResult</span> <span class="nf">startViaZygote</span><span class="o">(</span><span class="kd">final</span> <span class="n">String</span> <span class="n">processClass</span><span class="o">,</span>
</span><span class='line'>                              <span class="kd">final</span> <span class="n">String</span> <span class="n">niceName</span><span class="o">,</span>
</span><span class='line'>                              <span class="kd">final</span> <span class="kt">int</span> <span class="n">uid</span><span class="o">,</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">gid</span><span class="o">,</span>
</span><span class='line'>                              <span class="kd">final</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">gids</span><span class="o">,</span>
</span><span class='line'>                              <span class="kt">int</span> <span class="n">debugFlags</span><span class="o">,</span> <span class="kt">int</span> <span class="n">mountExternal</span><span class="o">,</span>
</span><span class='line'>                              <span class="kt">int</span> <span class="n">targetSdkVersion</span><span class="o">,</span>
</span><span class='line'>                              <span class="n">String</span> <span class="n">seInfo</span><span class="o">,</span>
</span><span class='line'>                              <span class="n">String</span><span class="o">[]</span> <span class="n">extraArgs</span><span class="o">)</span>
</span><span class='line'>                              <span class="kd">throws</span> <span class="n">ZygoteStartFailedEx</span> <span class="o">{</span>
</span><span class='line'>         <span class="o">...</span>
</span><span class='line'>         <span class="k">return</span> <span class="nf">zygoteSendArgsAndGetResult</span><span class="o">(</span><span class="n">argsForZygote</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Process.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="n">ProcessStartResult</span> <span class="nf">zygoteSendArgsAndGetResult</span><span class="o">(</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">args</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">ZygoteStartFailedEx</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">openZygoteSocketIfNeeded</span><span class="o">();</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>        <span class="n">sZygoteWriter</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">size</span><span class="o">()));</span>            <span class="n">sZygoteWriter</span><span class="o">.</span><span class="na">newLine</span><span class="o">();</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>        <span class="n">sZygoteWriter</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">arg</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>openZygoteSocketIfNeeded?</p>

<figure class='code'><figcaption><span>Process.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">ZYGOTE_SOCKET</span> <span class="o">=</span> <span class="s">&quot;zygote&quot;</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">openZygoteSocketIfNeeded</span><span class="o">()</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">ZygoteStartFailedEx</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">sZygoteSocket</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LocalSocket</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">sZygoteSocket</span><span class="o">.</span><span class="na">connect</span><span class="o">(</span><span class="k">new</span> <span class="n">LocalSocketAddress</span><span class="o">(</span><span class="n">ZYGOTE_SOCKET</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">LocalSocketAddress</span><span class="o">.</span><span class="na">Namespace</span><span class="o">.</span><span class="na">RESERVED</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>yes &ndash;> connect to &ldquo;zygote&rdquo; and send args, back to zygote:</p>

<figure class='code'><figcaption><span>ZygoteInit.java </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>   <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">runSelectLoop</span><span class="o">(){</span>
</span><span class='line'>                <span class="n">done</span> <span class="o">=</span> <span class="n">peers</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">).</span><span class="na">runOnce</span><span class="o">();</span>
</span><span class='line'>   <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;>runOnce?</p>

<figure class='code'><figcaption><span>ZygoteConnection.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">boolean</span> <span class="nf">runOnce</span><span class="o">(){</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">pid</span> <span class="o">=</span> <span class="n">Zygote</span><span class="o">.</span><span class="na">forkAndSpecialize</span><span class="o">(</span><span class="n">parsedArgs</span><span class="o">.</span><span class="na">uid</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">gid</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">gids</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">parsedArgs</span><span class="o">.</span><span class="na">debugFlags</span><span class="o">,</span> <span class="n">rlimits</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">mountExternal</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">seInfo</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">parsedArgs</span><span class="o">.</span><span class="na">niceName</span><span class="o">);</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">handleChildProc</span><span class="o">(</span><span class="n">parsedArgs</span><span class="o">,</span> <span class="n">descriptors</span><span class="o">,</span> <span class="n">childPipeFd</span><span class="o">,</span> <span class="n">newStderr</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;>
Zygote.forkAndSpecialize</p>

<figure class='code'><figcaption><span>Zygote.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">forkAndSpecialize</span><span class="o">(</span><span class="kt">int</span> <span class="n">uid</span><span class="o">,</span> <span class="kt">int</span> <span class="n">gid</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">gids</span><span class="o">,</span> <span class="kt">int</span> <span class="n">debugFlags</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">int</span><span class="o">[][]</span> <span class="n">rlimits</span><span class="o">,</span> <span class="kt">int</span> <span class="n">mountExternal</span><span class="o">,</span> <span class="n">String</span> <span class="n">seInfo</span><span class="o">,</span> <span class="n">String</span> <span class="n">niceName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">preFork</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">pid</span> <span class="o">=</span> <span class="n">nativeForkAndSpecialize</span><span class="o">(</span>
</span><span class='line'>            <span class="n">uid</span><span class="o">,</span> <span class="n">gid</span><span class="o">,</span> <span class="n">gids</span><span class="o">,</span> <span class="n">debugFlags</span><span class="o">,</span> <span class="n">rlimits</span><span class="o">,</span> <span class="n">mountExternal</span><span class="o">,</span> <span class="n">seInfo</span><span class="o">,</span> <span class="n">niceName</span><span class="o">);</span>
</span><span class='line'>    <span class="n">postFork</span><span class="o">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">pid</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;> nativeForkAndSpecialize</p>

<figure class='code'><figcaption><span>dalvik_system_Zygote.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="n">Dalvik_dalvik_system_Zygote_forkAndSpecialize</span><span class="p">(</span><span class="k">const</span> <span class="n">u4</span><span class="o">*</span> <span class="n">args</span><span class="p">,</span>
</span><span class='line'>    <span class="n">JValue</span><span class="o">*</span> <span class="n">pResult</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">pid_t</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">pid</span> <span class="o">=</span> <span class="n">forkAndSpecializeCommon</span><span class="p">(</span><span class="n">args</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">RETURN_INT</span><span class="p">(</span><span class="n">pid</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="n">pid_t</span> <span class="n">forkAndSpecializeCommon</span><span class="p">(</span><span class="k">const</span> <span class="n">u4</span><span class="o">*</span> <span class="n">args</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">isSystemServer</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'> <span class="n">pid</span> <span class="o">=</span> <span class="n">fork</span><span class="p">();</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="k">return</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>fork 创建新进程，返回到 ZygoteConnection 的 runOnce.</p>

<figure class='code'><figcaption><span>frameworks/base/core/java/com/android/internal/os/ZygoteConnection.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="kt">boolean</span> <span class="nf">runOnce</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span> <span class="o">{</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">pid</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// in child</span>
</span><span class='line'>                <span class="n">IoUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">serverPipeFd</span><span class="o">);</span>
</span><span class='line'>                <span class="n">serverPipeFd</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                <span class="n">handleChildProc</span><span class="o">(</span><span class="n">parsedArgs</span><span class="o">,</span> <span class="n">descriptors</span><span class="o">,</span> <span class="n">childPipeFd</span><span class="o">,</span> <span class="n">newStderr</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// should never get here, the child is expected to either</span>
</span><span class='line'>                <span class="c1">// throw ZygoteInit.MethodAndArgsCaller or exec().</span>
</span><span class='line'>                <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// in parent...pid of &lt; 0 means failure</span>
</span><span class='line'>                <span class="n">IoUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">childPipeFd</span><span class="o">);</span>
</span><span class='line'>                <span class="n">childPipeFd</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                <span class="k">return</span> <span class="nf">handleParentProc</span><span class="o">(</span><span class="n">pid</span><span class="o">,</span> <span class="n">descriptors</span><span class="o">,</span> <span class="n">serverPipeFd</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">IoUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">childPipeFd</span><span class="o">);</span>
</span><span class='line'>            <span class="n">IoUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">serverPipeFd</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>子进程进入 &ndash;> handleChildProc</p>

<figure class='code'><figcaption><span>frameworks/base/core/java/com/android/internal/os/ZygoteConnection.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">handleChildProc</span><span class="o">(</span><span class="n">Arguments</span> <span class="n">parsedArgs</span><span class="o">,</span>
</span><span class='line'>        <span class="n">FileDescriptor</span><span class="o">[]</span> <span class="n">descriptors</span><span class="o">,</span> <span class="n">FileDescriptor</span> <span class="n">pipeFd</span><span class="o">,</span> <span class="n">PrintStream</span> <span class="n">newStderr</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span> <span class="o">{</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>                <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">invokeStaticMain</span><span class="o">(</span><span class="n">cloader</span><span class="o">,</span> <span class="n">className</span><span class="o">,</span> <span class="n">mainArgs</span><span class="o">);</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>调用 className 的 main 方法, className 是哪个呢？就是上面传入的 &ldquo;android.app.ActivityThread&rdquo;</p>

<p>&ndash;></p>

<figure class='code'><figcaption><span>frameworks/base/core/java/com/android/internal/os/ZygoteInit.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">static</span> <span class="kt">void</span> <span class="nf">invokeStaticMain</span><span class="o">(</span><span class="n">ClassLoader</span> <span class="n">loader</span><span class="o">,</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">className</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">argv</span><span class="o">)</span>
</span><span class='line'>            <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span> <span class="o">{</span>
</span><span class='line'>         <span class="o">...</span>
</span><span class='line'>         <span class="n">cl</span> <span class="o">=</span> <span class="n">loader</span><span class="o">.</span><span class="na">loadClass</span><span class="o">(</span><span class="n">className</span><span class="o">);</span>
</span><span class='line'>         <span class="n">m</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="na">getMethod</span><span class="o">(</span><span class="s">&quot;main&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Class</span><span class="o">[]</span> <span class="o">{</span> <span class="n">String</span><span class="o">[].</span><span class="na">class</span> <span class="o">});</span>
</span><span class='line'>         <span class="o">...</span>
</span><span class='line'>        <span class="cm">/*</span>
</span><span class='line'><span class="cm">         * This throw gets caught in ZygoteInit.main(), which responds</span>
</span><span class='line'><span class="cm">         * by invoking the exception&#39;s run() method. This arrangement</span>
</span><span class='line'><span class="cm">         * clears up all the stack frames that were required in setting</span>
</span><span class='line'><span class="cm">         * up the process.</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span><span class="o">(</span><span class="n">m</span><span class="o">,</span> <span class="n">argv</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>抛出异常，返回到 ZygoteInit.main() 里面 ;&ndash;)</p>

<figure class='code'><figcaption><span>frameworks/base/core/java/com/android/internal/os/ZygoteInit.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">argv</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">MethodAndArgsCaller</span> <span class="n">caller</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">caller</span><span class="o">.</span><span class="na">run</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在这里执行 &ldquo;android.app.ActivityThread&rdquo; 的 main 方法.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[alarm]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/12/27/alarm/"/>
    <updated>2013-12-27T14:40:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/12/27/alarm</id>
    <content type="html"><![CDATA[<p>关于时间，我们还知之甚少。</p>

<!-- more -->


<p>不知道是谁发现了时间这个 NB 的概念! 有了时间，使得我们可以知道从一个事件到另外一个事件，中间经历了多久。时间参考系的建立，使得我们可以即使在不同的地点也可以取得同步，完成协作。</p>

<p>每个系统都要维持一个时钟系统，一方面维持自身的秩序，另一方面和外界取得一致。</p>

<p>Linux 和 Android 都不例外。在手机上我们需要时间系统提供什么样的服务呢？</p>

<ul>
<li>允许我设置时间/同步时间。</li>
<li>告诉我现在是什么时间。</li>
<li>告诉我系统运行了多长时间。</li>
<li>允许我设置特定时间提醒。</li>
</ul>


<p>先来看看设置特定时间提醒这个功能。</p>

<p>这个特定时间，有两个参考系:</p>

<ul>
<li>RTC</li>
<li>ELAPSED_REALTIME</li>
</ul>


<p><code>RTC</code> 指得就是当前时间,UTC时间，java api <code>System.currentTimeMillis()</code> 返回的时间，通过这个时间我们知道现在是几年几月几日几时几分几秒。</p>

<p><code>ELAPSED_REALTIME</code> 指的是过去的时间，从开机开始过去了多久， java api <code>SystemClock.elapsedRealtime()</code> 返回的时间， 通过这个时间我们知道系统运行了多久。</p>

<p>由于手机系统会有 &ldquo;休眠&rdquo; 状态，特定时间提醒这个服务在 &ldquo;休眠&rdquo; 状态可以有两种选择，唤醒手机提醒，或者不唤醒手机，等待手机被其他原因唤醒后再提醒。针对这个特性，又添加了两种类型:</p>

<ul>
<li>RTC_WAKEUP</li>
<li>ELAPSED_REALTIME_WAKEUP</li>
</ul>


<p><code>RTC_WAKEUP</code> 基于 UTC 时间，唤醒手机进行提醒，<code>RTC</code> 默认不会唤醒手机。</p>

<p><code>ELAPSED_REALTIME_WAKEUP</code> 类似的，基于开机过去时间，唤醒手机进行提醒。<code>ELAPSED_REALTIME</code> 不会。</p>

<p>先看下在 app layer 如何设置特定时间提醒:</p>

<figure class='code'><figcaption><span>packages/apps/DeskClock/src/com/android/deskclock/alarms/AlarmStateManager.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="n">AlarmManager</span> <span class="n">am</span> <span class="o">=</span> <span class="o">(</span><span class="n">AlarmManager</span><span class="o">)</span> <span class="n">context</span><span class="o">.</span><span class="na">getSystemService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">ALARM_SERVICE</span><span class="o">);</span>
</span><span class='line'> <span class="n">am</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">AlarmManager</span><span class="o">.</span><span class="na">RTC_WAKEUP</span><span class="o">,</span> <span class="n">timeInMillis</span><span class="o">,</span> <span class="n">pendingIntent</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>获取 AlarmManager ，设置在 RTC 时间  <code>timeInMillis</code> 唤醒并触发 <code>pendingIntent</code> 提醒。</p>

<p>我们知道 AlarmManager 是 AlarmManagerService 的代理，它最后会 IPC到 AlarmManagerService 调用相关的接口。</p>

<figure class='code'><figcaption><span>framework/base/core/java/android/app/AlarmManager.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setExact</span><span class="o">(</span><span class="kt">int</span> <span class="n">type</span><span class="o">,</span> <span class="kt">long</span> <span class="n">triggerAtMillis</span><span class="o">,</span> <span class="n">PendingIntent</span> <span class="n">operation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>     <span class="n">setImpl</span><span class="o">(</span><span class="n">type</span><span class="o">,</span> <span class="n">triggerAtMillis</span><span class="o">,</span> <span class="n">WINDOW_EXACT</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">operation</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'> <span class="kd">private</span> <span class="kt">void</span> <span class="nf">setImpl</span><span class="o">(</span><span class="kt">int</span> <span class="n">type</span><span class="o">,</span> <span class="kt">long</span> <span class="n">triggerAtMillis</span><span class="o">,</span> <span class="kt">long</span> <span class="n">windowMillis</span><span class="o">,</span> <span class="kt">long</span> <span class="n">intervalMillis</span><span class="o">,</span>
</span><span class='line'>         <span class="n">PendingIntent</span> <span class="n">operation</span><span class="o">,</span> <span class="n">WorkSource</span> <span class="n">workSource</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>         <span class="n">mService</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">type</span><span class="o">,</span> <span class="n">triggerAtMillis</span><span class="o">,</span> <span class="n">windowMillis</span><span class="o">,</span> <span class="n">intervalMillis</span><span class="o">,</span> <span class="n">operation</span><span class="o">,</span>
</span><span class='line'>                 <span class="n">workSource</span><span class="o">);</span>
</span><span class='line'>     <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">RemoteException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>     <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>到 AlarmManagerService :</p>

<figure class='code'><figcaption><span>framework/base/core/java/android/app/AlarmManager.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">set</span><span class="o">(</span><span class="kt">int</span> <span class="n">type</span><span class="o">,</span> <span class="kt">long</span> <span class="n">triggerAtTime</span><span class="o">,</span> <span class="kt">long</span> <span class="n">windowLength</span><span class="o">,</span> <span class="kt">long</span> <span class="n">interval</span><span class="o">,</span>
</span><span class='line'>            <span class="n">PendingIntent</span> <span class="n">operation</span><span class="o">,</span> <span class="n">WorkSource</span> <span class="n">workSource</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">workSource</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mContext</span><span class="o">.</span><span class="na">enforceCallingPermission</span><span class="o">(</span>
</span><span class='line'>                    <span class="n">android</span><span class="o">.</span><span class="na">Manifest</span><span class="o">.</span><span class="na">permission</span><span class="o">.</span><span class="na">UPDATE_DEVICE_STATS</span><span class="o">,</span>
</span><span class='line'>                    <span class="s">&quot;AlarmManager.set&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">set</span><span class="o">(</span><span class="n">type</span><span class="o">,</span> <span class="n">triggerAtTime</span><span class="o">,</span> <span class="n">windowLength</span><span class="o">,</span> <span class="n">interval</span><span class="o">,</span> <span class="n">operation</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">workSource</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">-&gt;</span>
</span><span class='line'> <span class="kd">public</span> <span class="kt">void</span> <span class="nf">set</span><span class="o">(</span><span class="kt">int</span> <span class="n">type</span><span class="o">,</span> <span class="kt">long</span> <span class="n">triggerAtTime</span><span class="o">,</span> <span class="kt">long</span> <span class="n">windowLength</span><span class="o">,</span> <span class="kt">long</span> <span class="n">interval</span><span class="o">,</span>
</span><span class='line'>            <span class="n">PendingIntent</span> <span class="n">operation</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isStandalone</span><span class="o">,</span> <span class="n">WorkSource</span> <span class="n">workSource</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'> <span class="n">setImplLocked</span><span class="o">(</span><span class="n">type</span><span class="o">,</span> <span class="n">triggerAtTime</span><span class="o">,</span> <span class="n">triggerElapsed</span><span class="o">,</span> <span class="n">windowLength</span><span class="o">,</span> <span class="n">maxElapsed</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">interval</span><span class="o">,</span> <span class="n">operation</span><span class="o">,</span> <span class="n">isStandalone</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="n">workSource</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-&gt;</span>
</span><span class='line'>
</span><span class='line'> <span class="kd">private</span> <span class="kt">void</span> <span class="nf">setImplLocked</span><span class="o">(</span><span class="kt">int</span> <span class="n">type</span><span class="o">,</span> <span class="kt">long</span> <span class="n">when</span><span class="o">,</span> <span class="kt">long</span> <span class="n">whenElapsed</span><span class="o">,</span> <span class="kt">long</span> <span class="n">windowLength</span><span class="o">,</span>
</span><span class='line'>            <span class="kt">long</span> <span class="n">maxWhen</span><span class="o">,</span> <span class="kt">long</span> <span class="n">interval</span><span class="o">,</span> <span class="n">PendingIntent</span> <span class="n">operation</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">isStandalone</span><span class="o">,</span>
</span><span class='line'>            <span class="kt">boolean</span> <span class="n">doValidate</span><span class="o">,</span> <span class="n">WorkSource</span> <span class="n">workSource</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">rescheduleKernelAlarmsLocked</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">rescheduleKernelAlarmsLocked</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Schedule the next upcoming wakeup alarm.  If there is a deliverable batch</span>
</span><span class='line'>        <span class="c1">// prior to that which contains no wakeups, we schedule that as well.</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mAlarmBatches</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="kd">final</span> <span class="n">Batch</span> <span class="n">firstWakeup</span> <span class="o">=</span> <span class="n">findFirstWakeupBatchLocked</span><span class="o">();</span>
</span><span class='line'>            <span class="kd">final</span> <span class="n">Batch</span> <span class="n">firstBatch</span> <span class="o">=</span> <span class="n">mAlarmBatches</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">firstWakeup</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">mNextWakeup</span> <span class="o">!=</span> <span class="n">firstWakeup</span><span class="o">.</span><span class="na">start</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">mNextWakeup</span> <span class="o">=</span> <span class="n">firstWakeup</span><span class="o">.</span><span class="na">start</span><span class="o">;</span>
</span><span class='line'>                <span class="n">setLocked</span><span class="o">(</span><span class="n">ELAPSED_REALTIME_WAKEUP</span><span class="o">,</span> <span class="n">firstWakeup</span><span class="o">.</span><span class="na">start</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">firstBatch</span> <span class="o">!=</span> <span class="n">firstWakeup</span> <span class="o">&amp;&amp;</span> <span class="n">mNextNonWakeup</span> <span class="o">!=</span> <span class="n">firstBatch</span><span class="o">.</span><span class="na">start</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">mNextNonWakeup</span> <span class="o">=</span> <span class="n">firstBatch</span><span class="o">.</span><span class="na">start</span><span class="o">;</span>
</span><span class='line'>                <span class="n">setLocked</span><span class="o">(</span><span class="n">ELAPSED_REALTIME</span><span class="o">,</span> <span class="n">firstBatch</span><span class="o">.</span><span class="na">start</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-&gt;</span>
</span><span class='line'>
</span><span class='line'> <span class="kd">private</span> <span class="kt">void</span> <span class="nf">setLocked</span><span class="o">(</span><span class="kt">int</span> <span class="n">type</span><span class="o">,</span> <span class="kt">long</span> <span class="n">when</span><span class="o">)</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">mDescriptor</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="c1">// The kernel never triggers alarms with negative wakeup times</span>
</span><span class='line'>            <span class="c1">// so we ensure they are positive.</span>
</span><span class='line'>            <span class="kt">long</span> <span class="n">alarmSeconds</span><span class="o">,</span> <span class="n">alarmNanoseconds</span><span class="o">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">when</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">alarmSeconds</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>                <span class="n">alarmNanoseconds</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">alarmSeconds</span> <span class="o">=</span> <span class="n">when</span> <span class="o">/</span> <span class="mi">1000</span><span class="o">;</span>
</span><span class='line'>                <span class="n">alarmNanoseconds</span> <span class="o">=</span> <span class="o">(</span><span class="n">when</span> <span class="o">%</span> <span class="mi">1000</span><span class="o">)</span> <span class="o">*</span> <span class="mi">1000</span> <span class="o">*</span> <span class="mi">1000</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">set</span><span class="o">(</span><span class="n">mDescriptor</span><span class="o">,</span> <span class="n">type</span><span class="o">,</span> <span class="n">alarmSeconds</span><span class="o">,</span> <span class="n">alarmNanoseconds</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-&gt;</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">native</span> <span class="kt">void</span> <span class="nf">set</span><span class="o">(</span><span class="kt">int</span> <span class="n">fd</span><span class="o">,</span> <span class="kt">int</span> <span class="n">type</span><span class="o">,</span> <span class="kt">long</span> <span class="n">seconds</span><span class="o">,</span> <span class="kt">long</span> <span class="n">nanoseconds</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>native 方法:</p>

<figure class='code'><figcaption><span>frameworks/base/services/jni/com_android_server_AlarmManagerService.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="n">android_server_AlarmManagerService_set</span><span class="p">(</span><span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">obj</span><span class="p">,</span> <span class="n">jint</span> <span class="n">fd</span><span class="p">,</span> <span class="n">jint</span> <span class="n">type</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">seconds</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">nanoseconds</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">timespec</span> <span class="n">ts</span><span class="p">;</span>
</span><span class='line'>    <span class="n">ts</span><span class="p">.</span><span class="n">tv_sec</span> <span class="o">=</span> <span class="n">seconds</span><span class="p">;</span>
</span><span class='line'>    <span class="n">ts</span><span class="p">.</span><span class="n">tv_nsec</span> <span class="o">=</span> <span class="n">nanoseconds</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">ioctl</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">ANDROID_ALARM_SET</span><span class="p">(</span><span class="n">type</span><span class="p">),</span> <span class="o">&amp;</span><span class="n">ts</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">result</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">ALOGE</span><span class="p">(</span><span class="s">&quot;Unable to set alarm to %lld.%09lld: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">seconds</span><span class="p">,</span> <span class="n">nanoseconds</span><span class="p">,</span> <span class="n">strerror</span><span class="p">(</span><span class="n">errno</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>fd 从哪里来的？AlarmManagerService 初始化来的:</p>

<figure class='code'><figcaption><span>frameworks/services/java/com/android/server/AlarmManagerService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="kd">public</span> <span class="nf">AlarmManagerService</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>        <span class="n">mDescriptor</span> <span class="o">=</span> <span class="n">init</span><span class="o">();</span>
</span><span class='line'>        <span class="n">mNextWakeup</span> <span class="o">=</span> <span class="n">mNextNonWakeup</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>init 是 native 方法:</p>

<figure class='code'><figcaption><span>frameworks/base/services/jni/com_android_server_AlarmManagerService.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="n">jint</span> <span class="n">android_server_AlarmManagerService_init</span><span class="p">(</span><span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">obj</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">open</span><span class="p">(</span><span class="s">&quot;/dev/alarm&quot;</span><span class="p">,</span> <span class="n">O_RDWR</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在设下 alarm 之后， AlarmManagerService 启动了一个 AlarmThread 来等待 alarm 的事件。</p>

<figure class='code'><figcaption><span>frameworks/services/java/com/android/server/AlarmManagerService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="kd">private</span> <span class="kd">final</span> <span class="n">AlarmThread</span> <span class="n">mWaitThread</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AlarmThread</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'> <span class="kd">public</span> <span class="nf">AlarmManagerService</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>         <span class="o">...</span>
</span><span class='line'>         <span class="k">if</span> <span class="o">(</span><span class="n">mDescriptor</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mWaitThread</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Slog</span><span class="o">.</span><span class="na">w</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Failed to open alarm driver. Falling back to a handler.&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个 AlarmThread 就会循环等待 alarm 事件！</p>

<figure class='code'><figcaption><span>frameworks/services/java/com/android/server/AlarmManagerService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>  <span class="kd">private</span> <span class="kd">class</span> <span class="nc">AlarmThread</span> <span class="kd">extends</span> <span class="n">Thread</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="nf">AlarmThread</span><span class="o">()</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="kd">super</span><span class="o">(</span><span class="s">&quot;AlarmManager&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Alarm</span><span class="o">&gt;</span> <span class="n">triggerList</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Alarm</span><span class="o">&gt;();</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span>
</span><span class='line'>            <span class="o">{</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">waitForAlarm</span><span class="o">(</span><span class="n">mDescriptor</span><span class="o">);</span>
</span><span class='line'>                <span class="o">...</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>等到设定的时间到了的时候， AlarmManagerService 就会收到消息，发送当初设定的 PendingIntent.</p>

<p>这样就满足了设定特定时间提醒的功能。</p>

<p>对于像钟表这样的程序，就需要一种机制，几乎是时时的告诉，当前是什么时间，而且要每一秒都要更新。这个需求怎么满足呢？</p>

<p>Android 的设计中有一个 Intent 是标识这种时间改变的，但是不是每秒，是每分钟啊 ！！</p>

<figure class='code'><figcaption><span>Intent.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**  </span>
</span><span class='line'><span class="cm"> * Broadcast Action: The current time has changed.  Sent every</span>
</span><span class='line'><span class="cm"> * minute.  You can &lt;em&gt;not&lt;/em&gt; receive this through components declared</span>
</span><span class='line'><span class="cm"> * in manifests, only by explicitly registering for it with</span>
</span><span class='line'><span class="cm"> * {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)</span>
</span><span class='line'><span class="cm"> * Context.registerReceiver()}.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * &lt;p class=&quot;note&quot;&gt;This is a protected intent that can only be sent</span>
</span><span class='line'><span class="cm"> * by the system.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nd">@SdkConstant</span><span class="o">(</span><span class="n">SdkConstantType</span><span class="o">.</span><span class="na">BROADCAST_INTENT_ACTION</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">ACTION_TIME_TICK</span> <span class="o">=</span> <span class="s">&quot;android.intent.action.TIME_TICK&quot;</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>你只要注册了这个 Intent , 每分钟开始的时候都会受到这个 Intent。AlarmManagerService 是如何提供这个服务的呢？</p>

<p>在 AlarmManagerService 的构造函数中会创建一个 ClockReceiver， 并在 scheduleTimeTickEvent 中调用native <code>set</code> 方法设置一个一分钟后的时间提醒，设置的 PendingIntent 就是 ACTION_TIME_TICK 这个 Intent。</p>

<p>而且，这个 ClockReceiver 还注册了ACTION_TIME_TICK 的监听。一分钟后它自己也会收到 ACTION_TIME_TICK，收到之后，它又调用了一次 scheduleTimeTickEvent，设定了下一分钟的提醒。如是，每分钟都会可以收到这个提醒了！</p>

<figure class='code'><figcaption><span>frameworks/services/java/com/android/server/AlarmManagerService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>  <span class="kd">public</span> <span class="nf">AlarmManagerService</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">mTimeTickSender</span> <span class="o">=</span> <span class="n">PendingIntent</span><span class="o">.</span><span class="na">getBroadcastAsUser</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span>
</span><span class='line'>                <span class="k">new</span> <span class="nf">Intent</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">ACTION_TIME_TICK</span><span class="o">).</span><span class="na">addFlags</span><span class="o">(</span>
</span><span class='line'>                        <span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_RECEIVER_REGISTERED_ONLY</span>
</span><span class='line'>                        <span class="o">|</span> <span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_RECEIVER_FOREGROUND</span><span class="o">),</span> <span class="mi">0</span><span class="o">,</span>
</span><span class='line'>                        <span class="n">UserHandle</span><span class="o">.</span><span class="na">ALL</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// now that we have initied the driver schedule the alarm</span>
</span><span class='line'>        <span class="n">mClockReceiver</span><span class="o">=</span> <span class="k">new</span> <span class="n">ClockReceiver</span><span class="o">();</span>
</span><span class='line'>        <span class="n">mClockReceiver</span><span class="o">.</span><span class="na">scheduleTimeTickEvent</span><span class="o">();</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>   <span class="kd">class</span> <span class="nc">ClockReceiver</span> <span class="kd">extends</span> <span class="n">BroadcastReceiver</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="nf">ClockReceiver</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">IntentFilter</span> <span class="n">filter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IntentFilter</span><span class="o">();</span>
</span><span class='line'>            <span class="n">filter</span><span class="o">.</span><span class="na">addAction</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">ACTION_TIME_TICK</span><span class="o">);</span>
</span><span class='line'>            <span class="n">filter</span><span class="o">.</span><span class="na">addAction</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">ACTION_DATE_CHANGED</span><span class="o">);</span>
</span><span class='line'>            <span class="n">mContext</span><span class="o">.</span><span class="na">registerReceiver</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">filter</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>       <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onReceive</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">ACTION_TIME_TICK</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">scheduleTimeTickEvent</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">scheduleTimeTickEvent</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="kd">final</span> <span class="kt">long</span> <span class="n">currentTime</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span><span class='line'>            <span class="kd">final</span> <span class="kt">long</span> <span class="n">nextTime</span> <span class="o">=</span> <span class="mi">60000</span> <span class="o">*</span> <span class="o">((</span><span class="n">currentTime</span> <span class="o">/</span> <span class="mi">60000</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Schedule this event for the amount of time that it would take to get to</span>
</span><span class='line'>            <span class="c1">// the top of the next minute.</span>
</span><span class='line'>            <span class="kd">final</span> <span class="kt">long</span> <span class="n">tickEventDelay</span> <span class="o">=</span> <span class="n">nextTime</span> <span class="o">-</span> <span class="n">currentTime</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="kd">final</span> <span class="n">WorkSource</span> <span class="n">workSource</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span> <span class="c1">// Let system take blame for time tick events.</span>
</span><span class='line'>            <span class="n">set</span><span class="o">(</span><span class="n">ELAPSED_REALTIME</span><span class="o">,</span> <span class="n">SystemClock</span><span class="o">.</span><span class="na">elapsedRealtime</span><span class="o">()</span> <span class="o">+</span> <span class="n">tickEventDelay</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span>
</span><span class='line'>                    <span class="mi">0</span><span class="o">,</span> <span class="n">mTimeTickSender</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="n">workSource</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可是这样的话，每秒钟的提醒它肯定满足不了，那么时钟是如何实现秒针的现实的呢？</p>

<figure class='code'><figcaption><span>packages/apps/DeskClock/src/com/android/deskclock/AnalogClock.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onAttachedToWindow</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>     <span class="o">...</span>
</span><span class='line'>     <span class="c1">// tick the seconds</span>
</span><span class='line'>     <span class="n">post</span><span class="o">(</span><span class="n">mClockTick</span><span class="o">);</span>
</span><span class='line'>     <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="n">Runnable</span> <span class="n">mClockTick</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Runnable</span> <span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">onTimeChanged</span><span class="o">();</span>
</span><span class='line'>            <span class="n">invalidate</span><span class="o">();</span>
</span><span class='line'>            <span class="n">AnalogClock</span><span class="o">.</span><span class="na">this</span><span class="o">.</span><span class="na">postDelayed</span><span class="o">(</span><span class="n">mClockTick</span><span class="o">,</span> <span class="mi">1000</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>在创建的时候 post 一个 Runnable， 在 Runnable 中的 run 方法中 又设定了在一秒钟之后，再 post 这个 Runnable。这样每秒钟都会执行 Runnable 一次，进行重新绘制。</p>

<p>DeskClock 中的 widget 插件和应用里面第二个 TAB 中的数字时钟都是使用 <code>TextClock</code>， <code>TextClock</code> 也是监听 <code>ACTION_TIME_TICK</code> 来完成每分钟的更新的。参考代码：</p>

<ul>
<li>frameworks/base/core/java/android/widget/TextClock.java</li>
</ul>


<p>Statusbar 上的 Clock 也是监听 <code>ACTION_TIME_TICK</code> 来完成每分钟的更新的。参考代码:</p>

<ul>
<li>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/policy/Clock.java</li>
</ul>


<p>Keyguard 上的 Clock 显示也是使用的 <code>TextClock</code> 同上 。</p>

<p>对于分钟这个精度的时间显示都可以使用监听 <code>ACTION_TIME_TICK</code> 的方式来完成。但是收到这个 Intent 的时候并没有将当前的时间传递过来，所以还是需要另外的接口来完成获取当前准确时间的需求。</p>

<p>获取当前 UTC 时间是通过 <code>System.currentTimeMillis()</code> 来完成的。</p>

<figure class='code'><figcaption><span>libcore/luni/src/main/java/java/lang/System.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/** </span>
</span><span class='line'><span class="cm"> * Returns the current time in milliseconds since January 1, 1970 00:00:00.0 UTC.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * &lt;p&gt;This method always returns UTC times, regardless of the system&#39;s time zone.</span>
</span><span class='line'><span class="cm"> * This is often called &quot;Unix time&quot; or &quot;epoch time&quot;.</span>
</span><span class='line'><span class="cm"> * Use a {@link java.text.DateFormat} instance to format this time for display to a human.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * &lt;p&gt;This method shouldn&#39;t be used for measuring timeouts or</span>
</span><span class='line'><span class="cm"> * other elapsed time measurements, as changing the system time can affect</span>
</span><span class='line'><span class="cm"> * the results. Use {@link #nanoTime} for that.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">native</span> <span class="kt">long</span> <span class="nf">currentTimeMillis</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>为什么定义 1970.1.1 开始呢？因为那大概是Unix诞生的时间。</p>

<p>这个 native 方法调用 <code>gettimeofday</code> 来完成的:</p>

<figure class='code'><figcaption><span>libcore/luni/src/main/native/java_lang_System.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="n">jlong</span> <span class="n">System_currentTimeMillis</span><span class="p">(</span><span class="n">JNIEnv</span><span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">timeval</span> <span class="n">now</span><span class="p">;</span>
</span><span class='line'>    <span class="n">gettimeofday</span><span class="p">(</span><span class="o">&amp;</span><span class="n">now</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>    <span class="n">jlong</span> <span class="n">when</span> <span class="o">=</span> <span class="n">now</span><span class="p">.</span><span class="n">tv_sec</span> <span class="o">*</span> <span class="mi">1000LL</span> <span class="o">+</span> <span class="n">now</span><span class="p">.</span><span class="n">tv_usec</span> <span class="o">/</span> <span class="mi">1000</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">when</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 Linux shell 环境下输入 <code>man gettimeofday</code> 获取更多信息：</p>

<figure class='code'><figcaption><span>libcore/luni/src/main/native/java_lang_System.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">GETTIMEOFDAY</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>                                      <span class="n">Linux</span> <span class="n">Programmer</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">Manual</span>                                     <span class="n">GETTIMEOFDAY</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">NAME</span>
</span><span class='line'>       <span class="n">gettimeofday</span><span class="p">,</span> <span class="n">settimeofday</span> <span class="o">-</span> <span class="n">get</span> <span class="o">/</span> <span class="n">set</span> <span class="n">time</span>
</span><span class='line'>
</span><span class='line'><span class="n">SYNOPSIS</span>
</span><span class='line'>       <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">sys</span><span class="o">/</span><span class="n">time</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>       <span class="kt">int</span> <span class="n">gettimeofday</span><span class="p">(</span><span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tv</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timezone</span> <span class="o">*</span><span class="n">tz</span><span class="p">);</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">settimeofday</span><span class="p">(</span><span class="k">const</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tv</span><span class="p">,</span> <span class="k">const</span> <span class="k">struct</span> <span class="n">timezone</span> <span class="o">*</span><span class="n">tz</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">Feature</span> <span class="n">Test</span> <span class="n">Macro</span> <span class="n">Requirements</span> <span class="k">for</span> <span class="n">glibc</span> <span class="p">(</span><span class="n">see</span> <span class="n">feature_test_macros</span><span class="p">(</span><span class="mi">7</span><span class="p">))</span><span class="o">:</span>
</span><span class='line'>
</span><span class='line'>       <span class="n">settimeofday</span><span class="p">()</span><span class="o">:</span> <span class="n">_BSD_SOURCE</span>
</span><span class='line'>
</span><span class='line'><span class="n">DESCRIPTION</span>
</span><span class='line'>       <span class="n">The</span>  <span class="n">functions</span>  <span class="n">gettimeofday</span><span class="p">()</span>  <span class="n">and</span>  <span class="n">settimeofday</span><span class="p">()</span>  <span class="n">can</span>  <span class="n">get</span> <span class="n">and</span> <span class="n">set</span> <span class="n">the</span> <span class="n">time</span> <span class="n">as</span> <span class="n">well</span> <span class="n">as</span> <span class="n">a</span> <span class="n">timezone</span><span class="p">.</span>  <span class="n">The</span> <span class="n">tv</span> <span class="n">argument</span> <span class="n">is</span> <span class="n">a</span>
</span><span class='line'>       <span class="k">struct</span> <span class="n">timeval</span> <span class="p">(</span><span class="n">as</span> <span class="n">specified</span> <span class="n">in</span> <span class="o">&lt;</span><span class="n">sys</span><span class="o">/</span><span class="n">time</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>
</span><span class='line'>           <span class="k">struct</span> <span class="n">timeval</span> <span class="p">{</span>
</span><span class='line'>               <span class="n">time_t</span>      <span class="n">tv_sec</span><span class="p">;</span>     <span class="cm">/* seconds */</span>
</span><span class='line'>               <span class="n">suseconds_t</span> <span class="n">tv_usec</span><span class="p">;</span>    <span class="cm">/* microseconds */</span>
</span><span class='line'>           <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>       <span class="n">and</span> <span class="n">gives</span> <span class="n">the</span> <span class="n">number</span> <span class="n">of</span> <span class="n">seconds</span> <span class="n">and</span> <span class="n">microseconds</span> <span class="n">since</span> <span class="n">the</span> <span class="n">Epoch</span> <span class="p">(</span><span class="n">see</span> <span class="n">time</span><span class="p">(</span><span class="mi">2</span><span class="p">)).</span>  <span class="n">The</span> <span class="n">tz</span> <span class="n">argument</span> <span class="n">is</span> <span class="n">a</span> <span class="k">struct</span> <span class="nl">timezone:</span>
</span><span class='line'>
</span><span class='line'>           <span class="k">struct</span> <span class="n">timezone</span> <span class="p">{</span>
</span><span class='line'>               <span class="kt">int</span> <span class="n">tz_minuteswest</span><span class="p">;</span>     <span class="cm">/* minutes west of Greenwich */</span>
</span><span class='line'>               <span class="kt">int</span> <span class="n">tz_dsttime</span><span class="p">;</span>         <span class="cm">/* type of DST correction */</span>
</span><span class='line'>           <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>       <span class="n">If</span> <span class="n">either</span> <span class="n">tv</span> <span class="n">or</span> <span class="n">tz</span> <span class="n">is</span> <span class="nb">NULL</span><span class="p">,</span> <span class="n">the</span> <span class="n">corresponding</span> <span class="n">structure</span> <span class="n">is</span> <span class="n">not</span> <span class="n">set</span> <span class="n">or</span> <span class="n">returned</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>timeval 带有两个成员， <code>tv_sec</code> 保存秒数，<code>tv_usec</code> 保存微秒(1/1000000 秒).可以看到上面 timeval 到毫秒的转化 :</p>

<figure class='code'><figcaption><span>libcore/luni/src/main/native/java_lang_System.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">jlong</span> <span class="n">when</span> <span class="o">=</span> <span class="n">now</span><span class="p">.</span><span class="n">tv_sec</span> <span class="o">*</span> <span class="mi">1000LL</span> <span class="o">+</span> <span class="n">now</span><span class="p">.</span><span class="n">tv_usec</span> <span class="o">/</span> <span class="mi">1000</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>gettimeofday的实现是经 libc 进入内核，实际上是一个 system call 。详情参考 kernel 的代码。</p>

<p>关于 libc 和 内核的实现关系，我需要学习后再来讨论，可以参考下 <a href="http://www.win.tue.nl/~aeb/linux/lk/lk-3.html">user space and libc interface</a></p>

<p>获取系统已经运行的时间有几个不同的 API , 都在 SystemClock.java 中:</p>

<ul>
<li>elapsedRealtime ()                //Returns milliseconds since boot, including time spent in sleep.</li>
<li>elapsedRealtimeNanos ()          //Returns nanoseconds since boot, including time spent in sleep.</li>
<li>uptimeMillis ()                  //Returns milliseconds since boot, not counting time spent in deep sleep.</li>
</ul>


<p><code>elapsedRealtime()</code> 和 <code>elapsedRealtimeNanos()</code> 包含系统 sleep 的时间，而 <code>uptimeMillis()</code> 不包含 sleep 的时间。参考 <a href="http://developer.android.com/reference/android/os/SystemClock.html">SystemClock</a></p>

<p><code>elapsedRealtime()</code> api 用的比较多，Android 系统里面 Settings->About phone->Status->Uptime 显示的就是这个时间。Settings->Battery 显示的时间也是用这个时间计算出来的（减去上一次 unplug 的时间）。</p>

<p>来看下 <code>elapsedRealtime</code> 的底层实现：</p>

<figure class='code'><figcaption><span>SystemClock.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="kd">native</span> <span class="kd">public</span> <span class="kd">static</span> <span class="kt">long</span> <span class="nf">elapsedRealtime</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 SystemClock 里用的是 native 的方法。</p>

<figure class='code'><figcaption><span>frameworks/base/core/jni/android_os_SystemClock.cpp </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * native public static long elapsedRealtime();</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">static</span> <span class="n">jlong</span> <span class="n">android_os_SystemClock_elapsedRealtime</span><span class="p">(</span><span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span>
</span><span class='line'>        <span class="n">jobject</span> <span class="n">clazz</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">jlong</span><span class="p">)</span><span class="n">elapsedRealtime</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>cpp 中调用了libutils 中的方法 <code>elapsedRealtime()</code>.</p>

<figure class='code'><figcaption><span>system/core/libutils/SystemClock.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * native public static long elapsedRealtime();</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">int64_t</span> <span class="n">elapsedRealtime</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">nanoseconds_to_milliseconds</span><span class="p">(</span><span class="n">elapsedRealtimeNano</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * native public static long elapsedRealtimeNano();</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">int64_t</span> <span class="n">elapsedRealtimeNano</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="k">static</span> <span class="kt">int</span> <span class="n">s_fd</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">s_fd</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="s">&quot;/dev/alarm&quot;</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">android_atomic_cmpxchg</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">fd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">s_fd</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">close</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="n">ioctl</span><span class="p">(</span><span class="n">s_fd</span><span class="p">,</span>
</span><span class='line'>            <span class="n">ANDROID_ALARM_GET_TIME</span><span class="p">(</span><span class="n">ANDROID_ALARM_ELAPSED_REALTIME</span><span class="p">),</span> <span class="o">&amp;</span><span class="n">ts</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">result</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">timestamp</span> <span class="o">=</span> <span class="n">seconds_to_nanoseconds</span><span class="p">(</span><span class="n">ts</span><span class="p">.</span><span class="n">tv_sec</span><span class="p">)</span> <span class="o">+</span> <span class="n">ts</span><span class="p">.</span><span class="n">tv_nsec</span><span class="p">;</span>
</span><span class='line'>        <span class="n">checkTimeStamps</span><span class="p">(</span><span class="n">timestamp</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">prevTimestamp</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">prevMethod</span><span class="p">,</span> <span class="n">METHOD_IOCTL</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">timestamp</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>和闹钟的提醒功能相似，<code>elapsedRealtimeNano()</code> 也是通过 <code>/dev/alarm</code> 的 ioctl 来完成的，具体的实现要参看 driver 的代码了。</p>

<p>好了，获取当前时间(UTC)通过 kernel system call 完成， 获取系统运行时间通过 ioctl
<code>/dev/alarm</code> 来完成。</p>

<p>Alarm/Clock 系统还需要提供的一个功能是设置/同步时间。由于手机芯片中缺少一个断电之后能继续维持时间的模块，所以，拔掉电池之后再开机之后时间会出现偏差（如果没有同步或手动设置时间)。</p>

<p>在 Android 系统中， Settings-> Date &amp; Time  &ndash;> 提供了设置时间和同步时间的UI 接口。
Date 和 Time 的设置都是使用 AlarmManagerService 提供的 <code>setTime</code> 接口。</p>

<figure class='code'><figcaption><span>AlarmManagerService.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTime</span><span class="o">(</span><span class="kt">long</span> <span class="n">millis</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mContext</span><span class="o">.</span><span class="na">enforceCallingOrSelfPermission</span><span class="o">(</span>
</span><span class='line'>            <span class="s">&quot;android.permission.SET_TIME&quot;</span><span class="o">,</span>
</span><span class='line'>            <span class="s">&quot;setTime&quot;</span><span class="o">);</span>  <span class="c1">//检查 permission</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">SystemClock</span><span class="o">.</span><span class="na">setCurrentTimeMillis</span><span class="o">(</span><span class="n">millis</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>AlarmManagerService 调用了 SystemClock 的 api <code>setCurrentTimeMillis</code>.</p>

<figure class='code'><figcaption><span>SystemClock.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/** </span>
</span><span class='line'><span class="cm"> * Sets the current wall time, in milliseconds.  Requires the calling</span>
</span><span class='line'><span class="cm"> * process to have appropriate permissions.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * @return if the clock was successfully set to the specified time.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">native</span> <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">setCurrentTimeMillis</span><span class="o">(</span><span class="kt">long</span> <span class="n">millis</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>SystemClock.java 调用了 native 方法</p>

<figure class='code'><figcaption><span>android_os_SystemClock.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Set the current time.  This only works when running as root.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="n">setCurrentTimeMillis</span><span class="p">(</span><span class="n">int64_t</span> <span class="n">millis</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="s">&quot;/dev/alarm&quot;</span><span class="p">,</span> <span class="n">O_RDWR</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="n">res</span> <span class="o">=</span> <span class="n">ioctl</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">ANDROID_ALARM_SET_RTC</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ts</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>android_os_SystemClock.cpp 是直接利用 ioctl <code>/dev/alarm</code> 调用到 driver 的 alarm 来完成。</p>

<p>同步时间的功能是定期的从 Google 的服务器 2.android.pool.ntp.org (默认配置) 获取时间,刷新的时间间隔有两种，一种长的是 24 h，一种短的是 60s。</p>

<p>参考代码:</p>

<ul>
<li>frameworks/base/services/java/com/android/server/NetworkTimeUpdateService.java</li>
<li>frameworks/base/core/java/android/util/NtpTrustedTime.java</li>
<li>frameworks/base/core/res/res/values/config.xml</li>
</ul>


<p>通过 ioctl <code>/dev/alarm</code> 操组 driver 的 alarm 模块来完成设置时间，通过定期和 Google 服务器 2.android.pool.ntp.org 同步来完成时间的同步。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android properties data structure]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/12/24/android-properties-data-structure/"/>
    <updated>2013-12-24T13:04:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/12/24/android-properties-data-structure</id>
    <content type="html"><![CDATA[<p>写文章不应太多拘泥于细节：</p>

<ul>
<li>言简意赅</li>
<li>图胜于文</li>
<li>图文并茂</li>
<li>点到为止</li>
</ul>


<!-- more -->


<p>从 Jelly Bean 到 KitKat 版本， <code>properties</code> 的存储的数据结构还是有些变化的.</p>

<p>实际存储位置： <strong>/dev/__properties__</strong> 文件 (root RW， 其他只能 R)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ls -al /dev/__proper*
</span><span class='line'>-rw-r--r-- root     root        65536 1970-01-14 05:26 __properties__
</span></code></pre></td></tr></table></div></figure>


<p>关于 Jelly Bean（或者以前的)， 直接上张图，比较明了：</p>

<p><img src="http://SteveVallay.github.io/images/blog/prop_struct_jb.png" alt="jb proper data structure" /></p>

<p>先看下相关结构的定义:</p>

<figure class='code'><figcaption><span>system/core/init/property_service.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="o">*</span><span class="n">data</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">size_t</span> <span class="n">size</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="n">workspace</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>bionic/libc/bionic/system_properties.c </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">struct</span> <span class="n">prop_area</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="k">volatile</span> <span class="n">count</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="k">volatile</span> <span class="n">serial</span><span class="p">;</span>  <span class="c1">//不知道这个是干什么的?</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">magic</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">version</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">reserved</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">toc</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">prop_info</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">name</span><span class="p">[</span><span class="n">PROP_NAME_MAX</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="k">volatile</span> <span class="n">serial</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">value</span><span class="p">[</span><span class="n">PROP_VALUE_MAX</span><span class="p">];</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>toc[i] 里面存放的是 property name 的长度 (前 8 位) 和对应 proper_info 对应的地址 (后 24位)。
proper_info 的 serial (前 8 位) 保存的是 property value 的 length。</p>

<p>但是有几个问题:</p>

<ul>
<li>大小是不对的 , Jelly Bean 上大小是 65536, 可以放 495 个 properties.</li>
</ul>


<figure class='code'><figcaption><span>system/core/init/properties_service.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cm">/* (8 header words + 495 toc words) = 2012 bytes */</span>
</span><span class='line'><span class="cm">/* 2016 bytes header and toc + 495 prop_infos @ 128 bytes = 65376 bytes */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define PA_COUNT_MAX  495</span>
</span><span class='line'><span class="cp">#define PA_INFO_START 2016</span>
</span><span class='line'><span class="cp">#define PA_SIZE       65536</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>share memory 是不对的, 这个图在 init 进程里面没什么问题。但是其他进程访问（读取的时候) 其实是将同样的文件(<strong>/dev/__properties__</strong>) map 了一份到自己的内存空间。所以每个进程的这个结构是自己的，不是共享的。</li>
</ul>


<p>KitKat ：</p>

<p>KK 上总大小是  128*1024</p>

<p>数据结构:</p>

<figure class='code'><figcaption><span>bionic/libc/bionic/system_properties.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">struct</span> <span class="n">prop_area</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">bytes_used</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="k">volatile</span> <span class="n">serial</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">magic</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">version</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">reserved</span><span class="p">[</span><span class="mi">28</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">prop_info</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="k">volatile</span> <span class="n">serial</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">value</span><span class="p">[</span><span class="n">PROP_VALUE_MAX</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">name</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">prop_bt</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">uint8_t</span> <span class="n">namelen</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">uint8_t</span> <span class="n">reserved</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">prop_off_t</span> <span class="n">prop</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">prop_off_t</span> <span class="n">left</span><span class="p">;</span>
</span><span class='line'>    <span class="n">prop_off_t</span> <span class="n">right</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">prop_off_t</span> <span class="n">children</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">char</span> <span class="n">name</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>Kitkat 上 proper info 的存储已经改为 bTree 了，bytes_used 用来记录存储这些信息所使用的空间。</p>

<figure class='code'><figcaption><span>bionic/libc/bionic/system_properties.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'> <span class="o">*</span> <span class="o">+-----+</span>   <span class="n">children</span>    <span class="o">+----+</span>   <span class="n">children</span>    <span class="o">+--------+</span>
</span><span class='line'> <span class="o">*</span> <span class="o">|</span>     <span class="o">|--------------&gt;|</span> <span class="n">ro</span> <span class="o">|--------------&gt;|</span> <span class="n">secure</span> <span class="o">|</span>
</span><span class='line'> <span class="o">*</span> <span class="o">+-----+</span>               <span class="o">+----+</span>               <span class="o">+--------+</span>
</span><span class='line'> <span class="o">*</span>                       <span class="o">/</span>    <span class="err">\</span>                <span class="o">/</span>   <span class="o">|</span>
</span><span class='line'> <span class="o">*</span>                 <span class="n">left</span> <span class="o">/</span>      <span class="err">\</span> <span class="n">right</span>   <span class="n">left</span> <span class="o">/</span>    <span class="o">|</span>  <span class="n">prop</span>   <span class="o">+===========+</span>
</span><span class='line'> <span class="o">*</span>                     <span class="n">v</span>        <span class="n">v</span>            <span class="n">v</span>     <span class="o">+--------&gt;|</span> <span class="n">ro</span><span class="p">.</span><span class="n">secure</span> <span class="o">|</span>
</span><span class='line'> <span class="o">*</span>                  <span class="o">+-----+</span>   <span class="o">+-----+</span>     <span class="o">+-----+</span>            <span class="o">+-----------+</span>
</span><span class='line'> <span class="o">*</span>                  <span class="o">|</span> <span class="n">net</span> <span class="o">|</span>   <span class="o">|</span> <span class="n">sys</span> <span class="o">|</span>     <span class="o">|</span> <span class="n">com</span> <span class="o">|</span>            <span class="o">|</span>     <span class="mi">1</span>     <span class="o">|</span>
</span><span class='line'> <span class="o">*</span>                  <span class="o">+-----+</span>   <span class="o">+-----+</span>     <span class="o">+-----+</span>            <span class="o">+===========+</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了， 就到这里吧! 感谢 ～</p>

<p>参考文档: <a href="http://rxwen.blogspot.com/2010/01/android-property-system.html">http://rxwen.blogspot.com/2010/01/android-property-system.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android system properties dynamic]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/12/23/android-system-properties2/"/>
    <updated>2013-12-23T10:17:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/12/23/android-system-properties2</id>
    <content type="html"><![CDATA[<p>静态的程序代码和程序运行时的状态，有很大的不同。理解代码，要理解其运行时的样子。</p>

<!--more-->


<p>这一篇主要说说 android property service 的运行时状态。</p>

<p>先来看看这个图大致理解一下:</p>

<p><img src="http://SteveVallay.github.io/images/blog/android_property.png" alt="android-property" /></p>

<p>可以查看下手机的 /dev/__properties__ 文件(Kitkat 4.4) ：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ls -al /dev/**__proper*
</span><span class='line'>-rw-r--r-- root     root        65536 1970-01-12 05:24 __properties__</span></code></pre></td></tr></table></div></figure>


<p>Init 进程，创建 <strong>/dev/__properties__</strong> 文件，map 到内存，然后从 <strong>/default.prop</strong>等文件中加载 properties, 写入 <strong>/dev/__properties__</strong>. 然后启动 property_service , 就是建立一个 <code>property_service</code> 的 socket ，监听这个 socket ，其他进程通过向这个 socket 发送 proper_set 的消息来完成 properties 的设置。</p>

<p>proper_get 是在每个进程在初始化时(libc中) 建立了 <strong>/dev/__properties__</strong>到内存的 map ，得到了可以直接访问的 address，可以直接遍历 properties 的存储空间完成查找.</p>

<p>下面细细到来：</p>

<p>Init 进程，Android 用户空间的第一个进程，内核启动之后会执行这个 init 程序。进入到 init 的main 函数。 在 init.c 的 main 函数里面，初始化 property 相关的存储空间。</p>

<p><strong>system/core/init/init.c</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'> <span class="n">property_init</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>property_init</code> 是调用 property_service.c 的方法。</p>

<p><strong>/system/core/init/property_service.c</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'> <span class="kt">void</span> <span class="nf">property_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'> <span class="p">{</span>
</span><span class='line'>     <span class="n">init_property_area</span><span class="p">();</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="nf">init_property_area</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">property_area_inited</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">__system_property_area_init</span><span class="p">())</span> <span class="c1">//关键这个</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">init_workspace</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pa_workspace</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fcntl</span><span class="p">(</span><span class="n">pa_workspace</span><span class="p">.</span><span class="n">fd</span><span class="p">,</span> <span class="n">F_SETFD</span><span class="p">,</span> <span class="n">FD_CLOEXEC</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">property_area_inited</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>__system_property_area_init</code> 方法在 <strong>bionic/libc/bionic/system_properties.c</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">__system_property_area_init</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">map_prop_area_rw</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="nf">map_prop_area_rw</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">prop_area</span> <span class="o">*</span><span class="n">pa</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">ret</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* dev is a tmpfs that we can use to carve a shared workspace</span>
</span><span class='line'><span class="cm">     * out of, so let&#39;s do that...</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">property_filename</span><span class="p">,</span> <span class="n">O_RDWR</span> <span class="o">|</span> <span class="n">O_CREAT</span> <span class="o">|</span> <span class="n">O_NOFOLLOW</span> <span class="o">|</span> <span class="n">O_CLOEXEC</span> <span class="o">|</span>
</span><span class='line'>            <span class="n">O_EXCL</span><span class="p">,</span> <span class="mo">0444</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">fd</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">errno</span> <span class="o">==</span> <span class="n">EACCES</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="cm">/* for consistency with the case where the process has already</span>
</span><span class='line'><span class="cm">             * mapped the page in and segfaults when trying to write to it</span>
</span><span class='line'><span class="cm">             */</span>
</span><span class='line'>            <span class="n">abort</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ret</span> <span class="o">=</span> <span class="n">fcntl</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">F_SETFD</span><span class="p">,</span> <span class="n">FD_CLOEXEC</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">ret</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="k">goto</span> <span class="n">out</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">ftruncate</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">PA_SIZE</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="k">goto</span> <span class="n">out</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">pa_size</span> <span class="o">=</span> <span class="n">PA_SIZE</span><span class="p">;</span>
</span><span class='line'>    <span class="n">pa_data_size</span> <span class="o">=</span> <span class="n">pa_size</span> <span class="o">-</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">prop_area</span><span class="p">);</span>
</span><span class='line'>    <span class="n">compat_mode</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">pa</span> <span class="o">=</span> <span class="n">mmap</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">pa_size</span><span class="p">,</span> <span class="n">PROT_READ</span> <span class="o">|</span> <span class="n">PROT_WRITE</span><span class="p">,</span> <span class="n">MAP_SHARED</span><span class="p">,</span> <span class="n">fd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">pa</span> <span class="o">==</span> <span class="n">MAP_FAILED</span><span class="p">)</span>
</span><span class='line'>        <span class="k">goto</span> <span class="n">out</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span><span class="n">pa</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pa_size</span><span class="p">);</span>
</span><span class='line'>    <span class="n">pa</span><span class="o">-&gt;</span><span class="n">magic</span> <span class="o">=</span> <span class="n">PROP_AREA_MAGIC</span><span class="p">;</span>
</span><span class='line'>    <span class="n">pa</span><span class="o">-&gt;</span><span class="n">version</span> <span class="o">=</span> <span class="n">PROP_AREA_VERSION</span><span class="p">;</span>
</span><span class='line'>    <span class="cm">/* reserve root node */</span>
</span><span class='line'>    <span class="n">pa</span><span class="o">-&gt;</span><span class="n">bytes_used</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">prop_bt</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* plug into the lib property services */</span>
</span><span class='line'>    <span class="n">__system_property_area__</span> <span class="o">=</span> <span class="n">pa</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">close</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nl">out:</span>
</span><span class='line'>    <span class="n">close</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>首先创建 <strong>/dev/__properties__</strong> ，并且用 <code>mmap</code> 映射到内存.（通过变量<code>__system_property_area__</code> 的共享，完成 property_service 和 libc 中 properties 相关的交互。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define PROP_FILENAME &quot;/dev/__properties__&quot;</span>
</span><span class='line'><span class="k">static</span> <span class="kt">char</span> <span class="n">property_filename</span><span class="p">[</span><span class="n">PATH_MAX</span><span class="p">]</span> <span class="o">=</span> <span class="n">PROP_FILENAME</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">property_filename</span><span class="p">,</span> <span class="n">O_RDWR</span> <span class="o">|</span> <span class="n">O_CREAT</span> <span class="o">|</span> <span class="n">O_NOFOLLOW</span> <span class="o">|</span> <span class="n">O_CLOEXEC</span> <span class="o">|</span>
</span><span class='line'>            <span class="n">O_EXCL</span><span class="p">,</span> <span class="mo">0444</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>    <span class="n">pa</span> <span class="o">=</span> <span class="n">mmap</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">pa_size</span><span class="p">,</span> <span class="n">PROT_READ</span> <span class="o">|</span> <span class="n">PROT_WRITE</span><span class="p">,</span> <span class="n">MAP_SHARED</span><span class="p">,</span> <span class="n">fd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* plug into the lib property services */</span>
</span><span class='line'>    <span class="n">__system_property_area__</span> <span class="o">=</span> <span class="n">pa</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>回到 init.c , 加载 boot defults properties：</p>

<p>init.c</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'> <span class="n">property_load_boot_defaults</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>property_service.c:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define PROP_PATH_RAMDISK_DEFAULT  &quot;/default.prop&quot;</span>
</span><span class='line'>
</span><span class='line'> <span class="kt">void</span> <span class="nf">property_load_boot_defaults</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'> <span class="p">{</span>
</span><span class='line'>     <span class="n">load_properties_from_file</span><span class="p">(</span><span class="n">PROP_PATH_RAMDISK_DEFAULT</span><span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>load_properties_from_file</code> 这个里面就是读取文件，然后 <code>set_property</code>。</p>

<p>回到 init.c , 启动 property service :</p>

<p>init.c:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'> <span class="n">queue_builtin_action</span><span class="p">(</span><span class="n">property_service_init_action</span><span class="p">,</span> <span class="s">&quot;property_service_init&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="nf">property_service_init_action</span><span class="p">(</span><span class="kt">int</span> <span class="n">nargs</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="cm">/* read any property files on system or data and</span>
</span><span class='line'><span class="cm">     * fire up the property service.  This must happen</span>
</span><span class='line'><span class="cm">     * after the ro.foo properties are set above so</span>
</span><span class='line'><span class="cm">     * that /data/local.prop cannot interfere with them.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">start_property_service</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* update with vendor-specific property runtime</span>
</span><span class='line'><span class="cm">     * overrides</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">vendor_load_properties</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 <code>start_property_service</code> 中，加载 properties (/system/build.prop, /system/default.prop, /data/property/xxx)，创建 <strong>/dev/socket/property_service</strong> 这个 socket, 并且监听这个 socket 来接受 set property 的消息。</p>

<p>property_service.c:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">start_property_service</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">load_properties_from_file</span><span class="p">(</span><span class="n">PROP_PATH_SYSTEM_BUILD</span><span class="p">);</span>
</span><span class='line'>    <span class="n">load_properties_from_file</span><span class="p">(</span><span class="n">PROP_PATH_SYSTEM_DEFAULT</span><span class="p">);</span>
</span><span class='line'>    <span class="n">load_override_properties</span><span class="p">();</span>
</span><span class='line'>    <span class="cm">/* Read persistent properties after all default values have been loaded. */</span>
</span><span class='line'>    <span class="n">load_persistent_properties</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fd</span> <span class="o">=</span> <span class="n">create_socket</span><span class="p">(</span><span class="n">PROP_SERVICE_NAME</span><span class="p">,</span> <span class="n">SOCK_STREAM</span><span class="p">,</span> <span class="mo">0666</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">fd</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="n">fcntl</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">F_SETFD</span><span class="p">,</span> <span class="n">FD_CLOEXEC</span><span class="p">);</span>
</span><span class='line'>    <span class="n">fcntl</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">F_SETFL</span><span class="p">,</span> <span class="n">O_NONBLOCK</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">listen</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="mi">8</span><span class="p">);</span>
</span><span class='line'>    <span class="n">property_set_fd</span> <span class="o">=</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>回到 init.c :</p>

<p>init 进程在 main 函数的最后，进入一个无限循环，等待 <strong>/dev/socket/property_service</strong> 和其他 fd 的事件并处理。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="k">for</span><span class="p">(;;)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">nr</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">timeout</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">execute_one_command</span><span class="p">();</span>
</span><span class='line'>        <span class="n">restart_processes</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">property_set_fd_init</span> <span class="o">&amp;&amp;</span> <span class="n">get_property_set_fd</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">fd</span> <span class="o">=</span> <span class="n">get_property_set_fd</span><span class="p">();</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">events</span> <span class="o">=</span> <span class="n">POLLIN</span><span class="p">;</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">revents</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">fd_count</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>            <span class="n">property_set_fd_init</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">signal_fd_init</span> <span class="o">&amp;&amp;</span> <span class="n">get_signal_fd</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">fd</span> <span class="o">=</span> <span class="n">get_signal_fd</span><span class="p">();</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">events</span> <span class="o">=</span> <span class="n">POLLIN</span><span class="p">;</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">revents</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">fd_count</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>            <span class="n">signal_fd_init</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">keychord_fd_init</span> <span class="o">&amp;&amp;</span> <span class="n">get_keychord_fd</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">fd</span> <span class="o">=</span> <span class="n">get_keychord_fd</span><span class="p">();</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">events</span> <span class="o">=</span> <span class="n">POLLIN</span><span class="p">;</span>
</span><span class='line'>            <span class="n">ufds</span><span class="p">[</span><span class="n">fd_count</span><span class="p">].</span><span class="n">revents</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">fd_count</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>            <span class="n">keychord_fd_init</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">process_needs_restart</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">timeout</span> <span class="o">=</span> <span class="p">(</span><span class="n">process_needs_restart</span> <span class="o">-</span> <span class="n">gettime</span><span class="p">())</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">timeout</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>                <span class="n">timeout</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">action_queue_empty</span><span class="p">()</span> <span class="o">||</span> <span class="n">cur_action</span><span class="p">)</span>
</span><span class='line'>            <span class="n">timeout</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#if BOOTCHART</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">bootchart_count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">timeout</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">timeout</span> <span class="o">&gt;</span> <span class="n">BOOTCHART_POLLING_MS</span><span class="p">)</span>
</span><span class='line'>                <span class="n">timeout</span> <span class="o">=</span> <span class="n">BOOTCHART_POLLING_MS</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">bootchart_step</span><span class="p">()</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="o">--</span><span class="n">bootchart_count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">bootchart_finish</span><span class="p">();</span>
</span><span class='line'>                <span class="n">bootchart_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">nr</span> <span class="o">=</span> <span class="n">poll</span><span class="p">(</span><span class="n">ufds</span><span class="p">,</span> <span class="n">fd_count</span><span class="p">,</span> <span class="n">timeout</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">nr</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">fd_count</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">ufds</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">revents</span> <span class="o">==</span> <span class="n">POLLIN</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">ufds</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">fd</span> <span class="o">==</span> <span class="n">get_property_set_fd</span><span class="p">())</span>
</span><span class='line'>                    <span class="n">handle_property_set_fd</span><span class="p">();</span>                 <span class="c1">//关键这里</span>
</span><span class='line'>                <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">ufds</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">fd</span> <span class="o">==</span> <span class="n">get_keychord_fd</span><span class="p">())</span>
</span><span class='line'>                    <span class="n">handle_keychord</span><span class="p">();</span>
</span><span class='line'>                <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">ufds</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">fd</span> <span class="o">==</span> <span class="n">get_signal_fd</span><span class="p">())</span>
</span><span class='line'>                    <span class="n">handle_signal</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>handler_property_set_fd</code> 里面接收 <code>/dev/socket/property_service</code> 的消息并处理。</p>

<p>property_service.c:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">handle_property_set_fd</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">prop_msg</span> <span class="n">msg</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">s</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">r</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">res</span><span class="p">;</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">ucred</span> <span class="n">cr</span><span class="p">;</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">sockaddr_un</span> <span class="n">addr</span><span class="p">;</span>
</span><span class='line'>    <span class="n">socklen_t</span> <span class="n">addr_size</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">addr</span><span class="p">);</span>
</span><span class='line'>    <span class="n">socklen_t</span> <span class="n">cr_size</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span> <span class="n">source_ctx</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">((</span><span class="n">s</span> <span class="o">=</span> <span class="n">accept</span><span class="p">(</span><span class="n">property_set_fd</span><span class="p">,</span> <span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">addr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">addr_size</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* Check socket options here */</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">getsockopt</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">SOL_SOCKET</span><span class="p">,</span> <span class="n">SO_PEERCRED</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">cr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">cr_size</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">close</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>        <span class="n">ERROR</span><span class="p">(</span><span class="s">&quot;Unable to receive socket options</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">r</span> <span class="o">=</span> <span class="n">TEMP_FAILURE_RETRY</span><span class="p">(</span><span class="n">recv</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">msg</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">msg</span><span class="p">),</span> <span class="mi">0</span><span class="p">));</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">r</span> <span class="o">!=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">prop_msg</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">ERROR</span><span class="p">(</span><span class="s">&quot;sys_prop: mis-match msg size received: %d expected: %d errno: %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="n">r</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">prop_msg</span><span class="p">),</span> <span class="n">errno</span><span class="p">);</span>
</span><span class='line'>        <span class="n">close</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">switch</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">cmd</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">PROP_MSG_SETPROP</span>:                              <span class="c1">//处理 set proper 请求</span>
</span><span class='line'>        <span class="n">msg</span><span class="p">.</span><span class="n">name</span><span class="p">[</span><span class="n">PROP_NAME_MAX</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">msg</span><span class="p">.</span><span class="n">value</span><span class="p">[</span><span class="n">PROP_VALUE_MAX</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">is_legal_property_name</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">name</span><span class="p">)))</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ERROR</span><span class="p">(</span><span class="s">&quot;sys_prop: illegal property name. Got: </span><span class="se">\&quot;</span><span class="s">%s</span><span class="se">\&quot;\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">msg</span><span class="p">.</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>            <span class="n">close</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">getpeercon</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">source_ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">memcmp</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">name</span><span class="p">,</span><span class="s">&quot;ctl.&quot;</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// Keep the old close-socket-early behavior when handling</span>
</span><span class='line'>            <span class="c1">// ctl.* properties.</span>
</span><span class='line'>            <span class="n">close</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">check_control_perms</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">value</span><span class="p">,</span> <span class="n">cr</span><span class="p">.</span><span class="n">uid</span><span class="p">,</span> <span class="n">cr</span><span class="p">.</span><span class="n">gid</span><span class="p">,</span> <span class="n">source_ctx</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">handle_control_message</span><span class="p">((</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span> <span class="n">msg</span><span class="p">.</span><span class="n">name</span> <span class="o">+</span> <span class="mi">4</span><span class="p">,</span> <span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span> <span class="n">msg</span><span class="p">.</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">ERROR</span><span class="p">(</span><span class="s">&quot;sys_prop: Unable to %s service ctl [%s] uid:%d gid:%d pid:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">msg</span><span class="p">.</span><span class="n">name</span> <span class="o">+</span> <span class="mi">4</span><span class="p">,</span> <span class="n">msg</span><span class="p">.</span><span class="n">value</span><span class="p">,</span> <span class="n">cr</span><span class="p">.</span><span class="n">uid</span><span class="p">,</span> <span class="n">cr</span><span class="p">.</span><span class="n">gid</span><span class="p">,</span> <span class="n">cr</span><span class="p">.</span><span class="n">pid</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">check_perms</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="n">cr</span><span class="p">.</span><span class="n">uid</span><span class="p">,</span> <span class="n">cr</span><span class="p">.</span><span class="n">gid</span><span class="p">,</span> <span class="n">source_ctx</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">property_set</span><span class="p">((</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span> <span class="n">msg</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span> <span class="n">msg</span><span class="p">.</span><span class="n">value</span><span class="p">);</span>    <span class="c1">//设置 prop</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">ERROR</span><span class="p">(</span><span class="s">&quot;sys_prop: permission denied uid:%d  name:%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span>
</span><span class='line'>                      <span class="n">cr</span><span class="p">.</span><span class="n">uid</span><span class="p">,</span> <span class="n">msg</span><span class="p">.</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Note: bionic&#39;s property client code assumes that the</span>
</span><span class='line'>            <span class="c1">// property server will not close the socket until *AFTER*</span>
</span><span class='line'>            <span class="c1">// the property is written to memory.</span>
</span><span class='line'>            <span class="n">close</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">freecon</span><span class="p">(</span><span class="n">source_ctx</span><span class="p">);</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nl">default:</span>
</span><span class='line'>        <span class="n">close</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 <code>property_set</code> 之前会 <code>check_perms</code>, 不同的 property_set 需要什么权限呢?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cm">/* White list of permissions for setting property services. */</span>
</span><span class='line'><span class="k">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">prefix</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">uid</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">gid</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="n">property_perms</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;net.rmnet0.&quot;</span><span class="p">,</span>      <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;net.gprs.&quot;</span><span class="p">,</span>        <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;net.ppp&quot;</span><span class="p">,</span>          <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;net.qmi&quot;</span><span class="p">,</span>          <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;net.lte&quot;</span><span class="p">,</span>          <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;net.cdma&quot;</span><span class="p">,</span>         <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;ril.&quot;</span><span class="p">,</span>             <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;gsm.&quot;</span><span class="p">,</span>             <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;persist.radio&quot;</span><span class="p">,</span>    <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;net.dns&quot;</span><span class="p">,</span>          <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;sys.usb.config&quot;</span><span class="p">,</span>   <span class="n">AID_RADIO</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;net.&quot;</span><span class="p">,</span>             <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;dev.&quot;</span><span class="p">,</span>             <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;runtime.&quot;</span><span class="p">,</span>         <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;hw.&quot;</span><span class="p">,</span>              <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;sys.&quot;</span><span class="p">,</span>             <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;sys.powerctl&quot;</span><span class="p">,</span>     <span class="n">AID_SHELL</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;service.&quot;</span><span class="p">,</span>         <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;wlan.&quot;</span><span class="p">,</span>            <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;bluetooth.&quot;</span><span class="p">,</span>       <span class="n">AID_BLUETOOTH</span><span class="p">,</span>   <span class="n">AID_SYSTEM</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;dhcp.&quot;</span><span class="p">,</span>            <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;dhcp.&quot;</span><span class="p">,</span>            <span class="n">AID_DHCP</span><span class="p">,</span>     <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;debug.&quot;</span><span class="p">,</span>           <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;debug.&quot;</span><span class="p">,</span>           <span class="n">AID_SHELL</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;log.&quot;</span><span class="p">,</span>             <span class="n">AID_SHELL</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;service.adb.root&quot;</span><span class="p">,</span> <span class="n">AID_SHELL</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;service.adb.tcp.port&quot;</span><span class="p">,</span> <span class="n">AID_SHELL</span><span class="p">,</span>    <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;persist.sys.&quot;</span><span class="p">,</span>     <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;persist.service.&quot;</span><span class="p">,</span> <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;persist.security.&quot;</span><span class="p">,</span> <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;persist.service.bdroid.&quot;</span><span class="p">,</span> <span class="n">AID_BLUETOOTH</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="s">&quot;selinux.&quot;</span>         <span class="p">,</span> <span class="n">AID_SYSTEM</span><span class="p">,</span>   <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>接着就 <code>property_set</code>:</p>

<p>先查询有的话，就 <code>__system_property_update</code> , 没有就 <code>__system_property_add</code> ,如果是 <code>persist.</code>的话，要 <code>write_persistent_property</code> 写入到 <strong>/data/property/xxx</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">property_set</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">prop_info</span> <span class="o">*</span><span class="n">pi</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">ret</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">size_t</span> <span class="n">namelen</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">size_t</span> <span class="n">valuelen</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">is_legal_property_name</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">namelen</span><span class="p">))</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">valuelen</span> <span class="o">&gt;=</span> <span class="n">PROP_VALUE_MAX</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">pi</span> <span class="o">=</span> <span class="p">(</span><span class="n">prop_info</span><span class="o">*</span><span class="p">)</span> <span class="n">__system_property_find</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">pi</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="cm">/* ro.* properties may NEVER be modified once set */</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">strncmp</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="s">&quot;ro.&quot;</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">__system_property_update</span><span class="p">(</span><span class="n">pi</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">valuelen</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">ret</span> <span class="o">=</span> <span class="n">__system_property_add</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">namelen</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">valuelen</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">ret</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ERROR</span><span class="p">(</span><span class="s">&quot;Failed to set &#39;%s&#39;=&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/* If name starts with &quot;net.&quot; treat as a DNS property. */</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="s">&quot;net.&quot;</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="s">&quot;net.&quot;</span><span class="p">))</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>  <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="s">&quot;net.change&quot;</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>       <span class="cm">/*  </span>
</span><span class='line'><span class="cm">        * The &#39;net.change&#39; property is a special property used track when any</span>
</span><span class='line'><span class="cm">        * &#39;net.*&#39; property name is updated. It is _ONLY_ updated here. Its value</span>
</span><span class='line'><span class="cm">        * contains the last updated &#39;net.*&#39; property.</span>
</span><span class='line'><span class="cm">        */</span>
</span><span class='line'>        <span class="n">property_set</span><span class="p">(</span><span class="s">&quot;net.change&quot;</span><span class="p">,</span> <span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">persistent_properties_loaded</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>            <span class="n">strncmp</span><span class="p">(</span><span class="s">&quot;persist.&quot;</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="s">&quot;persist.&quot;</span><span class="p">))</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="cm">/*  </span>
</span><span class='line'><span class="cm">         * Don&#39;t write properties to disk until after we have read all default properties</span>
</span><span class='line'><span class="cm">         * to prevent them from being overwritten by default values.</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="n">write_persistent_property</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="s">&quot;selinux.reload_policy&quot;</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>               <span class="n">strcmp</span><span class="p">(</span><span class="s">&quot;1&quot;</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">selinux_reload_policy</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">property_changed</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>OK， <code>proper_set</code> 流程先到这里，下面来看看 <code>proper_get</code> . <code>proper_get</code> 直接向下到 libc 的 <code>__system_property_get</code> 的 api.</p>

<p><strong>/bionic/libc/bionic/system_properties.c</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">__system_property_get</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">const</span> <span class="n">prop_info</span> <span class="o">*</span><span class="n">pi</span> <span class="o">=</span> <span class="n">__system_property_find</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">pi</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">__system_property_read</span><span class="p">(</span><span class="n">pi</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里是调用了 <code>__system_property_find</code> 来查找这个值。在往下看：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">const</span> <span class="n">prop_info</span> <span class="o">*</span><span class="nf">__system_property_find</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">__predict_false</span><span class="p">(</span><span class="n">compat_mode</span><span class="p">))</span> <span class="p">{</span>  <span class="c1">//貌似没打开 compat_mode </span>
</span><span class='line'>        <span class="k">return</span> <span class="n">__system_property_find_compat</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">find_property</span><span class="p">(</span><span class="n">root_node</span><span class="p">(),</span> <span class="n">name</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">name</span><span class="p">),</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span> <span class="c1">//看这里</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里调用 <code>find_property</code> 来访问 <code>root_node()</code>, 什么是 <code>root_node()</code>?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="n">prop_bt</span> <span class="o">*</span><span class="nf">root_node</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">to_prop_obj</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="o">*</span><span class="nf">to_prop_obj</span><span class="p">(</span><span class="n">prop_off_t</span> <span class="n">off</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">off</span> <span class="o">&gt;</span> <span class="n">pa_data_size</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">__system_property_area__</span><span class="o">-&gt;</span><span class="n">data</span> <span class="o">+</span> <span class="n">off</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>实际上获取 <code>__system_property_area__-&gt;data</code>的地址开始访问。OK, <code>__system_property_area__</code> 是哪里？ 正是 <strong>/dev/<strong>properties</strong></strong> map 到内存的地址。</p>

<p>init.c 进程调用了 system_properties.c 的 <code>__system_property_area_init</code> &ndash;> <code>map_prop_area_rw</code> 在这里：</p>

<p>创建 <code>property_filename</code>(/dev/_-properties__), <code>mmap</code> 到内存， 将地址赋值给 <code>__system_property_area__</code> 。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="nf">map_prop_area_rw</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">property_filename</span><span class="p">,</span> <span class="n">O_RDWR</span> <span class="o">|</span> <span class="n">O_CREAT</span> <span class="o">|</span> <span class="n">O_NOFOLLOW</span> <span class="o">|</span> <span class="n">O_CLOEXEC</span> <span class="o">|</span>
</span><span class='line'>            <span class="n">O_EXCL</span><span class="p">,</span> <span class="mo">0444</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'> <span class="n">pa</span> <span class="o">=</span> <span class="n">mmap</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">pa_size</span><span class="p">,</span> <span class="n">PROT_READ</span> <span class="o">|</span> <span class="n">PROT_WRITE</span><span class="p">,</span> <span class="n">MAP_SHARED</span><span class="p">,</span> <span class="n">fd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="cm">/* plug into the lib property services */</span>
</span><span class='line'>    <span class="n">__system_property_area__</span> <span class="o">=</span> <span class="n">pa</span><span class="p">;</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是，慢着！ 这些都是在 init 进程里面执行的，其他进程调用 <code>__system_property_find</code> 怎么可以直接访问 <code>__system_property_area__</code> ? 难道 其他进程和 init 共享了这个地址，这是不可能的，这个变量怎会传递到 init 的子进程？就算传递了，它们怎么可能访问相同的地址呢？它们可是不同进程啊，各自使用自己独享的内存空间啊！</p>

<p>所以，呵呵！ 其他进程肯定也对 <code>__system_property_area__</code> 进行初始化了！ 在哪里 ？
<strong>/bionic/libc/bionic/libc_init_common.cpp</strong> 中 调用了 <code>__system_properties_init()</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">__libc_init_common</span><span class="p">(</span><span class="n">KernelArgumentBlock</span><span class="o">&amp;</span> <span class="n">args</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'> <span class="n">__system_properties_init</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>/bionic/libc/bionic/system_properties.c</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">__system_properties_init</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">map_prop_area</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="nf">map_prop_area</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="p">...</span>
</span><span class='line'> <span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">property_filename</span><span class="p">,</span> <span class="n">O_RDONLY</span> <span class="o">|</span> <span class="n">O_NOFOLLOW</span> <span class="o">|</span> <span class="n">O_CLOEXEC</span><span class="p">);</span>
</span><span class='line'> <span class="p">...</span>
</span><span class='line'><span class="n">prop_area</span> <span class="o">*</span><span class="n">pa</span> <span class="o">=</span> <span class="n">mmap</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">pa_size</span><span class="p">,</span> <span class="n">PROT_READ</span><span class="p">,</span> <span class="n">MAP_SHARED</span><span class="p">,</span> <span class="n">fd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'> <span class="n">__system_property_area__</span> <span class="o">=</span> <span class="n">pa</span><span class="p">;</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以 RDONLY 模式打开了 <code>/dev/__properties__</code> 文件，并且 mmap 到内存，将地址赋值给 <code>__system_property_area__</code> ！ 所以，其他进程可以直接访问 <code>__system_property_area__</code> 不过这个肯定和 init 进程里那个是不同的！！</p>

<p>OK！ 结束，下一篇讲讲 property 存储区的数据结构 ！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android System Properties]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/12/13/android-systemproperties/"/>
    <updated>2013-12-13T23:41:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/12/13/android-systemproperties</id>
    <content type="html"><![CDATA[<p>&mdash;直朝那个方向走，或许真的能到达那个地方。o(∩∩)o&hellip;哈哈</p>

<p>Property system 是 Android 系统中一个重要的 Feature，它以一个 service 的形式来管理系统的配置和状态，每个 property 都是一个 key/value 组，key 和 value 都是字符串。</p>

<p>这些配置和状态信息在 Android 的所有进程中都可以读取、设置和修改，所以 Property system 成了 Android 系统中控制全局配置的一种常用手段。你可以预置 system propterties 作为系统的初始设置，也可以运行是设置和改变 system properties 的值。</p>

<p>因此，system properties 经常作为一些特定 Feature 的控制开关，运行时根据 properties 的值来区分打开/关闭某个 Feature.由于在所有进程都可以访问，也可以用来在 Android 的不同进程间进行简单信息协调，Java 和 native 都不受限制。</p>

<p>下面我们就按自上而下的顺序看看 Android 的这个 Properties system 的实现（Kitkat 4.4)。</p>

<!--more-->


<p><img src="http://SteveVallay.github.io/images/blog/property-call-stack.png" alt="properties call stack" /></p>

<h4>Java 层</h4>

<p><strong>frameworks/base/core/java/android/os/SystemProperties.java</strong></p>

<p>java 层的接口在 <em>SysstemProperties.java</em> 这个文件中,经常使用的接口有以下几个：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*Get the value for the given key.*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">get</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">get</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="n">String</span> <span class="n">def</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getInt</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="kt">int</span> <span class="n">def</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">long</span> <span class="nf">getLong</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="kt">long</span> <span class="n">def</span><span class="err">）</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">getBoolean</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">def</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*Set the value for the given key.*/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">set</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="n">String</span> <span class="n">val</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>简单来说就是 <code>get</code> 和 <code>set</code> 方法，都是静态方法，直接使用 SystemProperties.get/set 就可以访问。不过 SystemProperties 是一个 <em>hide</em> 的类，不在 SDK 的标准 API 中，也就意味着，在基于 SDK 的 app 开发中不能直接使用（可以尝试反射 ^_^)。</p>

<h4>Framework 层</h4>

<p>进到这几个方法的里面来看，就会发现，它们都是调用了 native 方法:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">native</span> <span class="n">String</span> <span class="nf">native_get</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">);</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">native</span> <span class="n">String</span> <span class="nf">native_get</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="n">String</span> <span class="n">def</span><span class="o">);</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">native</span> <span class="kt">int</span> <span class="nf">native_get_int</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="kt">int</span> <span class="n">def</span><span class="o">);</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">native</span> <span class="kt">long</span> <span class="nf">native_get_long</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="kt">long</span> <span class="n">def</span><span class="o">);</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">native</span> <span class="kt">boolean</span> <span class="nf">native_get_boolean</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">def</span><span class="o">);</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">native</span> <span class="kt">void</span> <span class="nf">native_set</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="n">String</span> <span class="n">def</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这些 native 方法在哪里定义和实现呢 ？</p>

<p><strong>frameworks/base/core/jni/android_os_SystemProperties.cpp</strong>(android framework 的 native 实现在 <strong>/frameworks/base/core/jni</strong> 下面可以看到)</p>

<p>从代码可以知道，这一层只是调用底层接口，提供 JNI 支持。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="k">static</span> <span class="n">jstring</span> <span class="n">SystemProperties_getSS</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">clazz</span><span class="p">,</span>
</span><span class='line'>                                      <span class="n">jstring</span> <span class="n">keyJ</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">defJ</span><span class="p">);</span>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="n">SystemProperties_set</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">clazz</span><span class="p">,</span>
</span><span class='line'>                                      <span class="n">jstring</span> <span class="n">keyJ</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">valJ</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>get/set</strong> 方法内部调用了两个底层接口：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="n">property_set</span><span class="p">(</span><span class="n">key</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'><span class="n">property_get</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span><span class="k">default</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这两个接口定义在哪里呢？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;cutils/properties.h&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个.h 文件在 <strong>system/core/include/cutils/properties.h</strong></p>

<p>在这个文件中可以看到这两个函数的声明。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">property_get</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">key</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">default_value</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">property_set</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">key</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这两个函数的实现在哪里呢？ 在 <strong>properties.c</strong> 中</p>

<p><strong>system/core/libcutils/properties.c</strong></p>

<p>在这个文件中我们可以看到根据不同的宏定义有几种不同的实现。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#ifdef HAVE_LIBC_SYSTEM_PROPERTIES</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define _REALLY_INCLUDE_SYS__SYSTEM_PROPERTIES_H_</span>
</span><span class='line'><span class="cp">#include &lt;sys/_system_properties.h&gt;</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="cp">#elif defined(HAVE_SYSTEM_PROPERTY_SERVER)</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* SUPER-cheesy place-holder implementation for Win32 */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;cutils/threads.h&gt;</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>在实际的手机运行环境中，property system 使用的是第一种的实现，第二种是模拟器环境的实现，第三种嘛? 嘿嘿 ~</p>

<p>我们重点来看第一种好了，因为第一种是实际的手机运行环境。在这种实现中，同样是调用了两个类似的 <code>api</code>  <strong>__system_property_set</strong> 和 <strong>__system_property_get</strong> （在 <strong>sys/_system_properties.h</strong> 中声明的).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#ifdef HAVE_LIBC_SYSTEM_PROPERTIES</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define _REALLY_INCLUDE_SYS__SYSTEM_PROPERTIES_H_</span>
</span><span class='line'><span class="cp">#include &lt;sys/_system_properties.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">property_set</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">key</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">__system_property_set</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">property_get</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">key</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">default_value</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">len</span> <span class="o">=</span> <span class="n">__system_property_get</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">len</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">default_value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">default_value</span><span class="p">);</span>
</span><span class='line'>        <span class="n">memcpy</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">default_value</span><span class="p">,</span> <span class="n">len</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>先看一下 <strong>sys/_system_properties.h</strong> 中定义的几个基本结构.
<strong>bionic/libc/include/sys/_system_properties.h</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define PROP_SERVICE_NAME &quot;property_service&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define TOC_NAME_LEN(toc)       ((toc) &gt;&gt; 24)</span>
</span><span class='line'><span class="cp">#define TOC_TO_INFO(area, toc)  ((prop_info*) (((char*) area) + ((toc) &amp; 0xFFFFFF)))</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">prop_area</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="k">volatile</span> <span class="n">count</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="k">volatile</span> <span class="n">serial</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">magic</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">version</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">reserved</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">toc</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">prop_info</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">name</span><span class="p">[</span><span class="n">PROP_NAME_MAX</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="k">volatile</span> <span class="n">serial</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">value</span><span class="p">[</span><span class="n">PROP_VALUE_MAX</span><span class="p">];</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">prop_msg</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">cmd</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">name</span><span class="p">[</span><span class="n">PROP_NAME_MAX</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">value</span><span class="p">[</span><span class="n">PROP_VALUE_MAX</span><span class="p">];</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define PROP_MSG_SETPROP 1</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define PROP_PATH_RAMDISK_DEFAULT  &quot;/default.prop&quot;</span>
</span><span class='line'><span class="cp">#define PROP_PATH_SYSTEM_BUILD     &quot;/system/build.prop&quot;</span>
</span><span class='line'><span class="cp">#define PROP_PATH_SYSTEM_DEFAULT   &quot;/system/default.prop&quot;</span>
</span><span class='line'><span class="cp">#define PROP_PATH_LOCAL_OVERRIDE   &quot;/data/local.prop&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这两个 <code>api</code> 又在哪里实现呢？ ^_^
查看 <strong>bionic/libc/bionic/system_properties.c</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">property_service_socket</span><span class="p">[]</span> <span class="o">=</span> <span class="s">&quot;/dev/socket/&quot;</span> <span class="n">PROP_SERVICE_NAME</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">__system_property_get</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">const</span> <span class="n">prop_info</span> <span class="o">*</span><span class="n">pi</span> <span class="o">=</span> <span class="n">__system_property_find</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">pi</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">__system_property_read</span><span class="p">(</span><span class="n">pi</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">__system_property_set</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">key</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">err</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">tries</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">update_seen</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">prop_msg</span> <span class="n">msg</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">key</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">value</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">strlen</span><span class="p">(</span><span class="n">key</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="n">PROP_NAME_MAX</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">strlen</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="n">PROP_VALUE_MAX</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span><span class="o">&amp;</span><span class="n">msg</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">msg</span><span class="p">);</span>
</span><span class='line'>    <span class="n">msg</span><span class="p">.</span><span class="n">cmd</span> <span class="o">=</span> <span class="n">PROP_MSG_SETPROP</span><span class="p">;</span>
</span><span class='line'>    <span class="n">strlcpy</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">msg</span><span class="p">.</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="n">strlcpy</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">value</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">msg</span><span class="p">.</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">err</span> <span class="o">=</span> <span class="n">send_prop_msg</span><span class="p">(</span><span class="o">&amp;</span><span class="n">msg</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">err</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">err</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>的确在这里找到了 <strong>__system_property_get</strong> 和 <strong>__system_property_set</strong> ,这两个函数的实现有包含了 <strong>__system_property_find</strong> <strong>__system_property_read</strong> 和 <strong>send_prop_msg</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">const</span> <span class="n">prop_info</span> <span class="o">*</span><span class="nf">__system_property_find</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">prop_area</span> <span class="o">*</span><span class="n">pa</span> <span class="o">=</span> <span class="n">__system_property_area__</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">count</span> <span class="o">=</span> <span class="n">pa</span><span class="o">-&gt;</span><span class="n">count</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="o">*</span><span class="n">toc</span> <span class="o">=</span> <span class="n">pa</span><span class="o">-&gt;</span><span class="n">toc</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="n">prop_info</span> <span class="o">*</span><span class="n">pi</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">count</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">unsigned</span> <span class="n">entry</span> <span class="o">=</span> <span class="o">*</span><span class="n">toc</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">TOC_NAME_LEN</span><span class="p">(</span><span class="n">entry</span><span class="p">)</span> <span class="o">!=</span> <span class="n">len</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">pi</span> <span class="o">=</span> <span class="n">TOC_TO_INFO</span><span class="p">(</span><span class="n">pa</span><span class="p">,</span> <span class="n">entry</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">memcmp</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">pi</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span> <span class="n">len</span><span class="p">))</span> <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">pi</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">__system_property_read</span><span class="p">(</span><span class="k">const</span> <span class="n">prop_info</span> <span class="o">*</span><span class="n">pi</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="n">serial</span><span class="p">,</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span><span class="p">(;;)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">serial</span> <span class="o">=</span> <span class="n">pi</span><span class="o">-&gt;</span><span class="n">serial</span><span class="p">;</span>
</span><span class='line'>        <span class="k">while</span><span class="p">(</span><span class="n">SERIAL_DIRTY</span><span class="p">(</span><span class="n">serial</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">__futex_wait</span><span class="p">((</span><span class="k">volatile</span> <span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">pi</span><span class="o">-&gt;</span><span class="n">serial</span><span class="p">,</span> <span class="n">serial</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>            <span class="n">serial</span> <span class="o">=</span> <span class="n">pi</span><span class="o">-&gt;</span><span class="n">serial</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">len</span> <span class="o">=</span> <span class="n">SERIAL_VALUE_LEN</span><span class="p">(</span><span class="n">serial</span><span class="p">);</span>
</span><span class='line'>        <span class="n">memcpy</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">pi</span><span class="o">-&gt;</span><span class="n">value</span><span class="p">,</span> <span class="n">len</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">serial</span> <span class="o">==</span> <span class="n">pi</span><span class="o">-&gt;</span><span class="n">serial</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">name</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">strcpy</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">pi</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="nf">send_prop_msg</span><span class="p">(</span><span class="n">prop_msg</span> <span class="o">*</span><span class="n">msg</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">pollfd</span> <span class="n">pollfds</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">sockaddr_un</span> <span class="n">addr</span><span class="p">;</span>
</span><span class='line'>    <span class="n">socklen_t</span> <span class="n">alen</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">size_t</span> <span class="n">namelen</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">s</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">r</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="p">(</span><span class="n">AF_LOCAL</span><span class="p">,</span> <span class="n">SOCK_STREAM</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">s</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span><span class="o">&amp;</span><span class="n">addr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">addr</span><span class="p">));</span>
</span><span class='line'>    <span class="n">namelen</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">property_service_socket</span><span class="p">);</span>
</span><span class='line'>    <span class="n">strlcpy</span><span class="p">(</span><span class="n">addr</span><span class="p">.</span><span class="n">sun_path</span><span class="p">,</span> <span class="n">property_service_socket</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">addr</span><span class="p">.</span><span class="n">sun_path</span><span class="p">);</span>
</span><span class='line'>    <span class="n">addr</span><span class="p">.</span><span class="n">sun_family</span> <span class="o">=</span> <span class="n">AF_LOCAL</span><span class="p">;</span>
</span><span class='line'>    <span class="n">alen</span> <span class="o">=</span> <span class="n">namelen</span> <span class="o">+</span> <span class="n">offsetof</span><span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr_un</span><span class="p">,</span> <span class="n">sun_path</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">TEMP_FAILURE_RETRY</span><span class="p">(</span><span class="n">connect</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">addr</span><span class="p">,</span> <span class="n">alen</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">close</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">r</span> <span class="o">=</span> <span class="n">TEMP_FAILURE_RETRY</span><span class="p">(</span><span class="n">send</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">msg</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">prop_msg</span><span class="p">),</span> <span class="mi">0</span><span class="p">));</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">r</span> <span class="o">==</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">prop_msg</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// We successfully wrote to the property server but now we</span>
</span><span class='line'>        <span class="c1">// wait for the property server to finish its work.  It</span>
</span><span class='line'>        <span class="c1">// acknowledges its completion by closing the socket so we</span>
</span><span class='line'>        <span class="c1">// poll here (on nothing), waiting for the socket to close.</span>
</span><span class='line'>        <span class="c1">// If you &#39;adb shell setprop foo bar&#39; you&#39;ll see the POLLHUP</span>
</span><span class='line'>        <span class="c1">// once the socket closes.  Out of paranoia we cap our poll</span>
</span><span class='line'>        <span class="c1">// at 250 ms.</span>
</span><span class='line'>        <span class="n">pollfds</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">fd</span> <span class="o">=</span> <span class="n">s</span><span class="p">;</span>
</span><span class='line'>        <span class="n">pollfds</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">events</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">r</span> <span class="o">=</span> <span class="n">TEMP_FAILURE_RETRY</span><span class="p">(</span><span class="n">poll</span><span class="p">(</span><span class="n">pollfds</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">250</span> <span class="cm">/* ms */</span><span class="p">));</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">r</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">pollfds</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">revents</span> <span class="o">&amp;</span> <span class="n">POLLHUP</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// Ignore the timeout and treat it like a success anyway.</span>
</span><span class='line'>            <span class="c1">// The init process is single-threaded and its property</span>
</span><span class='line'>            <span class="c1">// service is sometimes slow to respond (perhaps it&#39;s off</span>
</span><span class='line'>            <span class="c1">// starting a child process or something) and thus this</span>
</span><span class='line'>            <span class="c1">// times out and the caller thinks it failed, even though</span>
</span><span class='line'>            <span class="c1">// it&#39;s still getting around to it.  So we fake it here,</span>
</span><span class='line'>            <span class="c1">// mostly for ctl.* properties, but we do try and wait 250</span>
</span><span class='line'>            <span class="c1">// ms so callers who do read-after-write can reliably see</span>
</span><span class='line'>            <span class="c1">// what they&#39;ve written.  Most of the time.</span>
</span><span class='line'>            <span class="c1">// TODO: fix the system properties design.</span>
</span><span class='line'>            <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">close</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>看到这里，我们大概知道 get 是从一个 prop_info 的结构提中读取，而 set 的则是向 <strong>property_service_socket(&ldquo;/dev/socket/property_service&rdquo;)</strong> 发送数据。但不免又有很多疑问，property 存储在哪，数据结构是怎样的？proper_set 发送socket 数据是谁来接收和处理的？ property system 是如何启动的？</p>

<p>好吧，我们先来总结一下 Android system properties 相关的目录和文件吧。</p>

<p>Java 层：</p>

<ul>
<li>frameworks/base/core/java/android/os/SystemProperties.java</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Gives access to the system properties store.  The system properties</span>
</span><span class='line'><span class="cm"> * store contains a list of string key-value pairs.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * {@hide}</span>
</span><span class='line'><span class="cm"> */</span>
</span></code></pre></td></tr></table></div></figure>


<p>native 层：</p>

<p>Android framework 的 native 实现，或者成为 runtime 都是在 <strong>frameworks/base/core/jni</strong> 目录下。</p>

<p>和 properties 相关的文件：
&ndash; frameworks/base/core/jni/android_os_SystemProperties.cpp</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;cutils/properties.h&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>cutils:</p>

<p><strong>system</strong> 目录，这个目录有什么用呢 ?</p>

<blockquote><p>System &ndash; source code files for the core Android system. That is the minimal Linux system that is started before the Dalvik VM and any java based services are enabled. This includes the source code for the init process and the default init.rc script that provide the dynamic configuration of the platform.</p></blockquote>

<ul>
<li>system/core/libcutils/properties.c  //包含了 _system_properties.h</li>
<li>system/core/include/cutils/properties.h //properties.c 的对外接口 被 jni 包含.</li>
<li>system/core/init/property_service.h  //property_service 的对外接口</li>
<li>system/core/init/property_service.c  //</li>
<li>system/core/init/init.c</li>
</ul>


<p>libc:</p>

<p><strong>Bionic</strong> 这个目录又是干什么的呢？</p>

<blockquote><p>Bionic &ndash; the C-runtime for Android. Note that Android is not using glibc like most Linux distributions. Instead the c-library is called bionic and is based mostly on BSD-derived sources. In this folder you will find the source for the c-library, math and other core runtime libraries.</p></blockquote>

<ul>
<li>bionic/libc/include/sys/_system_properties.h //包含了下面的 system_properties.h</li>
<li>bionic/libc/include/sys/system_properties.h //下面的system_properties.c 对外接口声明</li>
<li>/libc/bionic/system_properties.c</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[deploy app to digit ocean]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/11/13/deploy-app-to-digit-ocean/"/>
    <updated>2013-11-13T16:06:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/11/13/deploy-app-to-digit-ocean</id>
    <content type="html"><![CDATA[<p>一直想搞个 VPS 来外网测试自己的 <a href="http://192.241.192.134/">Rails 小程序</a>，在 <a href="http://v2ex.com/">V2EX</a> 上 浏览了一圈，发现大家使用的 VPS 比较集中在 <a href="https://www.linode.com/">Linode</a> , <a href="https://www.digitalocean.com/">DigitalOcean</a> 上，遂决定在这两个里面选择一个。</p>

<p>鉴于 <a href="https://www.digitalocean.com/">Digital Ocean</a> 比较便宜， 5$ 一个月，而且新用户可以使用优惠码冲 10$，相当于免费使用两个月了 ;&ndash;), 所以决定试用 <a href="https://www.digitalocean.com/">Digital Ocean</a>。</p>

<!--more -->


<h3>选择主机</h3>

<p>登录 <a href="https://www.digitalocean.com/">DigitalOcean</a> 之后，先要 <strong>CREATE</strong> 你的 VPS 主机的类型，选择节点，以及系统的 <em>Image</em>.</p>

<p>我选择的是 5$ 的那个套餐， <strong>512M/1CPU/20G/1TB</strong>, 节点选择 <strong>Sanfrancisco</strong> , 系统的 <em>Image</em> 选择的是 <strong>Ubuntu 12.04</strong>, 然后系统上其他的东西都是自己装的。</p>

<p>不过今天发现，原来在 <strong>Select Image</strong> 的时候还可以选择预装一些 <em>Application</em></p>

<p><img src="http://SteveVallay.github.io/images/blog/digitocean.png" alt="digital ocean pre-install application" /></p>

<p>预装的 <strong>Ruby on Rails</strong> 使用的是 <a href="http://wiki.nginx.org/Main">Ngnix</a> + <a href="http://unicorn.bogomips.org/">Unicorn</a> ,如果想快速部署的话可以考虑下。</p>

<h3>新建用户</h3>

<p>当你创建完成之后，<a href="https://www.digitalocean.com/">DigitalOcean</a> 会 Email 给你 VPS 的 IP, Username 和 Password 。但是 Username 是 root, 用这个超级用户来进行日常操作是不太合适的，所以我们需要新建自己的用户。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>useradd -m -d /home/your_user_name -s /bin/bash your_user_name</span></code></pre></td></tr></table></div></figure>


<p>-d 指定 HOME 目录 home/your_user_name</p>

<p>-m 创建 HOME 目录，如果没有的话</p>

<p>-s 指定 shell 类型</p>

<p>为新用户创建密码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>passwd your_user_name
</span><span class='line'>##input your password twice</span></code></pre></td></tr></table></div></figure>


<p>创建之后，需要将这个用户加到 <strong>sudoer</strong> 里面去</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo adduser your_user_name sudo</span></code></pre></td></tr></table></div></figure>


<p>然后切换到 <strong>your_user_name</strong> 登录。</p>

<h3>安装 Ruby on Rails</h3>

<p>安装 Ruby on Rails 常用的有两种方式：  <a href="https://github.com/sstephenson/rbenv">rbenv</a>  和 <a href="https://rvm.io/">rvm</a> 。似乎 <a href="https://github.com/sstephenson/rbenv">rbenv</a>  会更干净一点，但是我觉得 <a href="https://rvm.io/">rvm</a> 更简单一点。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 安装 curl 和 git 
</span><span class='line'>sudo apt-get install curl git
</span><span class='line'>
</span><span class='line'># 使用 rvm 安装 ruby
</span><span class='line'>
</span><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby
</span><span class='line'>
</span><span class='line'>rvm install 2.0.0
</span></code></pre></td></tr></table></div></figure>


<p>然后 clone 下你的 project , 安装 gems ( Rails 在里面)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#git clone xxxx  
</span><span class='line'>#cd your project
</span><span class='line'>
</span><span class='line'>gem install bundler 
</span><span class='line'>
</span><span class='line'>bundle install 
</span></code></pre></td></tr></table></div></figure>


<p>这个时候，使用 <code>rails s</code> 启动自己的 rails application 应该没问题了，当然别忘了 <code>rake db:migrate</code></p>

<h3><a href="http://www.apache.org/">Apache2</a> + <a href="https://www.phusionpassenger.com/">Passenger</a></h3>

<p>虽然调试的时候可以使用  <a href="http://www.ruby-doc.org/stdlib-2.0/libdoc/webrick/rdoc/WEBrick.html">WEBrick</a> 这个 模块来提供 HTTP 服务，但是，一般发布的时候，我们都会选择性能更好更稳定的 <a href="http://www.apache.org/">Apache</a> 或者 <a href="http://wiki.nginx.org/Main">Nginx</a> , 貌似后者更猛一点。不过我还是选择了 <a href="http://www.apache.org/">Apache</a>。</p>

<p><a href="https://www.phusionpassenger.com/">Passenger</a> 似乎可以单独作为一个服务器，也可以辅助 <a href="http://www.apache.org/">Apache</a>  或者
<a href="http://wiki.nginx.org/Main">Nginx</a>。使用 <a href="http://www.apache.org/">Apache2</a> + <a href="https://www.phusionpassenger.com/">Passenger</a> 可以让你发布 app 简单的一毛啊。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#install apache2
</span><span class='line'>sudo apt-get install apache2 apache2-mpm-prefork apache2-prefork-dev
</span><span class='line'>
</span><span class='line'>#install mysql, do not need this if you do not use mysql
</span><span class='line'>sudo apt-get install mysql-server mysql-client
</span><span class='line'>sudo apt-get install libmysql-ruby libmysqlclient15-dev
</span><span class='line'>
</span><span class='line'>#install passenger
</span><span class='line'>apt-get install libcurl4-openssl-dev
</span><span class='line'>gem install passenger
</span><span class='line'>
</span><span class='line'>#make swap partision , default no swap in digital ocean.
</span><span class='line'>dd if=/dev/zero of=/swap bs=1M count=1024
</span><span class='line'>mkswap /swap
</span><span class='line'>swapon /swap
</span><span class='line'>#execute this script to install apache2 module of passenger
</span><span class='line'>passenger-install-apache2-module
</span></code></pre></td></tr></table></div></figure>


<p>执行 <code>passenger-install-apache2-module</code> 的时候，会打印出如下的配置信息(会因环境有所差异)：</p>

<blockquote><p>LoadModule passenger_module /home/goodluck/.rvm/gems/ruby-2.0.0-p247/gems/passenger-4.0.23/buildout/apache2/mod_passenger.so
PassengerRoot /home/goodluck/.rvm/gems/ruby-2.0.0-p247/gems/passenger-4.0.23
PassengerDefaultRuby /home/goodluck/.rvm/wrappers/ruby-2.0.0-p247/ruby</p></blockquote>

<p>然后把这段贴到 <code>/etc/apache2/httpd.conf</code> 文件中去，然后添加 apache2 的配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;VirtualHost</span> <span class="err">*:80</span><span class="nt">&gt;</span>
</span><span class='line'>      ServerName localhost
</span><span class='line'>      # !!! Be sure to point DocumentRoot to &#39;public&#39;!
</span><span class='line'>      DocumentRoot /home/goodluck/work/rshare/readingbooks/public/
</span><span class='line'>      RailsEnv development
</span><span class='line'>      <span class="nt">&lt;Directory</span> <span class="err">/home/goodluck/work/rshare/readingbooks/public</span><span class="nt">/ &gt;</span>
</span><span class='line'>         # This relaxes Apache security settings.
</span><span class='line'>         AllowOverride all
</span><span class='line'>         # MultiViews must be turned off.
</span><span class='line'>         Options -MultiViews
</span><span class='line'>      <span class="nt">&lt;/Directory&gt;</span>
</span><span class='line'> <span class="nt">&lt;/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>将两个 <code>/home/goodluck/work/rshare/readingbooks/public/</code> 改成自己的，如果是 development 模式需要添加 <code>RailsEnv development</code> ，这行后面不要添加注释。</p>

<p>Done !</p>

<p>Thanks for your reading and welcome your comments. Drop email to <em>zhibinwang.q@gmail.com</em> to contact me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android sendOrderedBroadcast]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/11/07/sendorderedbroadcast/"/>
    <updated>2013-11-07T18:17:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/11/07/sendorderedbroadcast</id>
    <content type="html"><![CDATA[<p>今天遇到一个 monkey 测试中发现的 sendOrderedBroadcast fail 的问题。记录一下。</p>

<!--more-->


<p></p>

<p>错误 log 如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Shutting down VM
</span><span class='line'>07-04 06:11:24.319 W/dalvikvm(23361): threadid=1: thread exiting with uncaught exception (group=0x415a8898)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937): Failure sending broadcast Intent { act=android.intent.action.QUERY_PACKAGE_RESTART dat=package:com.cootek.smartinputv5.language.cangjie flg=0x10 (has extras) }
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937): android.os.DeadObjectException
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at android.os.BinderProxy.transact(Native Method)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at android.content.IIntentReceiver$Stub$Proxy.performReceive(IIntentReceiver.java:124)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at com.android.server.am.BroadcastQueue.performReceiveLocked(BroadcastQueue.java:376)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at com.android.server.am.BroadcastQueue.deliverToRegisteredReceiverLocked(BroadcastQueue.java:449)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at com.android.server.am.BroadcastQueue.processNextBroadcast(BroadcastQueue.java:656)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at com.android.server.am.ActivityManagerService.finishReceiver(ActivityManagerService.java:12451)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at android.content.BroadcastReceiver$PendingResult.sendFinished(BroadcastReceiver.java:419)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at android.content.BroadcastReceiver$PendingResult.finish(BroadcastReceiver.java:395)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at android.app.LoadedApk$ReceiverDispatcher$Args.run(LoadedApk.java:780)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at android.os.Handler.handleCallback(Handler.java:730)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at android.os.Handler.dispatchMessage(Handler.java:92)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at android.os.Looper.loop(Looper.java:137)
</span><span class='line'>07-04 06:11:24.319 W/BroadcastQueue(  937):   at com.android.server.ServerThread.run(SystemServer.java:1066)
</span><span class='line'>
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361): FATAL EXCEPTION: main
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361): java.lang.RuntimeException: Error receiving broadcast Intent { act=android.intent.action.QUERY_PACKAGE_RESTART dat=package:com.cootek.smartinputv5.language.cangjie flg=0x10 (has extras) } in com.android.settings.applications.InstalledAppDetails$2@42070e38
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at android.app.LoadedApk$ReceiverDispatcher$Args.run(LoadedApk.java:773)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at android.os.Handler.handleCallback(Handler.java:730)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at android.os.Handler.dispatchMessage(Handler.java:92)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at android.os.Looper.loop(Looper.java:137)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at android.app.ActivityThread.main(ActivityThread.java:5136)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at java.lang.reflect.Method.invokeNative(Native Method)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at java.lang.reflect.Method.invoke(Method.java:525)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:737)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at dalvik.system.NativeStart.main(Native Method)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361): Caused by: java.lang.NullPointerException
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at com.android.settings.applications.InstalledAppDetails$2.onReceive(InstalledAppDetails.java:1225)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   at android.app.LoadedApk$ReceiverDispatcher$Args.run(LoadedApk.java:763)
</span><span class='line'>07-04 06:11:24.329 E/AndroidRuntime(23361):   ... 9 more
</span><span class='line'>07-04 06:11:24.329 I/ActivityManager(  937): Notify an ApplicationCrash</span></code></pre></td></tr></table></div></figure>


<p>查看下代码:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">1218</span>     <span class="kd">private</span> <span class="kd">final</span> <span class="n">BroadcastReceiver</span> <span class="n">mCheckKillProcessesReceiver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BroadcastReceiver</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'><span class="mi">1219</span>         <span class="nd">@Override</span>
</span><span class='line'><span class="mi">1220</span>         <span class="kd">public</span> <span class="kt">void</span> <span class="n">onReceive</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="mi">1221</span>             <span class="n">updateForceStopButton</span><span class="o">(</span><span class="n">getResultCode</span><span class="o">()</span> <span class="o">!=</span> <span class="n">Activity</span><span class="o">.</span><span class="na">RESULT_CANCELED</span><span class="o">);</span>
</span><span class='line'><span class="mi">1222</span>
</span><span class='line'><span class="mi">1223</span>             <span class="n">Intent</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="s">&quot;qualcomm.android.LEDFlashlight.processKilled&quot;</span><span class="o">);</span>
</span><span class='line'><span class="mi">1224</span>             <span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">EXTRA_PACKAGES</span><span class="o">,</span> <span class="n">mAppEntry</span><span class="o">.</span><span class="na">info</span><span class="o">.</span><span class="na">packageName</span><span class="o">);</span>
</span><span class='line'><span class="mi">1225</span>             <span class="n">getActivity</span><span class="o">().</span><span class="na">sendStickyBroadcast</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'><span class="mi">1226</span>         <span class="o">}</span>
</span><span class='line'><span class="mi">1227</span>     <span class="o">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看出 <code>NullPointerException</code> 的直接原因是 <code>getActivity</code> 失败了～</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">1225</span>             <span class="n">getActivity</span><span class="o">().</span><span class="na">sendStickyBroadcast</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>可是这个怎么会失败呢？</p>

<p><a href="http://stackoverflow.com/">Stack Overflow</a> 上搜索到的 <a href="http://stackoverflow.com/questions/12934990/deadobjectexception-when-trying-to-use-context-sendorderedbroadcast">解释</a> :</p>

<blockquote><p>I can see this happening if the component that called sendOrderedBroadcast() was destroyed prior to the broadcast winding its way back to the supplied instance of the BroadcastReceiver anonymous subclass.</p></blockquote>

<p>这个解释说是因为 <code>sendOrderedBroadcast()</code> 的组件在 <code>broadcast</code> 还没有回调到这个匿名内部类的实例 mCheckKillProcessesReceiver  的时候就已经 destroy 了。</p>

<p>虽然我没有亲自验证，但是有两个问题：</p>

<ol>
<li>如果 component 已经 destroy 了，按照 Android 的机制，那么 intent 过来的时候应该重新构造这个 component 才对，那么 destroy 又有什么关系呢？</li>
<li>这个匿名内部类的实例化是怎么完成的？ 实例化的时候是否正确的创建了 Context 信息？</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Disqus 评论]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/11/06/using-disqus-api/"/>
    <updated>2013-11-06T16:59:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/11/06/using-disqus-api</id>
    <content type="html"><![CDATA[<p>想给自己的 <a href="https://github.com/SteveVallay/rshare">Rails app</a> 添加评论功能，之前在使用 <a href="http://octopress.org/">Octopress</a> 的时候，接触到了 <a href="http://disqus.com/">Disqus</a> 这个专门做 Comments 的平台，许多的 blog 都使用 <a href="http://disqus.com/">Disqus</a> 作为它们的评论插件。所以决定使用 <a href="http://disqus.com/">Disqus</a> 的 api.</p>

<!-- more -->


<h3>帐号</h3>

<p>首先，需要现有 <a href="https://github.com/SteveVallay/rshare">Disqus</a> 的帐号， 没有的话就 <a href="https://disqus.com/profile/signup/">注册</a> 一个吧。</p>

<h3>Add Disqus to your site</h3>

<p>登录之后，找到 <a href="http://disqus.com/admin/create/">Add Disqus to your site</a>, 创建一个新的 site profile ,
简单的填写完 site name, admin url, category ，点击  Finish registration， 然后来到
<strong>Choose your platform</strong> 界面选择你使用的平台，如果没有对应的，就选择 <strong>Universal Code</strong>(通用) 。</p>

<p>然后，Disqus 就为你自动生成了一段代码，将这段代码贴到你的 site 上去，你就拥有了自己的评论系统。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;div id="disqus_thread"&gt;&lt;/div&gt;
</span><span class='line'>&lt;script type="text/javascript"&gt;
</span><span class='line'>    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
</span><span class='line'>    var disqus_shortname = 'yoursitename'; // required: replace example with your forum shortname
</span><span class='line'>
</span><span class='line'>    /* * * DON'T EDIT BELOW THIS LINE * * */
</span><span class='line'>    (function() {
</span><span class='line'>        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
</span><span class='line'>        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
</span><span class='line'>        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
</span><span class='line'>    })();
</span><span class='line'>&lt;/script&gt;
</span><span class='line'>&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
</span><span class='line'>&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</span></code></pre></td></tr></table></div></figure>


<p>这段代码主要使用 <code>js</code> 来加载评论。如果你觉得还没有满足你的需求，你也可以考虑下<a href="http://help.disqus.com/customer/portal/articles/565624-tightening-your-disqus-integration">定制化</a></p>

<p>如下:</p>

<p><img src="http://SteveVallay.github.io/images/blog/disqus.png" alt="my app" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[learn rails i18n]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/11/05/learn-rails-i18n/"/>
    <updated>2013-11-05T17:56:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/11/05/learn-rails-i18n</id>
    <content type="html"><![CDATA[<p>今天，学习了一下 Rails 的国际化，为 app 添加了中文翻译，非常简单。</p>

<!--more -->


<p>参考这个 <a href="http://railscasts.com/episodes/138-i18n?autoplay=true">Railscasts 视频</a> 和 <a href="http://guides.rubyonrails.org/i18n.html">Rails Guide</a>.下面结合添加 中文翻译，简单介绍一下。</p>

<p>每个平台都包含自己国际化的方式，比如 Android 平台，在 res 文件夹下， 会包含各种语言的字符串，放在特定名字的文件夹下，如 string, string-zh, string-en, string-fr 等等，应用开发者只要在 string-zh 下添加所需要的中文翻译，系统在中文环境下会自动加载 string-zh 下的字符串。</p>

<p>Rails 也有类似的机制，在 config/locales 下，默认只有 en.yml， 可以在这里添加多国语言的字符串来让 Rails app 支持多国语言版本。</p>

<h3>添加中文翻译文件</h3>

<p>首先在 config/locales 下 copy en.yml 成  zh.yml ，然后在 zh.yml 中添加字符 id 和 对应的字符内容。</p>

<p>如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>zh:
</span><span class='line'>  user:
</span><span class='line'>    name: 用户名
</span><span class='line'>    email: 邮箱
</span><span class='line'>    password: 密码</span></code></pre></td></tr></table></div></figure>


<p>如果内容比较多，你可以分成不同的 namespace , 上面例子中，user 就是 zh 下面的一个 namespace， 你可以创建更多的层次， 引用的时候以 <code>.</code> 来引用就好了， 比如 user.name。</p>

<h3>在你的 code 中引用字符串 id</h3>

<p>支持多国的话，就要把 code 中 引用的字符串，改为字符 id 来引用。I18n 的 api  translate (t) 可以根据字符 id 来找到对应的字符串。</p>

<p>将直接引用字符串，改为使用 api 函数 t 来查找对应语言的字符串:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;&lt;%=</span> <span class="no">Create</span> <span class="no">New</span> <span class="no">User</span> <span class="sx">%&gt;&lt;/h2&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>改为:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;&lt;%=</span> <span class="n">t</span><span class="p">(</span><span class="s1">&#39;user.new_user_reg&#39;</span><span class="p">)</span> <span class="sx">%&gt;&lt;/h2&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>程序中配置你要使用的语言</h3>

<p>application_controller.rb 中添加 set_language 方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before_action</span> <span class="ss">:set_language</span>
</span><span class='line'>     <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>     <span class="k">def</span> <span class="nf">set_language</span>
</span><span class='line'>      <span class="no">I18n</span><span class="o">.</span><span class="n">locale</span> <span class="o">=</span> <span class="ss">:zh</span>
</span><span class='line'>     <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails add alert in bootstrap]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/10/28/rails-add-alert-in-bootstrap/"/>
    <updated>2013-10-28T22:12:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/10/28/rails-add-alert-in-bootstrap</id>
    <content type="html"><![CDATA[<p>今天,又给自己的小程序的 Notification 进行了下美化。让 Rails 应用的 Notification 使用 Bootstrap 样式的 <a href="http://getbootstrap.com/javascript/#alerts">Alert</a> (如下图)：</p>

<p><img src="http://SteveVallay.github.io/images/blog/alert.png" alt="alert" /></p>

<!-- more -->


<h3>Bootstrap 的 <code>alert</code></h3>

<p>首先,在 <code>Bootstrap</code> 中 ,只要为你要显示的内容指定 class 为 alert 即可显示成上面的样式（当然不包含 <code>x</code> 号)。如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;alert alert-success&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;alert alert-info&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;alert alert-warning&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;alert alert-danger&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>alert-success</code> <code>alert-info</code> <code>alert-warning</code> <code>alert-danger</code> 会显示为绿色、蓝色、橙色和红色。效果如下：</p>

<p><img src="http://SteveVallay.github.io/images/blog/alerts.png" alt="alerts" /></p>

<h3>Rails 中 flash 的 key 映射到 Bootstrap alert 的 class</h3>

<p>在 Rails 中，通常是使用 flash 来设置给用户的消息。flash 是一个 map ， 它的 key 常有 :error, :alert ,:notice, :success 用来区分给用户的消息类型。在 view 中遍历 flash 这个 map 即可取到相应的消息。</p>

<p>如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err"> </span><span class="o">&lt;</span><span class="sx">% flash.each </span><span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">msg</span><span class="o">|</span> <span class="o">-</span><span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">      &lt;%= content_tag :div, msg, class: key %&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">% end </span><span class="o">-%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>通常将 flash 这个 map 中的 key 设置为 html 元素的 class , 在对这个 class 进行 CSS 的定制化，即可显示处不同样式的 alert。但是 flash 中的 key 值似乎和 Bootstrap  alert 的 class 并不是一一对应，拿来就能用的。我们可以加一个方法来实现这种转化。在 application_helper 里面添加如下代码即可（在 Github gits 中看到的，一时要找不到了 ;&ndash;)：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">bootstrap_class_for</span> <span class="n">flash_type</span>
</span><span class='line'>     <span class="k">case</span> <span class="n">flash_type</span>
</span><span class='line'>       <span class="k">when</span> <span class="ss">:success</span>
</span><span class='line'>         <span class="s2">&quot;alert-success&quot;</span>
</span><span class='line'>       <span class="k">when</span> <span class="ss">:error</span>
</span><span class='line'>         <span class="s2">&quot;alert-error&quot;</span>
</span><span class='line'>       <span class="k">when</span> <span class="ss">:alert</span>
</span><span class='line'>         <span class="s2">&quot;alert-block&quot;</span>
</span><span class='line'>       <span class="k">when</span> <span class="ss">:notice</span>
</span><span class='line'>         <span class="s2">&quot;alert-info&quot;</span>
</span><span class='line'>       <span class="k">else</span>
</span><span class='line'>         <span class="n">flash_type</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>     <span class="k">end</span>
</span><span class='line'>   <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>view 中的代码改成如下即可 :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">      </span><span class="o">&lt;%=</span> <span class="n">content_tag</span> <span class="ss">:div</span><span class="p">,</span> <span class="n">msg</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="n">bootstrap_class_for</span><span class="p">(</span><span class="n">key</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Bootstrap alert 的 dismiss</h3>

<p>dismiss 的那个 <code>x</code> 需要结合 bootstrap 的 javascript 来完成。</p>

<p>在 alert 前面添加如下代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">button</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;button&quot;</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;close&quot;</span> <span class="n">data</span><span class="o">-</span><span class="n">dismiss</span><span class="o">=</span><span class="s2">&quot;alert&quot;</span><span class="o">&gt;&amp;</span><span class="n">times</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/button&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>application.js 加入 bootstrap的 js 和 dismiss 功能的 js</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">//</span><span class="o">=</span> <span class="nb">require</span> <span class="n">bootstrap</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="err">$</span><span class="p">(</span><span class="s2">&quot;.alert&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">alert</span><span class="p">(</span><span class="s1">&#39;close&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了 ， OK 鸟 ！</p>

<p>效果如图：</p>

<p><img src="http://SteveVallay.github.io/images/blog/myalert.png" alt="myalert" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Tutorial Learning]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/09/24/rails-tutorial-learning/"/>
    <updated>2013-09-24T05:34:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/09/24/rails-tutorial-learning</id>
    <content type="html"><![CDATA[<p>最近终于读完了 <a href="http://ruby.railstutorial.org/ruby-on-rails-tutorial-book" title="online book">Ruby on Rails Tutorial</a> , 这是一本 <a href="http://rubyonrails.org/" title="official site">Ruby on Rails</a> 的入门书籍，这本书很适合从零开始的初学者。笔者也是最近才开始学习 <a href="http://rubyonrails.org/" title="official site">Ruby on Rails</a> 的，在看过了 <a href="http://guides.rubyonrails.org/" title="online guides">Ruby on Rails Guides</a> 中的 <a href="http://guides.rubyonrails.org/getting_started.html" title="Get started with Rails onlnie">Get Started with Rails</a>之后，开始学习此书的。</p>

<p>本书中的大部分内容在讲述如何一步一步的使用 <a href="http://rubyonrails.org/" title="official site">Ruby on Rails</a> 搭建一个简单版的 <a href="http://twitter.com">Twitter</a>，拥有基本功能：<code>Sign Up</code> , <code>Sign In/Out</code> , <code>发布 tweet</code> , <code>查看 tweet</code> , <code>Follow/unfollow  others</code>。虽然是功能很简单，但足以让你了解使用 <code>Ruby on Rails</code> 搭建一个完整的 <code>App</code> 所需要的东西。如果你也在学习 <a href="http://rubyonrails.org/" title="official site">Ruby on Rails</a> ,而且还没有读过 <a href="http://ruby.railstutorial.org/ruby-on-rails-tutorial-book" title="online book">Ruby on Rails Tutorial</a>，那么强烈推荐<a href="http://ruby.railstutorial.org/ruby-on-rails-tutorial-book" title="online book">这本书</a>给你！(<strong>一定要注意版本哦!</strong>)</p>

<!--more-->


<p>下面来回顾一下每一章的内容，总结一下学到的东西。</p>

<p>第一章是基础知识介绍：</p>

<ul>
<li>开发环境：编辑器，安装 <code>Ruby</code> ， <code>Ruby Gems</code> ， <code>Rails</code> ， <code>Git</code> 。</li>
<li>创建第一个应用： <code>rails new</code> 创建 <code>app</code>， 介绍 <code>Bundle</code> ，启动 <code>rails server</code>， MVC模式。</li>
<li><code>Git/Github</code>： 使用 <a href="http://git-scm.com/">Git</a> 进行版本控制，将代码放到 <a href="http://github.coms">GitHub</a> 托管。</li>
<li><code>Heroku</code>：将 <code>app</code> 发布到 <a href="https://www.heroku.com/">Heroku</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crational Pattern - Sigleton]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/09/23/sigleton/"/>
    <updated>2013-09-23T13:54:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/09/23/sigleton</id>
    <content type="html"><![CDATA[<p>发现习惯 <a href="http://octopress.org">Octopress</a> 之后，就懒得再去照顾 <a href="http://enjoyhacking.com">Wordpress 博客</a> 了 ;&ndash;)。使用 <code>Octopress</code> 一个多月的时间，发觉使用这个轻量级的 <code>Framework</code> 写博客真是很舒服：</p>

<ul>
<li>简单的 <code>MarkDown</code> 语法，方便快速的处理基本的格式，比起处理 <code>HTML</code> 来要轻松多了。</li>
<li>托管使用 <a href="http://github.com">GitHub</a>, 免费，还不用担心服务器性能问题。自带版本控制。</li>
</ul>


<p>唯一的缺点可能是：你得在本地搭建一个环境，对于非程序员的一般用户来说，可能稍显复杂。</p>

<p>如果你也想搭建一个这样的博客，请参考<a href="http://stevevallay.github.io/blog/2013/08/15/blog-equals-octopress-plus-github-pages/">这里</a></p>

<p>继续<a href="http://enjoyhacking.com">这里</a> 学习 <code>Design Patterns</code>，今天来学习 <code>Singleton</code> 。</p>

<!--more-->


<p>又看了一遍 <a href="http://coolshell.cn/articles/8961.html">这篇文章</a>, 写的真是不错，<code>Design Patterns</code> 是从<a href="http://en.wikipedia.org/wiki/A_Pattern_Language">建筑领域</a>借鉴过来，解决软件设计中的问题。<code>GOF</code> 的 <code>Desgin Patterns</code>  中探讨了如何应用 Design Pattern 解决面向对象程序设计中的问题，如果我们能够不局限于此，从一般的软件设计和更加宽泛的角度来认识，或许能认识的更加深刻和独到。</p>

<h3>为什么使用 <code>Singleton</code> 模式</h3>

<p>使用 <code>Singleton</code> 是为了保证一个类只有一个实例，并且提供一个全局统一的接口来访问这个实例。</p>

<p>有很多情况下，需要保证一个类只有一个全局的实例：比如，全局的配置类需要保证有一个实例，这样才能保证所有使用的地方取到的配置是一致的；再比如，系统中管理窗口的类，也需要保证只有一个实例，这样才能保证窗口正确的排序和切换。</p>

<h3>如何实现 <code>Singleton</code></h3>

<p>如何保证一个类只有一个实例，而且是全局可以访问的？ 一个全局变量怎么样？虽然全局变量可以保证全局可以访问，但是不能保证只有一个实例。</p>

<p>让一个类自己来保证只有一个实例，提供一个全局统一的访问接口似乎是更合理的做法。因为是由这个类自己来响应创建实例和访问实例的请求。</p>

<p>来看一下这个结构图：</p>

<p><img src="http://SteveVallay.github.io/images/blog/singl014.gif" alt="single" /></p>

<p>从上图可以看出，这个类需要有一个唯一的实例 <code>uniqueInstance</code> , 以及一个可以访问这个实例的接口 <code>Instance()</code>。<code>singletonData</code> 是其他数据成员，<code>SingletonOperation</code> 和 <code>GetSingletonData</code> 是类的一般方法。</p>

<p>那么实现才能保证一个实例，全局访问呢？</p>

<p>Singleton 的声明：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'> <span class="k">class</span> <span class="nc">Singleton</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">public</span><span class="o">:</span>
</span><span class='line'>        <span class="k">static</span> <span class="n">Singleton</span><span class="o">*</span> <span class="n">Instance</span><span class="p">();</span>
</span><span class='line'>    <span class="k">protected</span><span class="o">:</span>
</span><span class='line'>        <span class="n">Singleton</span><span class="p">();</span>
</span><span class='line'>    <span class="k">private</span><span class="o">:</span>
</span><span class='line'>        <span class="k">static</span> <span class="n">Singleton</span><span class="o">*</span> <span class="n">_instance</span><span class="p">;</span>
</span><span class='line'>    <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>定义一个 <code>static</code> 方法 <code>Instance()</code> 保证全局统一访问；将构造函数 <code>Singleton（）</code>设置为
<code>protected</code> 使得外部无法调用此接口来创建新的实例，实现了自己控制实例的数量（此类或子类中），不受外部影响。</p>

<p>Singleton 的实现：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="n">Singleton</span><span class="o">*</span> <span class="n">Singleton</span><span class="o">::</span><span class="n">_instance</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Singleton</span><span class="o">*</span> <span class="n">Singleton</span><span class="o">::</span><span class="n">Instance</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">_instance</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">_instance</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Singleton</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">_instance</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在返回 <code>Instance</code> 之前判断是否存在，如果不存在则创建这个实例，保证了实例只创建一次。</p>

<h2><code>Singleton</code> 的子类</h2>

<p>有时候可能 <code>Singleton</code> 需要满足不同的需求，因此需要几个不同的子类来是实现不同的需求，但是，如何保证运行时将正确的 <code>Instance</code> 绑定到 <code>_instance</code> 成员呢？</p>

<p>最简单的方法是在 <code>Instance()</code> 方法中根据配置来决定使用哪一个 <code>Singleton</code>。使用一种 <code>Registry</code> 和 <code>Lookup</code> 来决定使用哪个子类。</p>

<p>来看下新的 <code>Singleton</code> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="k">class</span> <span class="nc">Singleton</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">public</span><span class="o">:</span>
</span><span class='line'>        <span class="k">static</span> <span class="kt">void</span> <span class="n">Register</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">name</span><span class="p">,</span> <span class="n">Singleton</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'>        <span class="k">static</span> <span class="n">Singleton</span><span class="o">*</span> <span class="n">Instance</span><span class="p">();</span>
</span><span class='line'>    <span class="k">protected</span><span class="o">:</span>
</span><span class='line'>        <span class="k">static</span> <span class="n">Singleton</span><span class="o">*</span> <span class="n">Lookup</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="k">private</span><span class="o">:</span>
</span><span class='line'>        <span class="k">static</span> <span class="n">Singleton</span><span class="o">*</span> <span class="n">_instance</span><span class="p">;</span>
</span><span class='line'>        <span class="k">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">NameSingletonPair</span><span class="o">&gt;*</span> <span class="n">_registry</span><span class="p">;</span>
</span><span class='line'>    <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Register</code> 用来注册 <code>Singleton</code> 子类, 保存了一份 <code>Singleton</code> 子类的名字和实例 <code>map</code>，
<code>Lookup</code> 通过名字来找到正确的 <code>Singleton</code> 子类的实例。(假定名字是可以通过上下文环境来获取的)</p>

<p><code>Instance()</code> 的实现：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="n">Singleton</span><span class="o">*</span> <span class="n">Singleton</span><span class="o">::</span><span class="n">Instance</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_instance</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">singletonName</span> <span class="o">=</span> <span class="n">getenv</span><span class="p">(</span><span class="s">&quot;SINGLETON&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">// user or environment supplies this at startup</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">_instance</span> <span class="o">=</span> <span class="n">Lookup</span><span class="p">(</span><span class="n">singletonName</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">// Lookup returns 0 if there&#39;s no such singleton</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">_instance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Singleton</code> 的子类：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="k">static</span> <span class="n">MySingleton</span> <span class="n">theSingleton</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">MySingleton</span><span class="o">::</span><span class="n">MySingleton</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// ...</span>
</span><span class='line'>        <span class="n">Singleton</span><span class="o">::</span><span class="n">Register</span><span class="p">(</span><span class="s">&quot;MySingleton&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>android 中一个实现 <code>Singleton</code> 的例子</h3>

<p><em>WindowManagerGlobal.java</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">WindowManagerGlobal</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">synchronized</span> <span class="o">(</span><span class="n">WindowManagerGlobal</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">sDefaultWindowManager</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">sDefaultWindowManager</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WindowManagerGlobal</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">sDefaultWindowManager</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[番茄工作法]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/09/10/tomato/"/>
    <updated>2013-09-10T10:14:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/09/10/tomato</id>
    <content type="html"><![CDATA[<p><img src="http://SteveVallay.github.io/images/blog/tomato-tech.png" alt="" /></p>

<!--more-->


<p>经常会遇到这样的情况：在忙碌了一天之后，发现 <strong>咦?一天结束了，可是怎么觉得什么都没干呢？</strong>
，回想一下自己一天工作的场景：</p>

<p>收邮件->回邮件->干会儿活A->收到新邮件->擦，新Bug->回复下->干会儿活?&ndash;>有人来问问题->过去看下->搞定->回来->看下邮件->休息下看看twitter->继续干活?&ndash;>fouban.fm换首歌->有新邮件->再干会儿活?&ndash;>看看github->有人IM找你->IM聊天&hellip;&ndash;>干活儿?&ndash;>有人电话你->新问题看下代码->回来干活?&ndash;>看邮件->干活?&ndash;>看邮件->看邮件->下班&hellip;&hellip;</p>

<p>真实的情况可能比上面更复杂，尤其是你有QQ提醒等等之类的东西的时候。我不知道别的公司怎么样，反正在我公司邮件是比较重要的，如果不及时回复很可能一会儿就会IM或者电话找你了。</p>

<p>自己反省可能有几个原因导致效率降低：</p>

<ul>
<li>缺少一天的计划。最好是每一天都有每一天的计划，而且关键要写下来。我们习惯于将各种计划都放在头脑中，导致同时想着太多的事情，不能专注。</li>
<li>不断被打断，使得自己很难持续一段时间专注在一件事情上。尤其是同时有几件任务并发的时候，做这件事情的时候又被那件事情的邮件干扰。虽然有些客观因素不可避免，但是只有强制自己少被其他事情干扰，才能专注地把事情做完。</li>
<li>事情的优先级没有安排好。俗话说<strong>人有旦夕祸福，事有轻重缓急</strong>，将事情按轻重缓急的优先级列出，使得自己一目了然，不用再在头脑思考切换，让头脑专注于具体的事情，不要让它再思考该做哪个，不该做哪个(当然我指定是不影响你做事的时间，事实上想清楚应该做什么是最重要的，我们第一应该做的就是花时间思考清楚这一点)。</li>
</ul>


<p>我在考虑如何提高自己效率的时候，偶然间，邂逅了 “番茄工作法”，使用 “番茄钟” 来提醒自己，在这25分钟（或者你自己设定的时间）要专注在当前的事情上，“番茄钟”没有响起，你不可以去干其他事情。下面就介绍一下，希望对你也有帮助。:&ndash;)</p>

<h3>什么是番茄工作法？</h3>

<blockquote><p>番茄工作法（Pomodoro Technique）由弗朗西斯科·西里洛于1992年创立的相对于<a href="http://www.baike.com/wiki/gtd&amp;prd=button_doc_jinru">GTD</a>更微观的时间管理方法。</p>

<p>他在大学生活的头几年，曾一度苦于学习效率低下，于是便和自己打赌，狠狠鄙视自己说：“我能学一会儿习吗？真正学上10分钟？”后来他找到了一枚厨房定时器，形状像西红柿（Pomodoro ，意大利语的“番茄”）。就这样，遇到了他的番茄钟。</p>

<p>所谓“番茄工作法”，指的是把任务分解成半小时左右，集中精力工作25分钟后休息5分钟，如此视作种一个“番茄”。哪怕工作没有完成，也要定时休息，然后再进入下一个番茄时间。收获4个“番茄”后，能休息15至30分钟。</p>

<p>这样的设定是考虑到，对庞大任务的恐惧和抗拒是导致拖延的重要原因，把注意力集中在“当下”，能帮助人更好地集中精力、摆脱过去失败的阴影和对“万一任务完不成”的焦虑。而种“番茄”期间的休息安排，这样的小小激励能使下一个30分钟更有动力。</p>

<p>&mdash;参考<a href="http://www.baike.com/wiki/%E7%95%AA%E8%8C%84%E5%B7%A5%E4%BD%9C%E6%B3%95">互动百科</a></p></blockquote>

<h3>我如何应用番茄工作法</h3>

<p>要实践<strong>番茄工作法</strong>，首先你要有一个<strong>番茄钟</strong>,这个助手帮助你设定好时间，时间到了之后提醒你。我发现在 <code>Windows</code> 平台和 <code>Android</code> 平台都已经有这样的应用程序，不过尝试了一下，我都觉得不是很好用，直到我发现了一个 <a href="http://stevevallay.github.io/tomato/">web 版本</a>，它很好的解决了我在 windows（在公司) 和 linux(在家) 都要使用的需求。而且界面简单易用，代码在 <a href="https://github.com/">Github</a> 上,还可以自己修改。这个小程序是由腾讯的 <a href="https://github.com/AlloyTeam">Alloy Team</a> 用 <code>html</code> 和 <code>js</code> 写成的，我 <a href="https://github.com/SteveVallay/tomato">Fork 了一下</a> ，小改了一下，你可以<a href="http://stevevallay.github.io/tomato/">预览一下</a>。</p>

<p>界面非常简洁，使用 <code>bootstrap</code> <code>css</code>框架， 看起来很清秀。上图：</p>

<p><img src="http://SteveVallay.github.io/images/blog/tomato.png" alt="tomato" /></p>

<h3>番茄工作法带来的好处</h3>

<ul>
<li>帮助我梳理还有那些事情需要做</li>
<li>在一个番茄时间内专注做当下的事情</li>
<li>让我可以回顾自己做了哪些事情</li>
<li>帮助客观的了解自己的效率，比如（我统计出自己看书的速度大概是 8p/<code>half hour</code>）</li>
</ul>


<p>推荐你也尝试一下 ！ ;&ndash;)</p>

<p>推荐这本 <a href="http://pomodorotechnique.com/download/pdf/ThePomodoroTechnique-CHN_v1-3.pdf">中文书籍</a> ~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[using bootstrap in rails]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/09/04/using-bootstrap-in-rails/"/>
    <updated>2013-09-04T12:41:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/09/04/using-bootstrap-in-rails</id>
    <content type="html"><![CDATA[<p>本人 <code>rails</code> 新手，使用 <code>rails 4.0</code> ， 在 <code>rails</code> <code>app</code> 中添加 <a href="http://getbootstrap.com/" title="home page">Bootstrap</a> 支持, 参考 <code>Ruby on Rails tutorial 2nd edition En</code>。</p>

<!-- more -->


<h2>Step 1  添加 <a href="https://github.com/thomas-mcdonald/bootstrap-sass" title="github">bootstrap-sass</a> 到 <strong>Gemfile</strong></h2>

<p>打开 <strong>Gemfile</strong> 添加如下内容：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Use bootstrap</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;bootstrap-sass&#39;</span><span class="p">,</span><span class="s1">&#39;~&gt;2.3.2&#39;</span> <span class="c1">#tutorial 上用的是2.0.0</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Step 2 安装</h2>

<p>直接运行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Step 3 创建 <code>custom.css.scss</code></h2>

<p>创建 <code>custom.css.scss</code> 文件：</p>

<p><strong>app/assets/stylesheets/custom.css.scss</strong></p>

<p>在 <strong>app/assets/stylesheets</strong> 下的文件会自动被 <strong>application.css</strong> <code>include</code>进来。</p>

<p>在这个文件中可以添加 bootstrap CSS 进来，在 <code>custom.css.scss</code> 中添加：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@import</span> <span class="s2">&quot;bootstrap&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>当然，还可以在<code>custom.css.sass</code>文件中添加自己的<code>custom</code> 如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@import</span> <span class="s2">&quot;bootstrap&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c">/*universal*/</span>
</span><span class='line'>
</span><span class='line'><span class="nt">html</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">overflow-y</span><span class="o">:</span><span class="k">scroll</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nt">body</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">padding-top</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>        <span class="k">padding-left</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails 4 using jquery]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/08/29/rails-4-using-jquery/"/>
    <updated>2013-08-29T12:40:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/08/29/rails-4-using-jquery</id>
    <content type="html"><![CDATA[<p>本人 rails 新手，在学习 <code>rails</code> (version 4.0.0） 程序的时候，需要用到 <code>javascript</code>，想使用现成的 <code>java script</code> 库，就想着把 <a href="http://jquery.com/">JQuery</a> 添加进来，并且要使用一个 <code>jquery</code> 的 <code>plugin</code> &mdash; <a href="http://jqueryvalidation.org/">jquery validation</a>。</p>

<!-- more -->


<h2>rails 怎么加入 jQuery ?</h2>

<p><a href="http://google.com">Google</a> 了很久，有很多 <code>rails 3</code> 如何添加使用 <code>jQuery</code> 的， <code>rails4</code> 的就没找到。后来，终于发现原来<strong>自 <code>rails 3.1</code> 之后，<code>rails</code> 已经包含了对 <code>jQuery</code>的支持</strong>。:&ndash;) <a href="https://github.com/rails/jquery-rails">jquery-rails</a> 这个 <code>gem</code> 就是 <code>rails</code> 对 <code>jQuery</code> 的支持， 查看 Gemfile , 如果已经包含了 <a href="https://github.com/rails/jquery-rails">jquery-rails</a> , 而且 <code>rails</code> 版本等于或高于 <code>rails3.1</code> 那就说明已经支持 jQuery 了。</p>

<p>具体请看 <a href="https://github.com/rails/jquery-rails">jquery-rails 的 github</a>。</p>

<p>查看 <code>Gemfile</code> :</p>

<p>如果有下面这一行，那么 <code>rails new app</code> 的时候会自动用 <code>bundle install</code> 安装 <code>jquery-rails</code>。</p>

<pre><code>gem "jquery-rails"
</code></pre>

<p>在 <code>app/assets/javascripts/application.js</code> 里面应该有下面这两句，这样 <code>application.js</code> 就自动包含了 <code>jquery.js</code> 和 <code>jquery_ujs.js</code> :</p>

<pre><code>//= require jquery
//= require jquery_ujs
</code></pre>

<h2>怎么测试我的 <code>rails</code> 已经包含了 <code>jQuery</code> ?</h2>

<p>有个简单的方法可以测试你的 rails 是否已经包含了对 jQuery的支持，首先，你要确保上面所说的 <code>Gemfile</code> 和 <code>application.js</code> 都如上所示。</p>

<p>新建一个 <code>rails app</code> (如果已经有了就不用新建了),新建个 <code>welcome#index</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">rails</span> <span class="kp">new</span> <span class="n">my</span><span class="o">-</span><span class="n">app</span>
</span><span class='line'><span class="err">$</span> <span class="n">rails</span> <span class="n">generate</span> <span class="n">controller</span> <span class="n">welcome</span> <span class="n">index</span>
</span></code></pre></td></tr></table></div></figure>


<p>启动你的 <code>rails app</code> ：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cd</span> <span class="n">my</span><span class="o">-</span><span class="n">app</span>
</span><span class='line'><span class="n">rails</span> <span class="n">s</span>
</span></code></pre></td></tr></table></div></figure>


<p>打开 <a href="http://localhost:3000/welcome/index">http://localhost:3000/welcome/index</a>, 右击页面，查看源代码,如果有了下面两行，应该是 <code>Ok</code> 了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">data-turbolinks-track=</span><span class="s">&quot;true&quot;</span> <span class="na">src=</span><span class="s">&quot;/assets/jquery.js?body=1&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">data-turbolinks-track=</span><span class="s">&quot;true&quot;</span> <span class="na">src=</span><span class="s">&quot;/assets/jquery_ujs.js?body=1&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>添加一段 <code>js</code> 代码测试 <code>jQuery</code></h2>

<p>当然，我们也可以加一段 <code>js</code> 代码来测试 <code>jQuery</code> 是否可以被正确的调用。</p>

<p>在 <code>app/assets/javascripts/application.js</code> 文件末尾添加如下代码:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;success!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>你再次打开 <a href="http://localhost:3000/welcome/index">http://localhost:3000/welcome/index</a> 的时候，会弹出一个  <code>success!</code> 的 <code>dialog</code>，那就说明成功了!</p>

<h2>添加 <code>jQuery</code> <code>Validation</code> <code>plugin</code></h2>

<p>下载 <a href="http://jqueryvalidation.org/">jQuery Validation</a>，把 <code>jquery.validate.min.js</code> 放在 <code>app/assets/javascripts</code> 下面就可以用了。</p>

<p>使用方法可以参考 <a href="http://sleekd.com/tutorials/jquery-validation-in-ruby-on-rails/">这个tutorials</a>，或者<a href="http://jqueryvalidation.org/documentation">官方文档</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[部署 Rails 程序到 Heroku]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/08/27/deploy-rails-app-on-heroku/"/>
    <updated>2013-08-27T17:26:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/08/27/deploy-rails-app-on-heroku</id>
    <content type="html"><![CDATA[<h2>什么是 Heroku ?</h2>

<p><a href="https://www.heroku.com/">Heroku</a> 是一个 <a href="http://en.wikipedia.org/wiki/Platform_as_a_service">Saas</a> (云应用平台)，用户可以将自己的 web 程序部署到 <a href="https://www.heroku.com/">Heroku</a> 云主机上。使用简单的命令就可以部署你的程序到 <a href="https://www.heroku.com/">Heroku</a>。 <a href="https://www.heroku.com/">Heroku</a> 使用 <a href="http://git-scm.com/">Git</a> 作为版本控制工具。<a href="https://www.heroku.com/">Heroku</a> 目前支持 <a href="http://www.ruby-lang.org/en/">Ruby</a>， <a href="http://nodejs.org/">Node.js</a>，<a href="http://clojure.org/">Clojure</a>，Java，<a href="http://www.python.org/">Python</a>，<a href="http://www.scala-lang.org/">Scala</a>。默认数据库是 <a href="http://www.postgresql.org/">PostgreSQL</a>。</p>

<blockquote><p>Build. Deploy. Scale. Heroku brings them together
in an experience built and designed for developers.
– Larry Marburger, CloudApp</p></blockquote>

<p>想要部署你的程序到 <a href="https://www.heroku.com/">Heroku</a>？</p>

<p>Let&rsquo;s Go !</p>

<!-- more -->


<h2>Step 1：创建账户</h2>

<p>你需要先创建一个 Heroku的账户，如果你已经有了，直接看 Step 2.</p>

<p><a href="https://api.heroku.com/signup/devcenter" title="创建 Heroku 账户">点此创建 Heroku 账户</a></p>

<h2>Step 2： 安装 Heroku Toolbelt</h2>

<p><code>Linux</code> 用户请查看 <a href="https://toolbelt.heroku.com/debian" title="install heroku toolbet linux">安装 Heroku toolbelt</a> , 或直接执行下面命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh</span></code></pre></td></tr></table></div></figure>


<p>我在执行的时候发现非常的慢，就在浏览器打开了上面这个<a href="https://toolbelt.heroku.com/install-ubuntu.sh" title="https://toolbelt.heroku.com/install-ubuntu.sh">URL</a> 然后，保存下来，手动执行了一下。</p>

<p>我还修改了一行,
将:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install -y heroku-toolbelt</span></code></pre></td></tr></table></div></figure>


<p>改为:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install -y --force-yes heroku-toolbelt</span></code></pre></td></tr></table></div></figure>


<h2>Step 3: 登录</h2>

<p>安装好之后，就可用命令行登录 heroku:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku login
</span><span class='line'>Enter your Heroku credentials.
</span><span class='line'>Email: adam@example.com
</span><span class='line'>Password:
</span><span class='line'>Could not find an existing public key.
</span><span class='line'>Would you like to generate one? <span class="o">[</span>Yn<span class="o">]</span>
</span><span class='line'>Generating new SSH public key.
</span><span class='line'>Uploading ssh public key /Users/adam/.ssh/id_rsa.pub
</span></code></pre></td></tr></table></div></figure>


<h2>Step 4: 准备好自己的程序</h2>

<p>一切就绪，你需要准备好自己的程序。</p>

<p>由于 Heroku上 使用的是 PostgreSQL ， 所以我们需要修改下Gemfile。</p>

<p>将:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;sqlite3&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改为:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;sqlite3&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;pg&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>确保你的 app 已经纳入 Git 版本控制之中，如果没有请执行:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git init
</span><span class='line'>git add -A
</span><span class='line'>git commit -m <span class="s2">&quot;initial commit&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Step 5： 部署程序到 Heroku</h2>

<p>下面该上传你的 app 到 Heroku 了:</p>

<p>创建 Heroku App:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku create
</span><span class='line'>Creating stark-fog-398... <span class="k">done</span>, stack is cedar
</span><span class='line'>http://stark-fog-398.herokuapp.com/ | git@heroku.com:stark-fog-398.git
</span><span class='line'>Git remote heroku added
</span></code></pre></td></tr></table></div></figure>


<p><code>push</code> 代码到 Heroku：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git push heroku master
</span><span class='line'>Counting objects: 67, <span class="k">done</span>.
</span><span class='line'>Delta compression using up to 4 threads.
</span><span class='line'>Compressing objects: 100% <span class="o">(</span>52/52<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>Writing objects: 100% <span class="o">(</span>67/67<span class="o">)</span>, 86.33 KiB, <span class="k">done</span>.
</span><span class='line'>Total 67 <span class="o">(</span>delta 5<span class="o">)</span>, reused 0 <span class="o">(</span>delta 0<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>-----&gt; Heroku receiving push
</span><span class='line'>-----&gt; Rails app detected
</span><span class='line'>-----&gt; Installing dependencies using Bundler version 1.1
</span><span class='line'>       Checking <span class="k">for </span>unresolved dependencies.
</span><span class='line'>       Unresolved dependencies detected.
</span><span class='line'>       Running: bundle install --without development:test --path vendor/bundle --deployment
</span><span class='line'>       Fetching <span class="nb">source </span>index <span class="k">for </span>https://rubygems.org/
</span><span class='line'>       Installing rake <span class="o">(</span>0.8.7<span class="o">)</span>
</span><span class='line'>       ...
</span><span class='line'>       Installing rails <span class="o">(</span>3.0.5<span class="o">)</span>
</span><span class='line'>       Your bundle is <span class="nb">complete</span>! It was installed into ./vendor/bundle
</span><span class='line'>-----&gt; Rails plugin injection
</span><span class='line'>       Injecting rails_log_stdout
</span><span class='line'>       Injecting rails3_serve_static_assets
</span><span class='line'>-----&gt; Discovering process types
</span><span class='line'>       Procfile declares types -&gt; <span class="o">(</span>none<span class="o">)</span>
</span><span class='line'>       Default types <span class="k">for </span>Rails -&gt; console, rake, web, worker
</span><span class='line'>-----&gt; Compiled slug size is 8.3MB
</span><span class='line'>-----&gt; Launching... <span class="k">done</span>, v5
</span><span class='line'>       http://severe-mountain-793.herokuapp.com deployed to Heroku
</span><span class='line'>
</span><span class='line'>To git@heroku.com:severe-mountain-793.git
</span><span class='line'> * <span class="o">[</span>new branch<span class="o">]</span>      master -&gt; master
</span></code></pre></td></tr></table></div></figure>


<p>如果这一步时间很长，或者返回 <code>Timeout</code> , 而且你在 China ，那可能遇到 <a href="http://ruby-china.org/topics/10813">这个问题</a> 了。</p>

<p><code>Note:</code>
不要使用 <code>rails new yourapp</code> 新建一个 app 来测试 Heroku, 至少你也得建个 <code>welcome#index</code>
来测试吧。</p>

<p><a href="http://enjoyhacking.heroku.com">这里</a> 是我用来测试的 rails app.</p>
]]></content>
  </entry>
  
</feed>
