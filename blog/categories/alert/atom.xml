<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: alert | Zhibin's blog]]></title>
  <link href="http://SteveVallay.github.io/blog/categories/alert/atom.xml" rel="self"/>
  <link href="http://SteveVallay.github.io/"/>
  <updated>2013-12-23T18:22:44+08:00</updated>
  <id>http://SteveVallay.github.io/</id>
  <author>
    <name><![CDATA[zhibin]]></name>
    <email><![CDATA[zhibinwang.q@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails add alert in bootstrap]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/10/28/rails-add-alert-in-bootstrap/"/>
    <updated>2013-10-28T22:12:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/10/28/rails-add-alert-in-bootstrap</id>
    <content type="html"><![CDATA[<p>今天,又给自己的小程序的 Notification 进行了下美化。让 Rails 应用的 Notification 使用 Bootstrap 样式的 <a href="http://getbootstrap.com/javascript/#alerts">Alert</a> (如下图)：</p>

<p><img src="/images/blog/alert.png" alt="alert" /></p>

<!-- more -->


<h3>Bootstrap 的 <code>alert</code></h3>

<p>首先,在 <code>Bootstrap</code> 中 ,只要为你要显示的内容指定 class 为 alert 即可显示成上面的样式（当然不包含 <code>x</code> 号)。如下：</p>

<p>``` html</p>

<div class="alert alert-success">...</div>


<div class="alert alert-info">...</div>


<div class="alert alert-warning">...</div>


<div class="alert alert-danger">...</div>


<p>```</p>

<p><code>alert-success</code> <code>alert-info</code> <code>alert-warning</code> <code>alert-danger</code> 会显示为绿色、蓝色、橙色和红色。效果如下：</p>

<p><img src="/images/blog/alerts.png" alt="alerts" /></p>

<h3>Rails 中 flash 的 key 映射到 Bootstrap alert 的 class</h3>

<p>在 Rails 中，通常是使用 flash 来设置给用户的消息。flash 是一个 map ， 它的 key 常有 :error, :alert ,:notice, :success 用来区分给用户的消息类型。在 view 中遍历 flash 这个 map 即可取到相应的消息。</p>

<p>如：</p>

<p><code>ruby
 &lt;% flash.each do |key, msg| -%&gt;
      &lt;%= content_tag :div, msg, class: key %&gt;
    &lt;% end -%&gt;
</code></p>

<p>通常将 flash 这个 map 中的 key 设置为 html 元素的 class , 在对这个 class 进行 CSS 的定制化，即可显示处不同样式的 alert。但是 flash 中的 key 值似乎和 Bootstrap  alert 的 class 并不是一一对应，拿来就能用的。我们可以加一个方法来实现这种转化。在 application_helper 里面添加如下代码即可（在 Github gits 中看到的，一时要找不到了 ;&ndash;)：</p>

<p>```ruby
  def bootstrap_class_for flash_type</p>

<pre><code> case flash_type
   when :success
     "alert-success"
   when :error
     "alert-error"
   when :alert
     "alert-block"
   when :notice
     "alert-info"
   else
     flash_type.to_s
 end
</code></pre>

<p>   end
```
view 中的代码改成如下即可 :</p>

<p><code>
      &lt;%= content_tag :div, msg, class: bootstrap_class_for(key) %&gt;
</code></p>

<h3>Bootstrap alert 的 dismiss</h3>

<p>dismiss 的那个 <code>x</code> 需要结合 bootstrap 的 javascript 来完成。</p>

<p>在 alert 前面添加如下代码：</p>

<p><code>
&lt;button type="button" class="close" data-dismiss="alert"&gt;&amp;times;&lt;/button&gt;
</code></p>

<p>application.js 加入 bootstrap的 js 和 dismiss 功能的 js</p>

<p><code>
//= require bootstrap
...
$(".alert").alert('close')
</code></p>

<p>好了 ， OK 鸟 ！</p>

<p>效果如图：</p>

<p><img src="/images/blog/myalert.png" alt="myalert" /></p>
]]></content>
  </entry>
  
</feed>
