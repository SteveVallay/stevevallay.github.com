<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | Zhibin's blog]]></title>
  <link href="http://SteveVallay.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://SteveVallay.github.io/"/>
  <updated>2014-02-13T15:14:46+08:00</updated>
  <id>http://SteveVallay.github.io/</id>
  <author>
    <name><![CDATA[zhibin]]></name>
    <email><![CDATA[zhibinwang.q@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[markdown usage]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/08/15/markdown/"/>
    <updated>2013-08-15T11:15:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/08/15/markdown</id>
    <content type="html"><![CDATA[<h3>什么是 markdown ?</h3>

<p>随着 <a href="https://github.com">Github</a> 的流行，markdown 渐渐获得了人们的青睐，当作一种更便于读写的格式流行起来. github 默认支持 markdown格式的文件，例如这个 <a href="https://github.com/SteveVallay/stevevallay.github.com/blob/source/README.markdown">README.markdown</a> 文件，在github 上展示的时候会被直接解析成漂亮的格式。</p>

<p>随后，<a href="http://pages.github.com/">github page</a> 的出现可以使你可以在 github 上搭建一个免费博客，使用 markdown 语法。</p>

<p>再然后，出现了<a href="http://jekyllrb.com/">jekyllrb</a> 和 <a href="http://octopress.org/">Octopress</a>  这种基于 <a href="http://pages.github.com/">github page</a> 和 markdown 的 Blog 框架，使人们摆脱 wordpress 的臃肿，不必担心找不到托管服务器,使用简单的 markdown 语法即可快速撰写和发布博客。(当前这个 blog 正是使用 <a href="http://octopress.org/">Octopress</a> + <a href="http://pages.github.com/">github page</a> 搭建的博客)</p>

<p>简单的说，markdown 是一种轻量级的标记语言，它的目标是易读易写，使用 markdown 书写的格式可被 markdown 解析器转换成格式良好的 html/xhtml 文件。</p>

<p>markdown 包含两层含义，一层是 markdown 语法；另外一层是解析 markdown 语法文件的软件。</p>

<p>一些介绍 markdown 语法的资源：</p>

<ul>
<li><a href="http://daringfireball.net/projects/markdown/">markdown 作者博客</a></li>
<li><a href="http://zh.wikipedia.org/wiki/Markdown">中文 wiki</a></li>
<li><a href="http://en.wikipedia.org/wiki/Markdown">英文 wiki</a></li>
<li><a href="http://wowubuntu.com/markdown/">Markdown 语法说明 (简体中文版)</a></li>
</ul>


<!-- more -->


<h3>谁使用 markdown ?</h3>

<p>列举几个著名的：</p>

<ul>
<li><a href="https://github.com">Github</a></li>
<li><a href="http://pages.github.com/">Github pages</a></li>
<li><a href="https://gist.github.com/">Github Gist</a></li>
<li><a href="http://stackoverflow.com/">Stack Overflow</a></li>
<li><a href="http://stackoverflow.com/editing-help">StackOverflow edit help</a></li>
</ul>


<h3>mark down 语法 Example</h3>

<h4>标题</h4>

<p>使用任意数量的 <code>===</code>  表示一级标题，<code>----</code> 表示二级标题。</p>

<p>如：</p>

<pre><code>一级标题
===========

二级标题
--------
</code></pre>

<p>也可以采用在行首插入 <code>#</code> 的格式，行首插入 1-6 个 <code>#</code> ，对应1级到6级标题</p>

<pre><code>#一级标题
##二级标题
###三级标题
</code></pre>

<h3>块引用</h3>

<p>在每行的行首加入 <code>&gt;</code> 可建立一个块引用</p>

<p>如：</p>

<pre><code>&gt;Stay hungry, stay foolish !
</code></pre>

<p>显示效果：</p>

<blockquote><p>Stay hungry, stay foolish !</p></blockquote>

<p>在块引用内部也支持 markdown 标记，多级引用： 比如：</p>

<pre><code>&gt;###Title
&gt;some code
&gt;
&gt;    sudo make me a sandwitch
&gt;&gt;二级引用
</code></pre>

<p>显示效果：</p>

<blockquote><h3>Title</h3>

<p>some code</p>

<pre><code>sudo make me a sandwidth
</code></pre>

<blockquote><p>二级引用</p></blockquote></blockquote>

<h3>强调</h3>

<p>markdown 使用 <code>*</code> 和 <code>_</code> 来表示强调，被一个或多个 <code>*</code> <code>_</code> 包围的字句会被显示为强调。</p>

<p>如：</p>

<pre><code>*one*
_one_
**two**
__two__
***three***
___three___
</code></pre>

<p>显示效果：</p>

<p><em>one</em>
<em>one</em>
<strong>two</strong>
<strong>two</strong>
<strong><em>three</em></strong>
<strong><em>three</em></strong></p>

<h3>列表</h3>

<p>markdown 支持无序列表和有序列表。</p>

<p>在行首使用  <code>*</code>, <code>+</code> 或者 <code>-</code> 加一个空格作为无序列表标记。</p>

<p>如：</p>

<pre><code>* ul 1
* ul 2
* ul 3
</code></pre>

<p>显示效果：</p>

<ul>
<li>ul 1</li>
<li>ul 2</li>
<li>ul 3</li>
</ul>


<p>有序列表使用数字和一个英文句点 <code>.</code> 加一个空格。</p>

<p>如：</p>

<pre><code> 1. ol 1
 2. ol 2
 3. ol 3
</code></pre>

<p>显示效果：</p>

<ol>
<li>ol 1</li>
<li>ol 2</li>
<li>ol 3</li>
</ol>


<h3>链接</h3>

<p>markdown 支持两种链接：<strong>行内</strong>和<strong>参考</strong>两种形式。</p>

<p><strong>行内</strong>链接的写法：将链接文字用 <code>[]</code> 括起来，链接地址用 <code>()</code> 括起来。</p>

<p>如：</p>

<pre><code>[My Blog](http://stevevallay.github.io)
</code></pre>

<p>显示效果:</p>

<p><a href="http://stevevallay.github.io">My Blog</a></p>

<p><strong>参考</strong>链接与<strong>行内</strong>链接不同，参考链接将链接地址放在另外的地方（一般集中放在页面下方),用数字来引用：</p>

<p>如：</p>

<pre><code>[My Blog][100]
[100]:http://stevevallay.github.io
</code></pre>

<p>显示效果：</p>

<p><a href="http://stevevallay.github.io">My Blog</a></p>

<h3>引用代码</h3>

<p>在句子中，可以使用反引号(<code>`</code>）标记一小段代码。</p>

<p>如：</p>

<pre><code>get bash help from `man bash`
</code></pre>

<p>显示效果：</p>

<p>get help from <code>man bash</code></p>

<p>插入一段多行程序代码，使用多个反引号开头和结尾。</p>

<p>如：</p>

<pre><code>```
sudo make me a sandwich
eat it
```
</code></pre>

<p>显示效果：(这里的显示效果可能有些不同，因为这里使用了 Octopress 的 <a href="http://octopress.org/docs/plugins/backtick-codeblock/">Backtick Code Block </a> 插件</p>

<p>```</p>

<pre><code>sudo make me a sandwich
eat it
</code></pre>

<p>```</p>

<h3>图片</h3>

<p>markdown 使用和链接类似的语法来插入图片，同样也有两种样式：<strong>行内</strong>和<strong>参考</strong>。</p>

<p><strong>行内</strong>引用:</p>

<p><code>
   ![Image Description](/image/path/aa.img)
</code>
显示效果：</p>

<p><img src="/images/blog/create_a_repo.png" alt="Example Image" /></p>

<p><strong>参考</strong>引用:</p>

<p><code>
![示例图片][101]
</code>
显示效果：</p>

<p><img src="/images/blog/create_a_repo.png" alt="示例图片" /></p>

<h3>注脚</h3>

<p>注脚和链接类似，只是编号使用一个 <code>^</code>符号开头，比如：</p>

<p>```
  footnote example<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p>```
显示效果</p>

<p>this is a fotnote[^1]</p>

<h3>转义</h3>

<p>markdown 语法中特殊意义的字符输入的时候要用反斜杠<code>\</code>来转义。</p>

<p>如：</p>

<p><code>``
\  反斜杠
</code>  反引号
*  星号
_  底线
{} 花括号
[] 方括号
() 括弧</p>

<h1>井字号</h1>

<ul>
<li>加号</li>
<li>减号
.  英文句点
!  惊叹号
```</li>
</ul>


<h3>Markdown 编辑器</h3>

<p><code>Windows</code> 下我使用 <a href="http://markdownpad.com/">MarkdownPad</a> 作为 markdown 编辑器。</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>this is a footnote<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[blog = octopress + github pages]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/08/15/blog-equals-octopress-plus-github-pages/"/>
    <updated>2013-08-15T10:44:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/08/15/blog-equals-octopress-plus-github-pages</id>
    <content type="html"><![CDATA[<p>Thanks to github , we have another choice to setup a blog beyond the popluar wordpress, <a href="http://page.github.com">github pages</a> +  <a href="http://octopress.org">octopress</a> (based on <a href="http://jekyllrb.com">jekyll</a>, simply we can say : octopress is jekyll + themes).</p>

<p>Using octopress we can setup a blog very easy , the most import is that the blog is host at <a href="http://github.com">github</a>:</p>

<ul>
<li>it is free!</li>
<li>version control !</li>
<li>without bandwith limit !</li>
<li>without storage space limit!</li>
<li>keep as long as you wish !</li>
</ul>


<p><em>Let&rsquo;s go &hellip;</em></p>

<!--more-->


<h3>Step1: setup your project on <a href="http://github.com">github</a>.</h3>

<p>first , you need a <a href="http://github.com">github</a> account , if you do not have one , please apply one on <a href="http://github.com">github</a></p>

<p>second ,you need create a new repository  with your name , assume your github account name is <strong>yourname</strong> , you need create your project with the name <strong>yourname.github.io</strong> or <strong>yourname.github.com</strong> .</p>

<h3>Step2: <a href="http://octopress.org/docs/setup">Setup Octopress</a></h3>

<p>assume you are working on uinx or linux, you alredy have <a href="http://git-scm.com">git</a> installed.</p>

<p>then , <a href="http://octopress.org/docs/setup/rvm">install ruby with rvm</a> or <a href="http://octopress.org/docs/setup/rbenv">install ruby with Rbenv</a> , use  rvm for example :</p>

<p>run the following command from terminal to get rvm:
``` bash</p>

<pre><code>$ curl -L https://get.rvm.io | bash -s stable --ruby
</code></pre>

<p><code>
install ruby 1.9.3 or later [^1]:
</code>ruby</p>

<pre><code>$ rvm install 1.9.3 
$ rvm use 1.9.3 
$ rvm rubygems latest
</code></pre>

<p><code>
get octopress from github:
</code>bash</p>

<pre><code>$ git clone git://github.com/imathis/octopress.git octopress
$ cd octopress    # If you use RVM, You'll be asked if you trust the .rvmrc file (say yes)
$ ruby --version  # Should report Ruby 1.9.3
</code></pre>

<p><code>
install dependencies:
</code> ruby</p>

<pre><code>$ gem install bundler
$ bundle install
</code></pre>

<p><code>
install the default theme:
</code> ruby</p>

<pre><code>$ rake install
</code></pre>

<p><code>``
if you met some error when using</code>rake install<code>, please try</code>bundle exec rake install`<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> .</p>

<h3>Step3: <a href="http://octopress.org/docs/deploying/githug">deploy to github pages</a></h3>

<p>```ruby</p>

<pre><code>$ rake setup_github_pages #input your repo name as git@github.com://yourname/yourname.github.io(com).git
</code></pre>

<p>```
this command will do a couple things for you:</p>

<ul>
<li>Ask you for your github pages repository url.</li>
<li>Rename the remote pointing to imathis/octopress from ‘origin’ to ‘octopress’</li>
<li>Add your Github Pages repository as the default origin remote.</li>
<li>Switch the active branch from master to source.</li>
<li>Configure your blog’s url according to your repository.</li>
<li>Set up a master branch for your project in the _deploy directory, ready for deployment.</li>
</ul>


<p>Next run:
``` ruby</p>

<pre><code>$rake generate
$rake deploy
</code></pre>

<p>```
this will generate the content of your blog under _deploy directory and push it to master(gh-pages) branch ,
a few minites later, you can view your blog at <strong>yourname.github.io(com)</strong></p>

<h3>Step4: <a href="http://octopress.org/docs/configuring">Configure Octopress</a></h3>

<p>open _config.yml, change the config as you like:
```</p>

<pre><code>url: http://stevevallay.github.io
title: Zhibin's blog
subtitle: alway's smile :-)
author: zhibin
...
</code></pre>

<p>```</p>

<h3>Step5: <a href="http://octopress.org/odcs/blogging">Blogging</a></h3>

<p>``` ruby</p>

<pre><code>$ rake new_post['blog title']
</code></pre>

<p>```</p>

<p>then, it will generate a file <em>source/_post/YYYY-MM-DD-XXXX.markdown</em> , this is the blog source , you can edit it with <a href="http://http://daringfireball.net/projects/markdown/">markdown</a> , if you havn&rsquo;t familiar with <em>markdown</em> , refer <a href="http://en.wikipedia.org/wiki/Markdown">markdown wiki</a> or  <a href="http://wowubuntu.com/markdown">markdown in Chinese</a></p>

<h3>Step6: Generate &amp; Preview</h3>

<p>after finish one post , you can preview it:</p>

<p>``` ruby</p>

<pre><code>$ rake generate  #Generates posts and pages into the public directory
$ rake watch      # Watches source/ and sass/ for changes and regenerates
$ rake preview    # Watches, and mounts a webserver at http://localhost:4000
</code></pre>

<p>```</p>

<p>open browser <a href="http://localhost:4000">http://localhost:4000</a> you can see your blog.</p>

<p><em>Do not</em> forget two things :</p>

<ul>
<li>Commit sources of your blog to github , from your local source branch to source branch in github.
<code>bash
 $ git add .
 $ git commit -m "blog = github pages + octopress"
 $ git push origin source
</code></li>
<li>Deploy your blog, this will generate all files under_deploy and commit it to github master(gh-pages) branch.</li>
</ul>


<p>``` ruby</p>

<pre><code>$ rake deploy
</code></pre>

<p>```</p>

<p>Finally , you will get a similar blog as current <a href="http://stevevallay.github.io">stevevallay.github.io</a></p>

<h3><a href="http://http://octopress.org/docs/plugins/">Octopress Plugin</a></h3>

<p>the first octopress plugin i recommanded is <a href="http://octopress.org/docs/plugins/backtick-codeblock/">backtick code block</a> , it can help
add line number and syntax hightlight, octopress default installed it under plugin directory.
Simple you can use it as following:</p>

<p><strong>Syntax</strong></p>

<pre><code>``` [language] [title] [url] [line text]
    code snipt
```
</code></pre>

<p><strong>Example</strong></p>

<pre><code>``` bash
    $ sudo make me a sandwich
```
</code></pre>

<p>``` bash</p>

<pre><code>$ sudo make me a sandwich
</code></pre>

<p>```</p>

<h3><a href="http://disqus.com">Disqus</a></h3>

<p><code>Disqus</code> is a blog comment hosting service for websites and online communities that uses a networked platform.</p>

<p>Octopress already have support for Disqus, to add <code>Disqus</code> comments to your Octopress:</p>

<ol>
<li>You need <a href="https://disqus.com/profile/signup/">Sign up</a> an account of <code>Disqus</code> if you do not have one.</li>
<li><a href="https://disqus.com/admin/signup/?utm_source=New-Site">Register your site to Disqus</a>, input <code>Site URL</code> , <code>Site Name</code> and <code>Site ShortName</code>(remember this , it is used in step 3).</li>
<li>Modify the <code>_config.yml</code> under your octopress directory as following (add your <code>Site ShortName</code> and set <code>disqus_show_comment_count</code> as true).</li>
</ol>


<p>``` ruby</p>

<h1>Disqus Comments</h1>

<p>disqus_short_name: zhibin #this is the <code>Site ShortName</code> you input in step 2
disqus_show_comment_count: true
```</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p><code>bundle exec command</code> means <em>Execute a command in the context of the bundle</em>.使用 <code>bundle exec</code> 执行命令可以保证使用 <code>Gemfile</code> 中匹配的 <code>gem</code> 版本。<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
