<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DigitalOcean | Zhibin's blog]]></title>
  <link href="http://SteveVallay.github.io/blog/categories/digitalocean/atom.xml" rel="self"/>
  <link href="http://SteveVallay.github.io/"/>
  <updated>2014-05-22T17:44:17+08:00</updated>
  <id>http://SteveVallay.github.io/</id>
  <author>
    <name><![CDATA[zhibin]]></name>
    <email><![CDATA[zhibinwang.q@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[deploy app to digit ocean]]></title>
    <link href="http://SteveVallay.github.io/blog/2013/11/13/deploy-app-to-digit-ocean/"/>
    <updated>2013-11-13T16:06:00+08:00</updated>
    <id>http://SteveVallay.github.io/blog/2013/11/13/deploy-app-to-digit-ocean</id>
    <content type="html"><![CDATA[<p>一直想搞个 VPS 来外网测试自己的 <a href="http://192.241.192.134/">Rails 小程序</a>，在 <a href="http://v2ex.com/">V2EX</a> 上 浏览了一圈，发现大家使用的 VPS 比较集中在 <a href="https://www.linode.com/">Linode</a> , <a href="https://www.digitalocean.com/">DigitalOcean</a> 上，遂决定在这两个里面选择一个。</p>

<p>鉴于 <a href="https://www.digitalocean.com/">Digital Ocean</a> 比较便宜， 5$ 一个月，而且新用户可以使用优惠码冲 10$，相当于免费使用两个月了 ;&ndash;), 所以决定试用 <a href="https://www.digitalocean.com/">Digital Ocean</a>。</p>

<!--more -->


<h3>选择主机</h3>

<p>登录 <a href="https://www.digitalocean.com/">DigitalOcean</a> 之后，先要 <strong>CREATE</strong> 你的 VPS 主机的类型，选择节点，以及系统的 <em>Image</em>.</p>

<p>我选择的是 5$ 的那个套餐， <strong>512M/1CPU/20G/1TB</strong>, 节点选择 <strong>Sanfrancisco</strong> , 系统的 <em>Image</em> 选择的是 <strong>Ubuntu 12.04</strong>, 然后系统上其他的东西都是自己装的。</p>

<p>不过今天发现，原来在 <strong>Select Image</strong> 的时候还可以选择预装一些 <em>Application</em></p>

<p><img src="/images/blog/digitocean.png" alt="digital ocean pre-install application" /></p>

<p>预装的 <strong>Ruby on Rails</strong> 使用的是 <a href="http://wiki.nginx.org/Main">Ngnix</a> + <a href="http://unicorn.bogomips.org/">Unicorn</a> ,如果想快速部署的话可以考虑下。</p>

<h3>新建用户</h3>

<p>当你创建完成之后，<a href="https://www.digitalocean.com/">DigitalOcean</a> 会 Email 给你 VPS 的 IP, Username 和 Password 。但是 Username 是 root, 用这个超级用户来进行日常操作是不太合适的，所以我们需要新建自己的用户。</p>

<p><code>
useradd -m -d /home/your_user_name -s /bin/bash your_user_name
</code>
-d 指定 HOME 目录 home/your_user_name</p>

<p>-m 创建 HOME 目录，如果没有的话</p>

<p>-s 指定 shell 类型</p>

<p>为新用户创建密码</p>

<p>```
passwd your_user_name</p>

<h2>input your password twice</h2>

<p>```</p>

<p>创建之后，需要将这个用户加到 <strong>sudoer</strong> 里面去</p>

<p><code>
sudo adduser your_user_name sudo
</code></p>

<p>然后切换到 <strong>your_user_name</strong> 登录。</p>

<h3>安装 Ruby on Rails</h3>

<p>安装 Ruby on Rails 常用的有两种方式：  <a href="https://github.com/sstephenson/rbenv">rbenv</a>  和 <a href="https://rvm.io/">rvm</a> 。似乎 <a href="https://github.com/sstephenson/rbenv">rbenv</a>  会更干净一点，但是我觉得 <a href="https://rvm.io/">rvm</a> 更简单一点。</p>

<p>```</p>

<h1>安装 curl 和 git</h1>

<p>sudo apt-get install curl git</p>

<h1>使用 rvm 安装 ruby</h1>

<p>curl -L <a href="https://get.rvm.io">https://get.rvm.io</a> | bash -s stable &mdash;ruby</p>

<p>rvm install 2.0.0</p>

<p>```</p>

<p>然后 clone 下你的 project , 安装 gems ( Rails 在里面)</p>

<p>```</p>

<h1>git clone xxxx</h1>

<h1>cd your project</h1>

<p>gem install bundler</p>

<p>bundle install</p>

<p>```</p>

<p>这个时候，使用 <code>rails s</code> 启动自己的 rails application 应该没问题了，当然别忘了 <code>rake db:migrate</code></p>

<h3><a href="http://www.apache.org/">Apache2</a> + <a href="https://www.phusionpassenger.com/">Passenger</a></h3>

<p>虽然调试的时候可以使用  <a href="http://www.ruby-doc.org/stdlib-2.0/libdoc/webrick/rdoc/WEBrick.html">WEBrick</a> 这个 模块来提供 HTTP 服务，但是，一般发布的时候，我们都会选择性能更好更稳定的 <a href="http://www.apache.org/">Apache</a> 或者 <a href="http://wiki.nginx.org/Main">Nginx</a> , 貌似后者更猛一点。不过我还是选择了 <a href="http://www.apache.org/">Apache</a>。</p>

<p><a href="https://www.phusionpassenger.com/">Passenger</a> 似乎可以单独作为一个服务器，也可以辅助 <a href="http://www.apache.org/">Apache</a>  或者
<a href="http://wiki.nginx.org/Main">Nginx</a>。使用 <a href="http://www.apache.org/">Apache2</a> + <a href="https://www.phusionpassenger.com/">Passenger</a> 可以让你发布 app 简单的一毛啊。</p>

<p>```</p>

<h1>install apache2</h1>

<p>sudo apt-get install apache2 apache2-mpm-prefork apache2-prefork-dev</p>

<h1>install mysql, do not need this if you do not use mysql</h1>

<p>sudo apt-get install mysql-server mysql-client
sudo apt-get install libmysql-ruby libmysqlclient15-dev</p>

<h1>install passenger</h1>

<p>apt-get install libcurl4-openssl-dev
gem install passenger</p>

<h1>make swap partision , default no swap in digital ocean.</h1>

<p>dd if=/dev/zero of=/swap bs=1M count=1024
mkswap /swap
swapon /swap</p>

<h1>execute this script to install apache2 module of passenger</h1>

<p>passenger-install-apache2-module</p>

<p>```</p>

<p>执行 <code>passenger-install-apache2-module</code> 的时候，会打印出如下的配置信息(会因环境有所差异)：</p>

<blockquote><p>LoadModule passenger_module /home/goodluck/.rvm/gems/ruby-2.0.0-p247/gems/passenger-4.0.23/buildout/apache2/mod_passenger.so
PassengerRoot /home/goodluck/.rvm/gems/ruby-2.0.0-p247/gems/passenger-4.0.23
PassengerDefaultRuby /home/goodluck/.rvm/wrappers/ruby-2.0.0-p247/ruby</p></blockquote>

<p>然后把这段贴到 <code>/etc/apache2/httpd.conf</code> 文件中去，然后添加 apache2 的配置</p>

<p>```xml
<VirtualHost *:80></p>

<pre><code>  ServerName localhost
  # !!! Be sure to point DocumentRoot to 'public'!
  DocumentRoot /home/goodluck/work/rshare/readingbooks/public/
  RailsEnv development
  &lt;Directory /home/goodluck/work/rshare/readingbooks/public/ &gt;
     # This relaxes Apache security settings.
     AllowOverride all
     # MultiViews must be turned off.
     Options -MultiViews
  &lt;/Directory&gt;
</code></pre>

<p> </VirtualHost>
```</p>

<p>将两个 <code>/home/goodluck/work/rshare/readingbooks/public/</code> 改成自己的，如果是 development 模式需要添加 <code>RailsEnv development</code> ，这行后面不要添加注释。</p>

<p>Done !</p>

<p>Thanks for your reading and welcome your comments. Drop email to <em>zhibinwang.q@gmail.com</em> to contact me.</p>
]]></content>
  </entry>
  
</feed>
